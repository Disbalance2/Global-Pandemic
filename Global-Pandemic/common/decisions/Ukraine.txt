UKR_uop_decision_category = {
	UKR_t84_oplot = {
		fire_only_once = yes
		icon = GFX_decision_ukrpom_button
		custom_cost_trigger = {
			check_variable = { treasury > 2.2 }
		}
		custom_cost_text = cost_2_2
		days_remove = 210
		remove_effect = {
			add_tech_bonus = {
				name = Cat_MBT
				bonus = 0.1
				uses = 2
				category = Cat_MBT
			}
			if = {
				limit = { has_dlc = "No Step Back" }
				create_equipment_variant = {
					name = "T-84 Oplot-M"
					type = mbt_hull_1
					modules = {
						main_armament_slot = tank_medium_cannon_2
						turret_type_slot = tank_base_tank_turret
						suspension_type_slot = tank_torsion_bar_suspension
						armor_type_slot = tank_composite_armor_gen2
						engine_type_slot = tank_diesel_engine_gen4
						reload_type_slot = automatic_loading
						special_type_slot_1 = smoke_launchers_2
						special_type_slot_2 = additional_machine_guns
						special_type_slot_3 = smoothbore_atgm_gen2
						special_type_slot_4 = tank_battlestation_2
						special_type_slot_5 = reactive_armor_gen2
					}
					upgrades = {
						tank_nsb_armor_upgrade = 4
					}
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_t84_oplot"
			
		}
		ai_will_do = { factor = 100 }
	}
	UKR_bpla_oup = {
		custom_cost_trigger = {
			check_variable = { treasury > 0.7 }
		}
		custom_cost_text = cost_0_7
		fire_only_once = yes
		icon = GFX_decision_ukrpom_button
		days_remove = 140
		remove_effect = {
			add_tech_bonus = {
				name = GENERIC_drones
				uses = 2
				bonus = 0.5
				category = Cat_L_DRONE
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_bpla_oup"
			
		}
		ai_will_do = { factor = 100 }
	}
	UKR_btr70_m = {
		custom_cost_trigger = {
			check_variable = { treasury > 1.0 }
		}
		custom_cost_text = cost_1_0
		fire_only_once = yes
		icon = GFX_decision_ukrpom_button
		days_remove = 190
		remove_effect = {
			add_tech_bonus = {
				name = Cat_APC
				bonus = 0.1
				uses = 2
				category = Cat_APC
			}
			create_equipment_variant = {
				name = "BTR-70M"
				type = apc_hull_1
				parent_version = 1
				
				modules = {
					main_armament_slot = afv_machine_gun_2
					turret_type_slot = afv_base_turret
					suspension_type_slot = afv_tracked_suspension
					armor_type_slot = afv_steel_armor_gen2
					engine_type_slot = tank_diesel_engine_gen2
					special_type_slot_replacement = afv_additional_machine_guns
					special_type_slot_1 = afv_gun_ports
					special_type_slot_2 = smoke_launchers
					special_type_slot_4 = afv_battlestation_1
				}
				
				upgrades = {
					afv_nsb_armor_upgrade = 1
				}
				
								
				icon = "GFX_apc_hull_1_a"
			}
			
			add_equipment_to_stockpile = {
				type = apc_hull_1
				variant_name = "BTR-70M"
				amount = 20
			}
		}
		ai_will_do = { factor = 100 }
	}	
	UKR_BTR_4 = {
		fire_only_once = yes
		icon = GFX_decision_ukrpom_button
		custom_cost_trigger = {
			check_variable = { treasury > 2.7 }
		}
		days_remove = 230
		custom_cost_text = cost_2_7
		remove_effect = {
			add_tech_bonus = {
				name = Cat_APC
				bonus = 0.1
				uses = 2
				category = Cat_APC
			}
			set_technology = { afv_tech_2 = 1 }
			create_equipment_variant = {
				name = "BTR-4 Bucephalus"
				type = apc_hull_2
				parent_version = 0
				
				modules = {
					main_armament_slot = apc_small_autocannon_2
					turret_type_slot = afv_base_turret
					suspension_type_slot = afv_tracked_suspension
					armor_type_slot = afv_steel_armor_gen2
					engine_type_slot = tank_diesel_engine_gen3
					special_type_slot_replacement = afv_additional_machine_guns
					special_type_slot_1 = afv_atgm_gen2
					special_type_slot_2 = smoke_launchers
					special_type_slot_3 = afv_gun_ports
					special_type_slot_4 = afv_battlestation_2
				}
				
				upgrades = {
					afv_nsb_armor_upgrade = 1
				}
				
				icon = "GFX_apc_hull_1_a"
			}
			
		}
		ai_will_do = { factor = 10 }
	}
	UKR_bm21_k = {
		fire_only_once = yes
		icon = GFX_decision_ukrpom_button
		custom_cost_trigger = {
			check_variable = { treasury > 1.0 }
		}
		days_remove = 180
		custom_cost_text = cost_1_0
		remove_effect = {
			add_tech_bonus = {
				name = BRA_larger_artillery
				bonus = 0.1
				uses = 2
				category = Cat_ARTY
			}
			create_equipment_variant = {
				name = "BM-21K"
				type = spart_hull_0
				parent_version = 1
				
				modules = {
					arty_main_armament_slot = art_small_rocket_gen1
					chassis_type_slot = chassis_truck_gen1
					engine_type_slot = afv_gasoline_engine_gen2
					special_type_slot_1 = cluster_ammo_rocket_small_gen1
					special_type_slot_4 = art_battlestation_gen1
				}
				
				upgrades = {
					art_nsb_fire_upgrade = 4
				}
				
				
				icon = "GFX_SOV_SP_R_arty_0_medium"
			}
			
		}
		ai_will_do = { factor = 100 }
	}
	UKR_helicopter = {
		fire_only_once = yes
		icon = GFX_decision_ukrpom_button
		custom_cost_trigger = {
			check_variable = { treasury > 1.0 }
		}
		days_remove = 120
		custom_cost_text = cost_1_0
		remove_effect = {
			add_tech_bonus = {
				name = Cat_TRANS_HELI
				bonus = 0.2
				uses = 1
				category = Cat_TRANS_HELI
			}
		}
		ai_will_do = { factor = 100 }
	}
	
}
UKR_reorganize_the_national_guard_ukraine_decision_category = {
	UKR_reorganize_the_national_guard_first_brigade = {
		fire_only_once = yes
		icon = GFX_decision_natguard_1_button
		visible = {
			has_completed_focus = UKR_reorganize_the_national_guard
			
		}
		days_remove = 25
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_reorganize_the_national_guard_first_brigade"
			add_manpower = -1000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 698 }
				create_unit = {
					division = "name = \"1st Operational Brigade of the National Guard of Ukraine\" division_template = \"Natsionalna Hvardiya\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_reorganize_the_national_guard_second_brigade = {
		fire_only_once = yes
		icon = GFX_decision_natguard_25_button
		visible = {
			has_completed_focus = UKR_reorganize_the_national_guard
			
		}
		days_remove = 25
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_reorganize_the_national_guard_second_brigade"
			add_manpower = -1000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 698 }
				create_unit = {
					division = "name = \"25th Separate Brigade of Public Order Protection\" division_template = \"Natsionalna Hvardiya\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_reorganize_the_national_guard_third_brigade = {
		fire_only_once = yes
		icon = GFX_decision_natguard_4_button
		visible = {
			has_completed_focus = UKR_reorganize_the_national_guard
			
		}
		days_remove = 25
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_reorganize_the_national_guard_third_brigade"
			add_manpower = -1000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 698 }
				create_unit = {
					division = "name = \"4th Operational Brigade of the National Guard of Ukraine\" division_template = \"Natsionalna Hvardiya\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_reorganize_the_national_guard_four_brigade = {
		fire_only_once = yes
		icon = GFX_decision_natguard_23_button
		visible = {
			has_completed_focus = UKR_reorganize_the_national_guard
			owns_state = 694
		}
		days_remove = 25
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_reorganize_the_national_guard_four_brigade"
			add_manpower = -1000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 694 }
				create_unit = {
					division = "name = \"23rd Separate Brigade of Public Order Protection\" division_template = \"Natsionalna Hvardiya\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
}
UKR_tro_brigades_ukraine_decision_category = {
	UKR_territorial_defense_zapad = {
		fire_only_once = no
		icon = GFX_decision_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			OR = {
			owns_state = 700
			owns_state = 701
			owns_state = 699
			owns_state = 335
			}
			NOT = { has_country_flag = TRO_Zapad }
			has_country_flag = TRO_Zapad_close
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_zapad"
			set_country_flag = TRO_Zapad
			clr_country_flag = TRO_Zapad_close
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_zapad_close = {
		fire_only_once = no
		icon = GFX_decision_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			has_country_flag = TRO_Zapad
			NOT = { has_country_flag = TRO_Zapad_close }
			OR = {
				owns_state = 700
				owns_state = 701
				owns_state = 699
				owns_state = 335
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_zapad"
			clr_country_flag = TRO_Zapad
			set_country_flag = TRO_Zapad_close
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_1 = {
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		fire_only_once = yes
		icon = GFX_decision_100_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 700
			has_country_flag = TRO_Zapad
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_1"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 700 }
				create_unit = {
					division = "name = \"100th Separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_2 = {
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		fire_only_once = yes
		icon = GFX_decision_104_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 700
			has_country_flag = TRO_Zapad
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_2"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 700 }
				create_unit = {
					division = "name = \"104th separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_3 = {
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		fire_only_once = yes
		icon = GFX_decision_103_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 700
			has_country_flag = TRO_Zapad
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_3"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 700 }
				create_unit = {
					division = "name = \"103rd separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_4 = {
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		fire_only_once = yes
		icon = GFX_decision_125_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 700
			has_country_flag = TRO_Zapad
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_4"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 700 }
				create_unit = {
					division = "name = \"125th Separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_5 = {
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		fire_only_once = yes
		icon = GFX_decision_105_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 700
			has_country_flag = TRO_Zapad
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_5"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 700 }
				create_unit = {
					division = "name = \"105th Separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_6 = {
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		fire_only_once = yes
		icon = GFX_decision_106_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 699
			has_country_flag = TRO_Zapad
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_6"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 699 }
				create_unit = {
					division = "name = \"106th separate Territorial Defense brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_7 = {
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		fire_only_once = yes
		icon = GFX_decision_101_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 701
			has_country_flag = TRO_Zapad
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_7"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 701 }
				create_unit = {
					division = "name = \"101st separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_8 = {
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		fire_only_once = yes
		icon = GFX_decision_102_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 700
			has_country_flag = TRO_Zapad
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_8"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 700 }
				create_unit = {
					division = "name = \"102nd separate Territorial Defense brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_9 = {
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		fire_only_once = yes
		icon = GFX_decision_107_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 335
			has_country_flag = TRO_Zapad
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_9"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 335 }
				create_unit = {
					division = "name = \"107th separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_south = {
		fire_only_once = no
		icon = GFX_decision_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			OR = {
			owns_state = 700
			owns_state = 701
			owns_state = 699
			owns_state = 335
			}
			NOT = { has_country_flag = TRO_South }
			has_country_flag = TRO_South_close
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_south"
			set_country_flag = TRO_South
			clr_country_flag = TRO_South_close
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_south_close = {
		fire_only_once = no
		icon = GFX_decision_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			has_country_flag = TRO_South
			NOT = { has_country_flag = TRO_South_close }
			OR = {
				owns_state = 1086
				owns_state = 1085
				owns_state = 1090
				owns_state = 699
				owns_state = 695
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_south"
			clr_country_flag = TRO_South
			set_country_flag = TRO_South_close
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_10 = {
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		fire_only_once = yes
		icon = GFX_decision_120_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 699
			has_country_flag = TRO_South
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_10"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 699 }
				create_unit = {
					division = "name = \"120th separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_11 = {
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		fire_only_once = yes
		icon = GFX_decision_121_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 1090
			has_country_flag = TRO_South
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_11"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 1090 }
				create_unit = {
					division = "name = \"121st separate Territorial defense brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_12 = {
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		fire_only_once = yes
		icon = GFX_decision_122_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 695
			has_country_flag = TRO_South
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_12"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 695 }
				create_unit = {
					division = "name = \"122nd separate Territorial Defense brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_13 = {
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		fire_only_once = yes
		icon = GFX_decision_123_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 1086
			has_country_flag = TRO_South
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_13"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 1086 }
				create_unit = {
					division = "name = \"123rd separate Territorial defense brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_14 = {
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		fire_only_once = yes
		icon = GFX_decision_124_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 1085
			has_country_flag = TRO_South
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_14"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 1085 }
				create_unit = {
					division = "name = \"124th separate Territorial Defense brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_15 = {
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		fire_only_once = yes
		icon = GFX_decision_126_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 695
			has_country_flag = TRO_South
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_15"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 695 }
				create_unit = {
					division = "name = \"126th separate Territorial Defense brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	} 
	UKR_territorial_defense_north = {
		fire_only_once = no
		icon = GFX_decision_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			OR = {
			owns_state = 700
			owns_state = 701
			owns_state = 699
			owns_state = 335
			}
			NOT = { has_country_flag = TRO_North }
			has_country_flag = TRO_North_close
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_north"
			set_country_flag = TRO_North
			clr_country_flag = TRO_North_close
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_north_close = {
		fire_only_once = no
		icon = GFX_decision_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			has_country_flag = TRO_North
			NOT = { has_country_flag = TRO_North_close }
			OR = {
				owns_state = 697
				owns_state = 699
				owns_state = 698
				owns_state = 1089
				owns_state = 1088
				owns_state = 1091
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_north"
			clr_country_flag = TRO_North
			set_country_flag = TRO_North_close
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_16 = {
		fire_only_once = yes
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		icon = GFX_decision_241_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 698
			has_country_flag = TRO_North
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_16"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 698 }
				create_unit = {
					division = "name = \"241st separate Territorial Defense brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	} 
	UKR_territorial_defense_17 = {
		fire_only_once = yes
		icon = GFX_decision_112_tro_button
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 698
			has_country_flag = TRO_North
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_17"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 698 }
				create_unit = {
					division = "name = \"112th separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	} 
	UKR_territorial_defense_18 = {
		fire_only_once = yes
		icon = GFX_decision_114_tro_button
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 698
			has_country_flag = TRO_North
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_18"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 698 }
				create_unit = {
					division = "name = \"114th separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_19 = {
		fire_only_once = yes
		icon = GFX_decision_115_tro_button
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 699
			has_country_flag = TRO_North
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_19"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 699 }
				create_unit = {
					division = "name = \"115th separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_20 = {
		fire_only_once = yes
		icon = GFX_decision_118_tro_button
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 1091
			has_country_flag = TRO_North
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_20"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 1091 }
				create_unit = {
					division = "name = \"118th separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_21 = {
		fire_only_once = yes
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		icon = GFX_decision_119_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 697
			has_country_flag = TRO_North
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_21"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 697 }
				create_unit = {
					division = "name = \"119th separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_22 = {
		fire_only_once = yes
		icon = GFX_decision_117_tro_button
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 1088
			has_country_flag = TRO_North
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_22"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 1088 }
				create_unit = {
					division = "name = \"117th separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_23 = {
		fire_only_once = yes
		icon = GFX_decision_116_tro_button
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 1089
			has_country_flag = TRO_North
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_23"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 1089 }
				create_unit = {
					division = "name = \"116th separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_east = {
		fire_only_once = no
		icon = GFX_decision_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			OR = {
			owns_state = 700
			owns_state = 701
			owns_state = 699
			owns_state = 335
			}
			NOT = { has_country_flag = TRO_East }
			has_country_flag = TRO_East_close
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_east"
			set_country_flag = TRO_East
			clr_country_flag = TRO_East_close
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_east_close = {
		fire_only_once = no
		icon = GFX_decision_tro_button
		visible = {
			has_completed_focus = UKR_ter_oborona
			has_country_flag = TRO_East
			NOT = { has_country_flag = TRO_East_close }
			OR = {
				owns_state = 1087
				owns_state = 696
				owns_state = 694
				owns_state = 1030
				owns_state = 1076
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_east"
			clr_country_flag = TRO_East
			set_country_flag = TRO_East_close
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_24 = {
		fire_only_once = yes
		icon = GFX_decision_108_tro_button
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 1087
			has_country_flag = TRO_East
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_24"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 1087 }
				create_unit = {
					division = "name = \"108th separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_25 = {
		fire_only_once = yes
		icon = GFX_decision_128_tro_button
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 1087
			has_country_flag = TRO_East
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_25"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 1087 }
				create_unit = {
					division = "name = \"128th separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_26 = {
		fire_only_once = yes
		icon = GFX_decision_129_tro_button
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 1087
			has_country_flag = TRO_East
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_26"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 1087 }
				create_unit = {
					division = "name = \"129th separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_27 = {
		fire_only_once = yes
		icon = GFX_decision_127_tro_button
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 696
			has_country_flag = TRO_East
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_27"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 696 }
				create_unit = {
					division = "name = \"127th separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_28 = {
		fire_only_once = yes
		icon = GFX_decision_113_tro_button
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 696
			has_country_flag = TRO_East
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_28"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 696 }
				create_unit = {
					division = "name = \"113th separate Territorial Defense brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_29 = {
		fire_only_once = yes
		icon = GFX_decision_110_tro_button
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 694
			has_country_flag = TRO_East
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_29"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 694 }
				create_unit = {
					division = "name = \"110th separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_30 = {
		fire_only_once = yes
		icon = GFX_decision_109_tro_button
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 1030
			has_country_flag = TRO_East
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_30"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 1030 }
				create_unit = {
					division = "name = \"109th separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_territorial_defense_31 = {
		fire_only_once = yes
		icon = GFX_decision_111_tro_button
		custom_cost_trigger = {
			check_variable = { treasury > 0.5 }
		}
		custom_cost_text = cost_0_5
		visible = {
			has_completed_focus = UKR_ter_oborona
			owns_state = 1076
			has_country_flag = TRO_East
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_territorial_defense_31"
			add_manpower = -3000
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 1076 }
				create_unit = {
					division = "name = \"111th separate Territorial Defense Brigade\" division_template = \"Bryhada TRO\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
}
UKR_Interlegion_decision_category = {
	UKR_interlegion_1 = {
		fire_only_once = yes
		icon = GFX_decision_legion_belarus_button
		cost = 10
		available = {
			has_war_with = SOV
			NOT = { BLR = { nationalist_right_wing_populists_are_in_power = yes } }
		}
		visible = {
			has_completed_focus = UKR_inter_legion
		}
		days_remove = 25
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_interlegion_1"
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 698 }
				create_unit = {
					division = "name = \"Kastus Kalinovsky Regiment\" division_template = \"Foreign Volunteer Unit\" start_experience_factor = 0.4"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_interlegion_2 = {
		fire_only_once = yes
		icon = GFX_decision_legion_georgia2_button
		cost = 10
		available = {
			has_war_with = SOV
			NOT = { has_war_with = GEO }
		}
		visible = {
			has_completed_focus = UKR_inter_legion
		}
		days_remove = 25
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_interlegion_2"
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 698 }
				create_unit = {
					division = "name = \"2nd International Legion\" division_template = \"Foreign Volunteer Unit\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_interlegion_3 = {
		fire_only_once = yes
		icon = GFX_decision_legion_georgia_button
		cost = 10
		available = {
			has_war_with = SOV
			NOT = { has_war_with = GEO }
		}
		visible = {
			has_completed_focus = UKR_inter_legion
		}
		days_remove = 25
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_interlegion_3"
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 698 }
				create_unit = {
					division = "name = \"Georgian National Legion\" division_template = \"Foreign Volunteer Unit\" start_experience_factor = 0.4"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_interlegion_4 = {
		fire_only_once = yes
		icon = GFX_decision_legion_ichkeria_button
		cost = 15
		available = {
			has_war_with = SOV
		}
		days_remove = 25
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_interlegion_4"
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 698 }
				create_unit = {
					division = "name = \"Separate Special Purpose Battalion of the Ministry of Defense of the Chechen Republic of Ichkeria\" division_template = \"Foreign Volunteer Unit\" start_experience_factor = 0.4"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_interlegion_5 = {
		fire_only_once = yes
		icon = GFX_decision_legion_ichkeria_button
		cost = 15
		available = {
			has_war_with = SOV
		}
		days_remove = 25
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_interlegion_5"
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 698 }
				create_unit = {
					division = "name = \"Chechen Peacekeeping Battalion Named After Khamzat Gelayev\" division_template = \"Foreign Volunteer Unit\" start_experience_factor = 0.4"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_interlegion_6 = {
		fire_only_once = yes
		icon = GFX_decision_legion_dudaev_button
		cost = 15
		available = {
			has_war_with = SOV
		}
		days_remove = 25
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_interlegion_6"
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 698 }
				create_unit = {
					division = "name = \"Chechen Peacekeeping Battalion Named After Dzhokhar Dudayev\" division_template = \"Foreign Volunteer Unit\" start_experience_factor = 0.4"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_interlegion_7 = {
		fire_only_once = yes
		icon = GFX_decision_legion_dagestan_button
		cost = 15
		available = {
			has_war_with = SOV
		}
		visible = {
			has_completed_focus = UKR_inter_legion
		}
		days_remove = 25
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_interlegion_7"
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 698 }
				create_unit = {
					division = "name = \"Dagestan Volunteer Battalion Named After Imam Shamil\" division_template = \"Foreign Volunteer Unit\" start_experience_factor = 0.4"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_interlegion_8 = {
		fire_only_once = yes
		icon = GFX_decision_legion_canada_button
		cost = 25
		available = {
			has_war_with = SOV
		}
		visible = {
			has_completed_focus = UKR_inter_legion
		}
		days_remove = 25
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_interlegion_8"
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 698 }
				create_unit = {
					division = "name = \"Canadian-Ukrainian Brigade\" division_template = \"Foreign Volunteer Unit\" start_experience_factor = 0.4"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_interlegion_11 = {
		fire_only_once = yes
		icon = GFX_decision_legion_norman_button
		cost = 25
		available = {
			has_war_with = SOV
		}
		visible = {
			has_completed_focus = UKR_inter_legion
		}
		days_remove = 25
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_interlegion_11"
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 698 }
				create_unit = {
					division = "name = \"Norman Brigade\" division_template = \"Foreign Volunteer Unit\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_interlegion_12 = {
		fire_only_once = yes
		icon = GFX_decision_legion_pdr_button
		cost = 15
		available = {
			has_war_with = SOV
			NOT = { country_exists = POL }
		}
		visible = {
			has_completed_focus = UKR_inter_legion
		}
		days_remove = 25
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_interlegion_12"
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 698 }
				create_unit = {
					division = "name = \"Polish Volunteer Corps\" division_template = \"Foreign Volunteer Unit\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_interlegion_13 = {
		fire_only_once = yes
		icon = GFX_decision_legion_krym_button
		cost = 10
		available = {
			has_war_with = SOV
			SOV = { owns_state = 669 }
		}
		visible = {
			has_completed_focus = UKR_inter_legion
		}
		days_remove = 25
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_interlegion_13"
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 698 }
				create_unit = {
					division = "name = \"Krym Battalion\" division_template = \"Foreign Volunteer Unit\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
}
UKR_Natpolice_decision_category = {
	UKR_police_mobilisation_1 = {
		fire_only_once = yes
		icon = GFX_decision_police_kiev_button
		cost = 15
		visible = {
			has_completed_focus = UKR_police_reform
		}
		days_remove = 25
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_police_mobilisation_1"
			add_manpower = -200
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 698 }
				create_unit = {
					division = "name = \"Police Regiment Kiev\" division_template = \"Special Purpose Police Patrol Service\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 100 }
	}
	UKR_police_mobilisation_2 = {
		fire_only_once = yes
		cost = 15
		icon = GFX_decision_police_ivanofra_button
		visible = {
			has_completed_focus = UKR_police_reform
		}
		days_remove = 25
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_police_mobilisation_2"
			add_manpower = -200
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 700 }
				create_unit = {
					division = "name = \"Police Regiment Ivano-Frankivsk\" division_template = \"Special Purpose Police Patrol Service\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 10 }
	}
	UKR_police_mobilisation_3 = {
		fire_only_once = yes
		cost = 15
		icon = GFX_decision_police_dnipro_button
		visible = {
			has_completed_focus = UKR_police_reform
		}
		days_remove = 25
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_police_mobilisation_3"
			add_manpower = -200
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 1087 }
				create_unit = {
					division = "name = \"Police Regiment Dnipro-1\" division_template = \"Special Purpose Police Patrol Service\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 10 }
	}
	UKR_police_mobilisation_4 = {
		fire_only_once = yes
		cost = 15
		icon = GFX_decision_police_mirotvorec_button
		visible = {
			has_completed_focus = UKR_police_reform
		}
		days_remove = 25
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_police_mobilisation_4"
			add_manpower = -200
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 698 }
				create_unit = {
					division = "name = \"Police Regiment Mirotvorec\" division_template = \"Special Purpose Police Patrol Service\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 10 }
	}
	UKR_police_mobilisation_5 = {
		fire_only_once = yes
		cost = 15
		icon = GFX_decision_police_poltava_button
		visible = {
			has_completed_focus = UKR_police_reform
		}
		days_remove = 25
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_police_mobilisation_5"
			add_manpower = -200
			random_owned_controlled_state = {
				limit = { ROOT = { has_full_control_of_state = PREV } }
				prioritize = { 1089 }
				create_unit = {
					division = "name = \"Police Regiment Poltava\" division_template = \"Special Purpose Police Patrol Service\" start_experience_factor = 0.1"
					owner = UKR
				}
			}
		}
		ai_will_do = { factor = 10 }
	}
}
UKR_UDA_decision_category = {
	UKR_integrate_UDA = {
		icon = GFX_decision_uda_button
		days_remove = 10
		days_re_enable = 60
		fire_only_once = no
	
		visible = {
			NOT = { has_emerging_aligned_goverment = yes }
			has_idea = UKR_UDA_encouraged
			
		}
	
			
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove  UKR_integrate_UDA"
			swap_ideas = {
				remove_idea = UKR_UDA_encouraged
				add_idea = UKR_UDA_integrated
			}
	
			delete_unit_template_and_units = {
				division_template = "Ukranian Volunteer Unit"
				disband = yes
			}
			
		}
	
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				has_war = no
			}
		}
	}
}

UKR_Donbass_war_category = {
	start_attack_on_Donetsk_oblast_from_Donetsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			controls_state = 693
			NOT = { controls_state = 1030 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Donetsk_oblast_from_Donetsk"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Donetsk_oblast_from_Donetsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1030
						defender = 693
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 693
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1030
						num_provinces = 4
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Luhansk_from_Donetsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1075
			}
		}

		visible = {
			controls_state = 693
			NOT = { controls_state = 1075 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Luhansk_from_Donetsk"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Luhansk_from_Donetsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1075
						defender = 693
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 693
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1075
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Luhansk_oblast_from_Luhansk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1076
			}
		}

		visible = {
			controls_state = 1075
			NOT = { controls_state = 1076 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Luhansk_oblast_from_Luhansk"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Luhansk_oblast_from_Luhansk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1076
						defender = 1075
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1075
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Luhansk_oblast_from_Donetsk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1076
			}
		}

		visible = {
			controls_state = 1030
			NOT = { controls_state = 1076 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Luhansk_oblast_from_Donetsk_Oblast"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Luhansk_oblast_from_Donetsk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1076
						defender = 1030
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Kharkiv_from_Donetsk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 696
			}
		}

		visible = {
			controls_state = 1030
			NOT = { controls_state = 696 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Kharkiv_from_Donetsk_Oblast"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Kharkiv_from_Donetsk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 696
						defender = 1030
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1030
						num_provinces = 1
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 696
						num_provinces = 3
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Kharkiv_from_Luhansk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 696
			}
		}

		visible = {
			controls_state = 1076
			NOT = { controls_state = 696 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Kharkiv_from_Luhansk_Oblast"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Kharkiv_from_Luhansk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 696
						defender = 1076
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 696
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Zaporizha_from_Donetsk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 694
			}
		}

		visible = {
			controls_state = 1030
			NOT = { controls_state = 694 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Zaporizha_from_Donetsk_Oblast"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Zaporizha_from_Donetsk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 694
						defender = 1030
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 694
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Zaporizha_from_Dnepropetrovsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 694
			}
		}

		visible = {
			controls_state = 1087
			NOT = { controls_state = 694 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Zaporizha_from_Dnepropetrovsk"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Zaporizha_from_Dnepropetrovsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 694
						defender = 1087
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1087
						num_provinces = 4
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 694
						num_provinces = 4
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Dnepropetrovsk_from_Donetsk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			controls_state = 1030
			NOT = { controls_state = 1087 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Dnepropetrovsk_from_Donetsk_Oblast"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Dnepropetrovsk_from_Donetsk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1087
						defender = 1030
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1087
						num_provinces = 1
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Dnepropetrovsk_from_Kharkiv = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			controls_state = 696
			NOT = { controls_state = 1087 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Dnepropetrovsk_from_Kharkiv"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Dnepropetrovsk_from_Kharkiv"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1087
						defender = 696
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 696
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1087
						num_provinces = 4
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Kherson_from_Dnepropetrovsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1085
			}
		}

		visible = {
			controls_state = 1087
			NOT = { controls_state = 1085 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Kherson_from_Dnepropetrovsk"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Kherson_from_Dnepropetrovsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1085
						defender = 1087
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1087
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1085
						num_provinces = 3
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Kherson_from_Zaporize = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1085
			}
		}

		visible = {
			controls_state = 694
			NOT = { controls_state = 1085 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Kherson_from_Zaporize"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Kherson_from_Zaporize"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1085
						defender = 694
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 694
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1085
						num_provinces = 3
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	# reverse
	start_attack_on_Donetsk_from_Donetsk_oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 693
			}
		}

		visible = {
			controls_state = 1030
			NOT = { controls_state = 693 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Donetsk_from_Donetsk_oblast"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Donetsk_from_Donetsk_oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 693
						defender = 1030
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1030
						num_provinces = 4
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 693
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Donetsk_from_Luhansk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 693
			}
		}

		visible = {
			controls_state = 1075
			NOT = { controls_state = 693 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Donetsk_from_Luhansk"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Donetsk_from_Luhansk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 693
						defender = 1075
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1075
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 693
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Luhansk_from_Luhansk_oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1075
			}
		}

		visible = {
			controls_state = 1076
			NOT = { controls_state = 1075 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Luhansk_from_Luhansk_oblast"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Luhansk_from_Luhansk_oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1075
						defender = 1076
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1075
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Donetsk_oblast_from_Luhansk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			controls_state = 1076
			NOT = { controls_state = 1030 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Donetsk_oblast_from_Luhansk_Oblast"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Donetsk_oblast_from_Luhansk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1030
						defender = 1076
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Donetsk_Oblast_from_Kharkiv = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			controls_state = 696
			NOT = { controls_state = 1030 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Donetsk_Oblast_from_Kharkiv"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Donetsk_Oblast_from_Kharkiv"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1030
						defender = 696
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 696
						num_provinces = 3
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1030
						num_provinces = 1
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Luhansk_Oblast_from_Kharkiv = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1076
			}
		}

		visible = {
			controls_state = 696
			NOT = { controls_state = 1076 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Luhansk_Oblast_from_Kharkiv"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Luhansk_Oblast_from_Kharkiv"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1076
						defender = 696
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 696
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Donetsk_Oblast_from_Zaporiza = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			controls_state = 694
			NOT = { controls_state = 1030 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Donetsk_Oblast_from_Zaporiza"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Donetsk_Oblast_from_Zaporiza"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1030
						defender = 694
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 694
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Dnepropetrovsk_from_Zaporizha = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			controls_state = 694
			NOT = { controls_state = 1087 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Dnepropetrovsk_from_Zaporizha"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Dnepropetrovsk_from_Zaporizha"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1087
						defender = 694
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 694
						num_provinces = 4
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1087
						num_provinces = 4
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Donetsk_Oblast_from_Dnepropetrovsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			controls_state = 1087
			NOT = { controls_state = 1030 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Donetsk_Oblast_from_Dnepropetrovsk"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Donetsk_Oblast_from_Dnepropetrovsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1030
						defender = 1087
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1087
						num_provinces = 1
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Kharkiv_from_Dnepropetrovsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 696
			}
		}

		visible = {
			controls_state = 1087
			NOT = { controls_state = 696 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Kharkiv_from_Dnepropetrovsk"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Kharkiv_from_Dnepropetrovsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 696
						defender = 1087
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1087
						num_provinces = 4
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 696
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Dnepropetrovsk_from_Kherson = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			controls_state = 1085
			NOT = { controls_state = 1087 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Dnepropetrovsk_from_Kherson"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Dnepropetrovsk_from_Kherson"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1087
						defender = 1085
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1085
						num_provinces = 3
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1087
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Zaporize_from_Kherson = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 694
			}
		}

		visible = {
			controls_state = 1085
			NOT = { controls_state = 694 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Zaporize_from_Kherson"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Zaporize_from_Kherson"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 694
						defender = 1085
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1085
						num_provinces = 3
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 694
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	# Ukr only
	start_attack_on_Kherson_from_Mykolaiv = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1085
			}
		}

		visible = {
			controls_state = 1086
			NOT = { controls_state = 1085 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Kherson_from_Mykolaiv"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Kherson_from_Mykolaiv"
			start_border_war = {
				change_state_after_war = no
				attacker = {
					state = 1086
					num_provinces = 2
					on_win = ukraine_donbass_war.1
					on_lose = ukraine_donbass_war.2
					on_cancel = ukraine_donbass_war.3
				}
				defender = {
					state = 1085
					num_provinces = 4
					on_win = ukraine_donbass_war.5
					on_lose = ukraine_donbass_war.4
					on_cancel = ukraine_donbass_war.6
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Dnepropetrovsk_from_Poltava = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			controls_state = 1089
			NOT = { controls_state = 1087 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Dnepropetrovsk_from_Poltava"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Dnepropetrovsk_from_Poltava"
			start_border_war = {
				change_state_after_war = no
				attacker = {
					state = 1089
					num_provinces = 3
					on_win = ukraine_donbass_war.1
					on_lose = ukraine_donbass_war.2
					on_cancel = ukraine_donbass_war.3
				}
				defender = {
					state = 1087
					num_provinces = 3
					on_win = ukraine_donbass_war.5
					on_lose = ukraine_donbass_war.4
					on_cancel = ukraine_donbass_war.6
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Kharkiv_from_Poltava = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 696
			}
		}

		visible = {
			controls_state = 1089
			NOT = { controls_state = 696 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Kharkiv_from_Poltava"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Kharkiv_from_Poltava"
			start_border_war = {
				change_state_after_war = no
				attacker = {
					state = 1089
					num_provinces = 2
					on_win = ukraine_donbass_war.1
					on_lose = ukraine_donbass_war.2
					on_cancel = ukraine_donbass_war.3
				}
				defender = {
					state = 696
					num_provinces = 4
					on_win = ukraine_donbass_war.5
					on_lose = ukraine_donbass_war.4
					on_cancel = ukraine_donbass_war.6
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	# Getting territory
	grab_Kherson = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1085
			}
		}

		visible = {
			OR = {
				controls_state = 1087
				controls_state = 1086
				controls_state = 694
			}

			NOT = { controls_state = 1085 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision grab_Kherson"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove grab_Kherson"
			transfer_state = 1085
		}

		ai_will_do = { factor = 10 }
	}

	grab_Dnipro = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			OR = {
				controls_state = 1085
				controls_state = 1086
				controls_state = 1090
				controls_state = 1089
				controls_state = 696
				controls_state = 694
				controls_state = 1030
			}

			NOT = { controls_state = 1087 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision grab_Dnipro"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove grab_Dnipro"
			transfer_state = 1087
		}

		ai_will_do = { factor = 10 }
	}

	grab_Zapor = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 694
			}
		}

		visible = {
			OR = {
				controls_state = 1087
				controls_state = 1085
				controls_state = 1030
			}

			NOT = { controls_state = 694 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision grab_Zapor"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove grab_Zapor"
			transfer_state = 694
		}

		ai_will_do = { factor = 10 }
	}

	grab_Kharkiv = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 696
			}
		}

		visible = {
			OR = {
				controls_state = 1087
				controls_state = 1088
				controls_state = 1089
				controls_state = 1030
				controls_state = 1076
			}

			NOT = { controls_state = 696 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision grab_Kharkiv"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove grab_Kharkiv"
			transfer_state = 696
		}

		ai_will_do = { factor = 10 }
	}

	grab_DonObl = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			OR = {
				controls_state = 696
				controls_state = 694
				controls_state = 1087
				controls_state = 1076
				controls_state = 1075
				controls_state = 693
			}

			NOT = { controls_state = 1030 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision grab_DonObl"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove grab_DonObl"
			transfer_state = 1030
		}

		ai_will_do = { factor = 10 }
	}

	grab_LuhObl = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1076
			}
		}

		visible = {
			OR = {
				controls_state = 696
				controls_state = 1030
				controls_state = 1075
			}

			NOT = { controls_state = 1076 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision grab_LuhObl"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove grab_LuhObl"
			transfer_state = 1076
		}

		ai_will_do = { factor = 10 }
	}

	# Critical stuff
	finish_nov = {
		days_remove = 50
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 693
			}
		}

		visible = {
			controls_state = 1030
			controls_state = 1076
			NOT = { controls_state = 1075 }
			NOT = { controls_state = 693 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
			DPR = {
				check_variable = { num_of_controlled_states < 2 }
			}
			LPR = {
				check_variable = { num_of_controlled_states < 2 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision finish_nov"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
			custom_effect_tooltip = russia_will_be_angry_TT
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove finish_nov"
			if = {
				limit = { country_exists = SOV }
				SOV = { country_event = ukraine_donbass_war.7 }
			}
			else = {
				UKR = {
					if = {
						limit = { country_exists = DPR }
						annex_country = {
							target = DPR
							transfer_troops = no
						}
					}
					if = {
						limit = { country_exists = LPR }
						annex_country = {
							target = LPR
							transfer_troops = no
						}
					}
					if = {
						limit = { country_exists = NOV }
						annex_country = {
							target = NOV
							transfer_troops = no
						}
					}
					country_event = { id = ukraine_revolution.3 days = 1 }
				}
			}
		}

		ai_will_do = {
			factor = 2
			modifier = {
				factor = 0
				OR = {
					has_idea = UKR_military_state_6
					has_idea = UKR_military_state_5
					has_idea = UKR_military_state_4
					has_idea = UKR_military_state_3
				}
			}
			modifier = {
				add = -2
				strength_ratio = {
					tag = SOV
					ratio > 1.4
				}
			}
			modifier = {
				add = 5
				OR = {
					NOT = { country_exists = SOV }
					SOV = {
						has_western_aligned_government = yes
					}
				}
			}
		}
	}

	# Ukraine veterans
	ukr_veterans = {
		days_remove = 50
		days_re_enable = 200
		fire_only_once = yes

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_49_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 49 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision ukr_veterans"
			add_war_support = 0.05
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove ukr_veterans"
			subtract_from_variable = { Donbass_war_progress = 50 }
			add_ideas = UKR_veteran_movement
		}

		ai_will_do = { factor = 10 }
	}
}

NOV_Donbass_war_category = {
	nv_start_attack_on_Donetsk_oblast_from_Donetsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			controls_state = 693
			UKR = { controls_state = 1030 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Donetsk_oblast_from_Donetsk"
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Donetsk_oblast_from_Donetsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1030
						defender = 693
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 693
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1030
						num_provinces = 4
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Luhansk_from_Donetsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1075
			}
		}

		visible = {
			controls_state = 693
			UKR = { controls_state = 1075 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Luhansk_from_Donetsk"
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Luhansk_from_Donetsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1075
						defender = 693
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 693
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1075
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Luhansk_oblast_from_Luhansk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1076
			}
		}

		visible = {
			controls_state = 1075
			UKR = { controls_state = 1076 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Luhansk_oblast_from_Luhansk"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Luhansk_oblast_from_Luhansk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1076
						defender = 1075
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1075
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Luhansk_oblast_from_Donetsk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1076
			}
		}

		visible = {
			controls_state = 1030
			UKR = { controls_state = 1076 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Luhansk_oblast_from_Donetsk_Oblast"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Luhansk_oblast_from_Donetsk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1076
						defender = 1030
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Kharkiv_from_Donetsk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 696
			}
		}

		visible = {
			controls_state = 1030
			UKR = { controls_state = 696 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Kharkiv_from_Donetsk_Oblast"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Kharkiv_from_Donetsk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 696
						defender = 1030
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1030
						num_provinces = 1
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 696
						num_provinces = 3
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Kharkiv_from_Luhansk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 696
			}
		}

		visible = {
			controls_state = 1076
			UKR = { controls_state = 696 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Kharkiv_from_Luhansk_Oblast"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Kharkiv_from_Luhansk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 696
						defender = 1076
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 696
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Zaporizha_from_Donetsk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 694
			}
		}

		visible = {
			controls_state = 1030
			UKR = { controls_state = 694 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Zaporizha_from_Donetsk_Oblast"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Zaporizha_from_Donetsk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 694
						defender = 1030
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 694
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Zaporizha_from_Dnepropetrovsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 694
			}
		}

		visible = {
			controls_state = 1087
			UKR = { controls_state = 694 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Zaporizha_from_Dnepropetrovsk"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Zaporizha_from_Dnepropetrovsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 694
						defender = 1087
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1087
						num_provinces = 4
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 694
						num_provinces = 4
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Dnepropetrovsk_from_Donetsk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			controls_state = 1030
			UKR = { controls_state = 1087 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Dnepropetrovsk_from_Donetsk_Oblast"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Dnepropetrovsk_from_Donetsk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1087
						defender = 1030
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1087
						num_provinces = 1
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Dnepropetrovsk_from_Kharkiv = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			controls_state = 696
			UKR = { controls_state = 1087 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Dnepropetrovsk_from_Kharkiv"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Dnepropetrovsk_from_Kharkiv"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1087
						defender = 696
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 696
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1087
						num_provinces = 4
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Kherson_from_Dnepropetrovsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1085
			}
		}

		visible = {
			controls_state = 1087
			UKR = { controls_state = 1085 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Kherson_from_Dnepropetrovsk"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Kherson_from_Dnepropetrovsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1085
						defender = 1087
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1087
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1085
						num_provinces = 3
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Kherson_from_Zaporize = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1085
			}
		}

		visible = {
			controls_state = 694
			UKR = { controls_state = 1085 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Kherson_from_Zaporize"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Kherson_from_Zaporize"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1085
						defender = 694
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 694
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1085
						num_provinces = 3
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	# reverse
	nv_start_attack_on_Donetsk_from_Donetsk_oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 693
			}
		}

		visible = {
			controls_state = 1030
			UKR = { controls_state = 693 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Donetsk_from_Donetsk_oblast"
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Donetsk_from_Donetsk_oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 693
						defender = 1030
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1030
						num_provinces = 4
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 693
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Donetsk_from_Luhansk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 693
			}
		}

		visible = {
			controls_state = 1075
			UKR = { controls_state = 693 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Donetsk_from_Luhansk"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Donetsk_from_Luhansk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 693
						defender = 1075
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1075
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 693
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Luhansk_from_Luhansk_oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1075
			}
		}

		visible = {
			controls_state = 1076
			UKR = { controls_state = 1075 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Luhansk_from_Luhansk_oblast"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Luhansk_from_Luhansk_oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1075
						defender = 1076
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1075
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Donetsk_oblast_from_Luhansk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			controls_state = 1076
			UKR = { controls_state = 1030 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Donetsk_oblast_from_Luhansk_Oblast"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Donetsk_oblast_from_Luhansk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1030
						defender = 1076
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Donetsk_Oblast_from_Kharkiv = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			controls_state = 696
			UKR = { controls_state = 1030 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Donetsk_Oblast_from_Kharkiv"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Donetsk_Oblast_from_Kharkiv"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1030
						defender = 696
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 696
						num_provinces = 3
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1030
						num_provinces = 1
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Luhansk_Oblast_from_Kharkiv = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1076
			}
		}

		visible = {
			controls_state = 696
			UKR = { controls_state = 1076 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Luhansk_Oblast_from_Kharkiv"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Luhansk_Oblast_from_Kharkiv"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1076
						defender = 696
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 696
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Donetsk_Oblast_from_Zaporiza = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			controls_state = 694
			UKR = { controls_state = 1030 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Donetsk_Oblast_from_Zaporiza"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Donetsk_Oblast_from_Zaporiza"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1030
						defender = 694
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 694
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Dnepropetrovsk_from_Zaporizha = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			controls_state = 694
			UKR = { controls_state = 1087 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Dnepropetrovsk_from_Zaporizha"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Dnepropetrovsk_from_Zaporizha"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1087
						defender = 694
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 694
						num_provinces = 4
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1087
						num_provinces = 4
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Donetsk_Oblast_from_Dnepropetrovsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			controls_state = 1087
			UKR = { controls_state = 1030 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Donetsk_Oblast_from_Dnepropetrovsk"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Donetsk_Oblast_from_Dnepropetrovsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1030
						defender = 1087
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1087
						num_provinces = 1
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Kharkiv_from_Dnepropetrovsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 696
			}
		}

		visible = {
			controls_state = 1087
			UKR = { controls_state = 696 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Kharkiv_from_Dnepropetrovsk"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Kharkiv_from_Dnepropetrovsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 696
						defender = 1087
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1087
						num_provinces = 4
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 696
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Dnepropetrovsk_from_Kherson = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			controls_state = 1085
			UKR = { controls_state = 1087 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Dnepropetrovsk_from_Kherson"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Dnepropetrovsk_from_Kherson"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1087
						defender = 1085
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1085
						num_provinces = 3
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1087
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Zaporize_from_Kherson = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 694
			}
		}

		visible = {
			controls_state = 1085
			UKR = { controls_state = 694 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Zaporize_from_Kherson"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Zaporize_from_Kherson"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 694
						defender = 1085
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1085
						num_provinces = 3
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 694
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	# Getting territory
	nv_grab_Kherson = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1085
			}
		}

		visible = {
			OR = {
				controls_state = 1087
				controls_state = 1086
				controls_state = 694
			}

			UKR = { controls_state = 1085 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_grab_Kherson"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_grab_Kherson"
			transfer_state = 1085
		}

		ai_will_do = { factor = 10 }
	}

	nv_grab_Dnipro = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			OR = {
				controls_state = 1085
				controls_state = 1086
				controls_state = 1090
				controls_state = 1089
				controls_state = 696
				controls_state = 694
				controls_state = 1030
			}

			UKR = { controls_state = 1087 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_grab_Dnipro"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_grab_Dnipro"
			transfer_state = 1087
		}

		ai_will_do = { factor = 10 }
	}

	nv_grab_Zapor = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 694
			}
		}

		visible = {
			OR = {
				controls_state = 1087
				controls_state = 1085
				controls_state = 1030
			}

			UKR = { controls_state = 694 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_grab_Zapor"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_grab_Zapor"
			transfer_state = 694
		}

		ai_will_do = { factor = 10 }
	}

	nv_grab_Kharkiv = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 696
			}
		}

		visible = {
			OR = {
				controls_state = 1087
				controls_state = 1088
				controls_state = 1089
				controls_state = 1030
				controls_state = 1076
			}

			UKR = { controls_state = 696 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_grab_Kharkiv"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_grab_Kharkiv"
			transfer_state = 696
		}

		ai_will_do = { factor = 10 }
	}

	nv_grab_DonObl = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			OR = {
				controls_state = 696
				controls_state = 694
				controls_state = 1087
				controls_state = 1076
				controls_state = 1075
				controls_state = 693
			}

			UKR = { controls_state = 1030 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_grab_DonObl"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_grab_DonObl"
			transfer_state = 1030
		}

		ai_will_do = { factor = 10 }
	}

	nv_grab_LuhObl = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1076
			}
		}

		visible = {
			OR = {
				controls_state = 696
				controls_state = 1030
				controls_state = 1075
			}

			UKR = { controls_state = 1076 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_grab_LuhObl"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_grab_LuhObl"
			transfer_state = 1076
		}

		ai_will_do = { factor = 10 }
	}
}

NOV_Donbass_war_help = {
	NOV_smuggle_old_weapons = {
		days_remove = 60
		days_re_enable = 30
		fire_only_once = no

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision NOV_smuggle_old_weapons"
			set_temp_variable = { percent_change = 3 }
			set_temp_variable = { tag_index = SOV.id }
			set_temp_variable = { influence_target = NOV.id }
			change_influence_percentage = yes
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove NOV_smuggle_old_weapons"
			add_equipment_to_stockpile = {
				type = infantry_weapons1
				amount = 100
				producer = SOV
			}
			add_equipment_to_stockpile = {
				type = command_control_equipment
				amount = 20
				producer = SOV
			}
			if = {
				limit = { has_dlc = "No Step Back" }
				add_equipment_to_stockpile = {
					type = apc_hull_0
					variant_name = "BTR-70"
					amount = 10
					producer = SOV
				}
				add_equipment_to_stockpile = {
					type = ifv_hull_0
					variant_name = "BMP-1"
					amount = 10
					producer = SOV
				}
				add_equipment_to_stockpile = {
					type = mbt_hull_1
					variant_name = "T-72B"
					amount = 3
					producer = SOV
				}
			}
			else = {
				add_equipment_to_stockpile = {
					type = APC_2
					amount = 10
					producer = SOV
				}
				add_equipment_to_stockpile = {
					type = IFV_2
					amount = 10
					producer = SOV
				}
				add_equipment_to_stockpile = {
					type = MBT_2
					amount = 3
					producer = SOV
				}
			}
		}

		ai_will_do = {
			factor = 2
			modifier = {
				has_equipment = { Inf_equipment > 1000 }
				factor = 0
			}
			modifier = {
				has_equipment = { Inf_equipment < 100 }
				add = 5
			}
		}
	}

	NOV_hire_russian_advisors = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision NOV_hire_russian_advisors"
			set_temp_variable = { percent_change = 5 }
			set_temp_variable = { tag_index = SOV.id }
			set_temp_variable = { influence_target = NOV.id }
			change_influence_percentage = yes
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove NOV_hire_russian_advisors"
			add_timed_idea = {
				idea = NOV_russian_advisors
				days = 90
			}
		}

		ai_will_do = {
			factor = 2
		}
	}

	NOV_get_russian_volunteers = {
		days_remove = 30
		days_re_enable = 100
		fire_only_once = no

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision NOV_hire_russian_advisors"
			set_temp_variable = { percent_change = 2 }
			set_temp_variable = { tag_index = SOV.id }
			set_temp_variable = { influence_target = NOV.id }
			change_influence_percentage = yes
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove NOV_hire_russian_advisors"
			add_manpower = 1000
		}

		ai_will_do = {
			factor = 5
			modifier = {
				has_manpower > 3000
				factor = 0
			}
		}
	}
}

UKR_Donbass_peace_category = {
	UKR_peace_in_Donbass = {
		icon = GFX_decision_eng_propaganda_campaigns
		fire_only_once = yes
		cost = 300

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_peace_in_Donbass"
			SOV = { country_event = ukraine_donbass_war.9 }
		}

		ai_will_do = { factor = 10 }
	}
}