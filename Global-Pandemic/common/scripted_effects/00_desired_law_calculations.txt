# Author(s): Angriest Bird, Mkemper
get_coalition_partner_numbers = {
	set_temp_variable = { num_bureau_minus_two_coalition_partners = 0 }
	set_temp_variable = { num_bureau_minus_one_coalition_partners = 0 }
	set_temp_variable = { num_bureau_status_quo_coalition_partners = 0 }
	set_temp_variable = { num_bureau_plus_one_coalition_partners = 0 }
	set_temp_variable = { num_bureau_plus_two_coalition_partners = 0 }
	set_temp_variable = { num_police_minus_two_coalition_partners = 0 }
	set_temp_variable = { num_police_minus_one_coalition_partners = 0 }
	set_temp_variable = { num_police_status_quo_coalition_partners = 0 }
	set_temp_variable = { num_police_plus_one_coalition_partners = 0 }
	set_temp_variable = { num_police_plus_two_coalition_partners = 0 }
	set_temp_variable = { num_education_minus_two_coalition_partners = 0 }
	set_temp_variable = { num_education_minus_one_coalition_partners = 0 }
	set_temp_variable = { num_education_status_quo_coalition_partners = 0 }
	set_temp_variable = { num_education_plus_one_coalition_partners = 0 }
	set_temp_variable = { num_education_plus_two_coalition_partners = 0 }
	set_temp_variable = { num_health_minus_two_coalition_partners = 0 }
	set_temp_variable = { num_health_minus_one_coalition_partners = 0 }
	set_temp_variable = { num_health_status_quo_coalition_partners = 0 }
	set_temp_variable = { num_health_plus_one_coalition_partners = 0 }
	set_temp_variable = { num_health_plus_two_coalition_partners = 0 }
	set_temp_variable = { num_social_minus_two_coalition_partners = 0 }
	set_temp_variable = { num_social_minus_one_coalition_partners = 0 }
	set_temp_variable = { num_social_status_quo_coalition_partners = 0 }
	set_temp_variable = { num_social_plus_one_coalition_partners = 0 }
	set_temp_variable = { num_social_plus_two_coalition_partners = 0 }

	# Add to Variables
	for_each_loop = {
		array = gov_coalition_array
		value = v
		index = i
		if = { limit = { check_variable = { v = 0 } } # Western_Autocracy
			add_to_temp_variable = { num_bureau_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_police_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_education_minus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_health_minus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_social_minus_one_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 1 } } # conservatism
			add_to_temp_variable = { num_bureau_minus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_police_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_education_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_health_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_social_minus_one_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 2 } } # Liberalism
			add_to_temp_variable = { num_bureau_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_police_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_education_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_health_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_social_plus_one_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 3 } } # socialism
			add_to_temp_variable = { num_bureau_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_police_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_education_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_health_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_social_plus_two_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 4 } } # Communist-State
			add_to_temp_variable = { num_bureau_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_police_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_education_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_health_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_social_plus_one_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 5 } } # anarchist_communism
			add_to_temp_variable = { num_bureau_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_police_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_education_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_health_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_social_plus_two_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 6 } } # Conservative
			add_to_temp_variable = { num_bureau_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_police_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_education_minus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_health_minus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_social_minus_one_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 7 } } # Autocracy
			add_to_temp_variable = { num_bureau_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_police_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_education_minus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_health_minus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_social_minus_one_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 8 } } # Vilayat
			add_to_temp_variable = { num_bureau_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_police_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_education_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_health_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_social_status_quo_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 9 } } # Mod_Vilayat
			add_to_temp_variable = { num_bureau_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_police_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_education_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_health_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_social_plus_one_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 10 } } # Kingdom
			add_to_temp_variable = { num_bureau_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_police_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_education_minus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_health_minus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_social_minus_one_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 11 } } # Caliphate
			add_to_temp_variable = { num_bureau_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_police_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_education_minus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_health_minus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_social_minus_two_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 12 } } # Neutral_Muslim_Brotherhood
			add_to_temp_variable = { num_bureau_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_police_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_education_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_health_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_social_plus_one_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 13 } } # Neutral_Autocracy
			add_to_temp_variable = { num_bureau_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_police_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_education_minus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_health_minus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_social_minus_one_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 14 } } # Neutral_conservatism
			add_to_temp_variable = { num_bureau_minus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_police_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_education_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_health_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_social_minus_one_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 15 } } # oligarchism
			add_to_temp_variable = { num_bureau_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_police_minus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_education_minus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_health_minus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_social_minus_one_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 16 } } # Libertarian
			add_to_temp_variable = { num_bureau_minus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_police_minus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_education_minus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_health_minus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_social_minus_two_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 17 } } # Neutral_Green
			add_to_temp_variable = { num_bureau_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_police_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_education_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_health_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_social_plus_two_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 18 } } # neutral_Social
			add_to_temp_variable = { num_bureau_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_police_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_education_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_health_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_social_plus_two_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 19 } } # Neutral_Communism
			add_to_temp_variable = { num_bureau_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_police_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_education_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_health_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_social_plus_one_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 20 } } # Nat_Populism
			add_to_temp_variable = { num_bureau_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_police_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_education_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_health_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_social_status_quo_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 21 } } # Nat_Fascism
			add_to_temp_variable = { num_bureau_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_police_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_education_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_health_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_social_plus_one_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 22 } } # Nat_Autocracy
			add_to_temp_variable = { num_bureau_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_police_plus_two_coalition_partners = 1 }
			add_to_temp_variable = { num_education_minus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_health_minus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_social_minus_two_coalition_partners = 1 }
		}
		else_if = { limit = { check_variable = { v = 23 } } # Monarchism
			add_to_temp_variable = { num_bureau_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_police_plus_one_coalition_partners = 1 }
			add_to_temp_variable = { num_education_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_health_status_quo_coalition_partners = 1 }
			add_to_temp_variable = { num_social_status_quo_coalition_partners = 1 }
		}
	}
}

clear_law_desire_flags = {
	clr_country_flag = wants_bureau_01
	clr_country_flag = wants_bureau_02
	clr_country_flag = wants_bureau_03
	clr_country_flag = wants_bureau_04
	clr_country_flag = wants_bureau_05
	clr_country_flag = wants_police_01
	clr_country_flag = wants_police_02
	clr_country_flag = wants_police_03
	clr_country_flag = wants_police_04
	clr_country_flag = wants_police_05
	clr_country_flag = wants_edu_01
	clr_country_flag = wants_edu_02
	clr_country_flag = wants_edu_03
	clr_country_flag = wants_edu_04
	clr_country_flag = wants_edu_05
	clr_country_flag = wants_health_01
	clr_country_flag = wants_health_02
	clr_country_flag = wants_health_03
	clr_country_flag = wants_health_04
	clr_country_flag = wants_health_05
	clr_country_flag = wants_health_06
	clr_country_flag = wants_social_01
	clr_country_flag = wants_social_02
	clr_country_flag = wants_social_03
	clr_country_flag = wants_social_04
	clr_country_flag = wants_social_05
	clr_country_flag = wants_social_06
}

# Bureaucracy desire is chiefly determined by the size/strength of the nation. More powerful the nation, more it wants a higher level of bureaucracy.
# Secondary to size and power of the nation is the GDP of the nation - impoverished nations can't afford an extensive bureaucracy.
recalculate_bureaucracy_desire = {
	set_temp_variable = { bureaucracy_law_desire = 0.0 }
	# Basis of calculation is based upon power of nation.
	if = { limit = { has_idea = non_power }
		add_to_temp_variable = { bureaucracy_law_desire = 2.0 } #Non-Powrs want bureau_01
	}
	else_if = { limit = { has_idea = minor_power }
		add_to_temp_variable = { bureaucracy_law_desire = 5.0 } # Minor power wants bureau_02
	}
	else_if = {
		limit = {
			OR = {
				has_idea = regional_power
				has_idea = large_power
				has_idea = great_power
			}
		}
		add_to_temp_variable = { bureaucracy_law_desire = 8.0 } #Regional to Major Powers want a mid grade bureau
	}
	else_if = { limit = { has_idea = superpower }
		add_to_temp_variable = { bureaucracy_law_desire = 12.0 } # Superpower wants bureau_04
	}
	# Add modifier based upon completed focuses
	if = { limit = { has_completed_focus = AFG_decentralization }
		subtract_from_temp_variable = { bureaucracy_law_desire = 3.0 }
	}
	if = { limit = { original_tag = BRA }
		if = {
			limit = { has_completed_focus = BRA_economic_interventionism }
			add_to_temp_variable = { bureaucracy_law_desire = 3.0 }
		}
		if = {
			limit = { has_completed_focus = BRA_new_ministries }
			add_to_temp_variable = { bureaucracy_law_desire = 3.0 }
		}
		if = {
			limit = { has_completed_focus = BRA_government_reform }
			add_to_temp_variable = { bureaucracy_law_desire = -3.0 }
		}
		if = {
			limit = { has_completed_focus = BRA_business_deregulation }
			add_to_temp_variable = { bureaucracy_law_desire = -3.0 }
		}
		if = {
			limit = { has_completed_focus = BRA_business_regulation }
			add_to_temp_variable = { bureaucracy_law_desire = 3.0 }
		}
	}
	if = { limit = { has_completed_focus = CAN_bureaucracy }
		add_to_temp_variable = { bureaucracy_law_desire = 3.0 }
	}
	if = { limit = { original_tag = CHI }
		if = {
			limit = { has_completed_focus = CHI_Revolution_in_One_Country }
			add_to_temp_variable = { bureaucracy_law_desire = 3.0 }
		}
		if = {
			limit = { has_completed_focus = CHI_Form_the_Fifth_International }
			add_to_temp_variable = { bureaucracy_law_desire = 3.0 }
		}
		if = {
			limit = { has_completed_focus = CHI_Proper_State_Nationalization }
			add_to_temp_variable = { bureaucracy_law_desire = 3.0 }
		}
	}
	if = { limit = { original_tag = FRA }
		if = {
			limit = { has_completed_focus = FRA_centralization }
			add_to_temp_variable = { bureaucracy_law_desire = 3.0 }
		}
		if = {
			limit = { has_completed_focus = FRA_decentralization }
			subtract_from_temp_variable = { bureaucracy_law_desire = 3.0 }
		}
	}
	if = { limit = { original_tag = UKR }
		if = {
			limit = { has_completed_focus = UKR_centralization }
			add_to_temp_variable = { bureaucracy_law_desire = 3.0 }
		}
		if = {
			limit = { has_completed_focus = UKR_direct_democracy_idea }
			add_to_temp_variable = { bureaucracy_law_desire = 3.0 }
		}
		if = {
			limit = { has_completed_focus = UKR_federalization }
			subtract_from_temp_variable = { bureaucracy_law_desire = 3.0 }
		}
	}
	if = {
		limit = { has_completed_focus = GCC_employment_opportunities }
		add_to_temp_variable = { bureaucracy_law_desire = 3.0 }
	}
	if = {
		limit = { has_completed_focus = KOR_clamp_down_on_anti_competitive_practices }
		add_to_temp_variable = { bureaucracy_law_desire = 3.0 }
	}
	if = { limit = { has_completed_focus = NOR_government_expansion_plans }
		add_to_temp_variable = { bureaucracy_law_desire = 3.0 }
	}
	if = { limit = { original_tag = POL }
		if = {
			limit = { has_completed_focus = POL_civilian_focus_communist }
			add_to_temp_variable = { bureaucracy_law_desire = 3.0 }
		}
		if = {
			limit = { has_completed_focus = POL_military_state }
			add_to_temp_variable = { bureaucracy_law_desire = -3.0 }
		}
		if = {
			limit = { has_completed_focus = POL_pps }
			add_to_temp_variable = { bureaucracy_law_desire = 3.0 }
		}
	}
	if = { limit = { original_tag = SYR }
		if = {
			limit = { has_completed_focus = SYR_decentralisation }
			add_to_temp_variable = { bureaucracy_law_desire = -3.0 }
		}
		if = {
			limit = { has_completed_focus = SYR_republicanism }
			add_to_temp_variable = { bureaucracy_law_desire = 3.0 }
		}
	}
	if = { limit = { original_tag = UKR }
		if = {
			limit = { has_completed_focus = UKR_federalization }
			add_to_temp_variable = { bureaucracy_law_desire = -3.0 }
		}
		if = {
			limit = { has_completed_focus = UKR_centralization }
			add_to_temp_variable = { bureaucracy_law_desire = 3.0 }
		}
		if = {
			limit = { has_completed_focus = UKR_direct_democracy_idea }
			add_to_temp_variable = { bureaucracy_law_desire = -3.0 }
		}
		if = {
			limit = { has_completed_focus = UKR_parliamentary_reform }
			add_to_temp_variable = { bureaucracy_law_desire = 3.0 }
		}
	}


	# Next, modify based upon GDP/c. Low GDP countries should want lower bureaucracy levels
	if = { limit = { check_variable = { gdp_per_capita < 2 } }
		subtract_from_temp_variable = {
			bureaucracy_law_desire = 6.0 # Extremely impoverished nations want 2 levels lower
		}
	}
	else_if = {
		limit = {
			check_variable = { gdp_per_capita > 1.999 }
			check_variable = { gdp_per_capita < 10.000 }
		}
		subtract_from_temp_variable = {
			bureaucracy_law_desire = 3.0 # Impoverished nations want 1 level lower
		}
	}
	# Next, modify base on factories
	if = {
		limit = { num_of_factories < 40 }
		subtract_from_temp_variable = { bureaucracy_law_desire = 3.0 } ##Nations with small economies will hover a lower bureaucracy level
	}
	else_if = {
		limit = {
			num_of_factories > 39
			num_of_factories < 100
		}
		subtract_from_temp_variable = { bureaucracy_law_desire = 2.0 } ##Nations with mid industry will try for a mid grade Bureaucracy
	}
	else_if = {
		limit = { num_of_factories > 100 }
		add_to_temp_variable = { bureaucracy_law_desire = 2.0 } ##All other nations will get a small buff to wanting better cnetralized governments
	}
	# Check based on market conditions
	if = {
		limit = {
			ai_has_acceptable_deficit = no #When deficit becomes unbearable start to reduce!
		}
		subtract_from_temp_variable = { #Reduce spending when possible!
			bureaucracy_law_desire = 6.0
		}
	}
	# Reduce if debt is high
	if = {
		limit = {
			check_variable = { debt_ratio > 1.50 }
		}
		subtract_from_temp_variable = { bureaucracy_law_desire = 3.0 }
	}
	# Next, modify based on corruption levels
	if = {
		limit = {
			OR = {
				has_idea = paralyzing_corruption
				has_idea = crippling_corruption
				has_idea = rampant_corruption
			}
		}
		add_to_temp_variable = {
			bureaucracy_law_desire = 6 # Corrupt nations want much larger bureaucratic apparatus for all their cronies
		}
	}
	else_if = {
		limit = {
			OR = {
				has_idea = unrestrained_corruption
				has_idea = systematic_corruption
				has_idea = widespread_corruption
			}
		}
		add_to_temp_variable = {
			bureaucracy_law_desire = 3 # Moderately corrupt nations want larger bureaucratic apparatus for their cronies
		}
	}
	# Next, modify based on ruling ideology, and thus by coalition partners. This ends up being a little more complicated than I thought at first.
	# Coalition members should want to drag the ruling party toward their own desired point. That means taking into account
	# both the desires of the ruling party *and* that of the coalition partner. If both want -1 level, then the coalition partner
	# should have no impact. If the ruler wants +2 and the coalition partner wants -1, it should have have a subtractive impact.
	# however, if the ruler wants -2 and the coalition partner wants -1, it should have an *additive* impact. Further, must also
	# check for more than one coalition partner - if multiple coalition partners with same desire, there should be more of a drift
	# toward that position than otherwise.
	if = { limit = { ruling_party_wants_bureaucracy_minus_two = yes }
		subtract_from_temp_variable = {
			bureaucracy_law_desire = 6 # Two levels lower
		}
		set_temp_variable = {
			coalition_law_modifier = 0
		}
		multiply_temp_variable = {
			num_bureau_minus_two_coalition_partners = 1 # Same desire as ruling party
		}
		multiply_temp_variable = {
			num_bureau_minus_one_coalition_partners = 1 # Minimum distance from ruling party, minimum change
		}
		multiply_temp_variable = {
			num_bureau_status_quo_coalition_partners = 1 # Minor distance from ruling party, minor change
		}
		multiply_temp_variable = {
			num_bureau_plus_one_coalition_partners = 2 # Moderate distance from ruling party, moderate change
		}
		multiply_temp_variable = {
			num_bureau_plus_two_coalition_partners = 3 # Major distance from ruling party, major change
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = var:num_bureau_minus_two_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_plus_two_coalition_partners
		}
		if = { limit = { check_variable = { coalition_law_modifier > 0 } }
			subtract_from_temp_variable = {
				coalition_law_modifier = num_bureau_minus_two_coalition_partners
			}
		}
		else_if = { limit = { check_variable = { coalition_law_modifier < 0 } }
			add_to_temp_variable = {
				coalition_law_modifier = num_bureau_minus_two_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = { bureaucracy_law_desire = coalition_law_modifier }
	}
	else_if = { limit = { ruling_party_wants_bureaucracy_minus_one = yes }
		subtract_from_temp_variable = {
			bureaucracy_law_desire = 3 # One level lower
		}
		set_temp_variable = {
			coalition_law_modifier = 0
		}
		multiply_temp_variable = {
			num_bureau_minus_two_coalition_partners = 1 # Minor distance from ruling party
		}
		multiply_temp_variable = {
			num_bureau_minus_one_coalition_partners = 1 # Same as ruling party
		}
		multiply_temp_variable = {
			num_bureau_status_quo_coalition_partners = 1 # Minor distance from ruling party, minor change
		}
		multiply_temp_variable = {
			num_bureau_plus_one_coalition_partners = 2 # Moderate distance from ruling party, moderate change
		}
		multiply_temp_variable = {
			num_bureau_plus_two_coalition_partners = 3 # Major distance from ruling party, major change
		}
		subtract_from_temp_variable = {
			bureaucracy_law_desire = 3 # One level lower
		}
		set_temp_variable = {
			coalition_law_modifier = 0
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_minus_two_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_bureau_minus_one_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_bureau_minus_one_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_bureau_minus_one_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			bureaucracy_law_desire = coalition_law_modifier
		}
	}
	else_if = { limit = { ruling_party_wants_bureaucracy_status_quo = yes }
		add_to_temp_variable = {
			bureaucracy_law_desire = 0 # No change
		}
		set_temp_variable = {
			coalition_law_modifier = 0
		}
		multiply_temp_variable = {
			num_bureau_minus_two_coalition_partners = 2 # Moderate distance from ruling party
		}
		multiply_temp_variable = {
			num_bureau_minus_one_coalition_partners = 1 # Minor distance from ruling party
		}
		multiply_temp_variable = {
			num_bureau_status_quo_coalition_partners = 1 # Same as ruling party
		}
		multiply_temp_variable = {
			num_bureau_plus_one_coalition_partners = 1 # Minor distance from ruling party
		}
		multiply_temp_variable = {
			num_bureau_plus_two_coalition_partners = 2 # Moderate distance from ruling party
		}
		subtract_from_temp_variable = {
			bureaucracy_law_desire = 3 # One level lower
		}
		set_temp_variable = {
			coalition_law_modifier = 0
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_minus_one_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_bureau_status_quo_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_bureau_status_quo_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_bureau_status_quo_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			bureaucracy_law_desire = coalition_law_modifier
		}
	}
	else_if = { limit = { ruling_party_wants_bureaucracy_plus_one = yes }
		add_to_temp_variable = {
			bureaucracy_law_desire = 3 # One level higher
		}
		set_temp_variable = {
			coalition_law_modifier = 0
		}
		multiply_temp_variable = {
			num_bureau_minus_two_coalition_partners = 3 # Major distance from ruling party
		}
		multiply_temp_variable = {
			num_bureau_minus_one_coalition_partners = 2 # Moderate distance from ruling party
		}
		multiply_temp_variable = {
			num_bureau_status_quo_coalition_partners = 1 # Minor distance from ruling party, minor change
		}
		multiply_temp_variable = {
			num_bureau_plus_one_coalition_partners = 1 # Same as ruling party
		}
		multiply_temp_variable = {
			num_bureau_plus_two_coalition_partners = 1 # Minor distance from ruling party
		}
		subtract_from_temp_variable = {
			bureaucracy_law_desire = 3 # One level lower
		}
		set_temp_variable = {
			coalition_law_modifier = 0
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_status_quo_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_bureau_plus_one_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_bureau_plus_one_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_bureau_plus_one_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			bureaucracy_law_desire = coalition_law_modifier
		}
	}
	else_if = { limit = { ruling_party_wants_bureaucracy_plus_two = yes }
		add_to_temp_variable = {
			bureaucracy_law_desire = 6 # Two levels higher
		}
		set_temp_variable = {
			coalition_law_modifier = 0
		}
		multiply_temp_variable = {
			num_bureau_minus_two_coalition_partners = 3 # Major distance from ruling party
		}
		multiply_temp_variable = {
			num_bureau_minus_one_coalition_partners = 2 # Moderate distance from party
		}
		multiply_temp_variable = {
			num_bureau_status_quo_coalition_partners = 1 # Minor distance from ruling party, minor change
		}
		multiply_temp_variable = {
			num_bureau_plus_one_coalition_partners = 1 # Minor distance from ruling party, minor change
		}
		multiply_temp_variable = {
			num_bureau_plus_two_coalition_partners = 1 # Same as ruling party
		}
		subtract_from_temp_variable = {
			bureaucracy_law_desire = 3 # One level lower
		}
		set_temp_variable = {
			coalition_law_modifier = 0
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_plus_one_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_bureau_plus_two_coalition_partners
		# }
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_bureau_plus_two_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_bureau_plus_two_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			bureaucracy_law_desire = coalition_law_modifier
		}
	}
	# Finally, set country flag based on result.
	if = { limit = { check_variable = { bureaucracy_law_desire < 4 } }
		set_country_flag = wants_bureau_01
	}
	else_if = { limit = { check_variable = { bureaucracy_law_desire < 7 } }
		set_country_flag = wants_bureau_02
	}
	else_if = { limit = { check_variable = { bureaucracy_law_desire < 10 } }
		set_country_flag = wants_bureau_03
	}
	else_if = { limit = { check_variable = { bureaucracy_law_desire < 13 } }
		set_country_flag = wants_bureau_04
	}
	else_if = { limit = { check_variable = { var = bureaucracy_law_desire value = 13 compare = greater_than_or_equals } }
		set_country_flag = wants_bureau_05
	}
}

# Police desire should tend to gravitate toward the middle (police_03) in most nations. This is also affected by politics - repressive governments
# want more police apparatus than more liberal/libertarian ones. Also influenced by GDP - impoverished nations cannot afford large police forces.
recalculate_police_desire = {
	set_temp_variable = { police_law_desire = 0.0 }
	# First, set desire based upon GDP. Poverty tends toward low values, all else toward middling.
	if = { limit = { check_variable = { gdp_per_capita < 2.000 } }
		add_to_temp_variable = {
			police_law_desire = 2.0 # police_01
		}
	}
	else_if = {
		limit = {
			check_variable = { gdp_per_capita > 1.999 }
			check_variable = { gdp_per_capita < 10.000 }
		}
		add_to_temp_variable = {
			police_law_desire = 5.0 # police_02
		}
	}
	else_if = { limit = { check_variable = { gdp_per_capita > 9.999 } }
		add_to_temp_variable = {
			police_law_desire = 8.0 # police_03
		}
	}
	# Adjust based on national focuses completed
	if = { limit = { original_tag = AFG }
		if = {
			limit = { has_completed_focus = AFG_adjusting_our_economy }
			add_to_temp_variable = { police_law_desire = -3.0 }
		}
		if = {
			limit = { has_completed_focus = AFG_better_officers }
			add_to_temp_variable = { police_law_desire = -3.0 }
		}
	}
	if = { limit = { original_tag = BRA }
		if = {
			limit = { has_completed_focus = BRA_native_protests }
			add_to_temp_variable = { police_law_desire = 3.0 }
		}
		if = {
			limit = { has_completed_focus = BRA_fight_crime }
			add_to_temp_variable = { police_law_desire = 3.0 }
		}
	}
	if = { limit = { original_tag = CAN }
		if = {
			limit = { has_completed_focus = CAN_nation_divided }
			add_to_temp_variable = { police_law_desire = 3.0 }
		}
		if = {
			limit = { has_completed_focus = CAN_secret_police }
			add_to_temp_variable = { police_law_desire = 3.0 }
		}
		if = {
			limit = { has_completed_focus = CAN_iron_curtain }
			add_to_temp_variable = { police_law_desire = 3.0 }
		}
	}
	if = { limit = { original_tag = FRA }
		if = { limit = { has_completed_focus = FRA_stricter_policing }
			add_to_temp_variable = { police_law_desire = 3.0 }
		}
		if = { limit = { has_completed_focus = FRA_reduction_of_press }
			add_to_temp_variable = { police_law_desire = 3.0 }
		}
		if = { limit = { has_completed_focus = FRA_heavier_policing }
			add_to_temp_variable = { police_law_desire = 3.0 }
		}
	}
	if = { limit = { original_tag = POL }
		if = { limit = { has_completed_focus = POL_zkp_p }
			add_to_temp_variable = { police_law_desire = 3.0 }
		}
		if = { limit = { has_completed_focus = POL_focus_on_internal_matters_communist }
			add_to_temp_variable = { police_law_desire = 3.0 }
		}
		if = { limit = { has_completed_focus = POL_betray_the_communists }
			add_to_temp_variable = { police_law_desire = 3.0 }
		}
		if = { limit = { has_completed_focus = POL_stop_the_capitalism }
			add_to_temp_variable = { police_law_desire = 3.0 }
		}
	}

	if = { limit = { has_completed_focus = GRE_abandon_army }
		add_to_temp_variable = { police_law_desire = 3.0 }
	}
	if = { limit = { has_completed_focus = SYR_subsidise_police }
		add_to_temp_variable = { police_law_desire = 6.0 }
	}
	if = { limit = { has_completed_focus = GCC_bolster_the_security_services }
		add_to_temp_variable = { police_law_desire = 3.0 }
	}
	if = { limit = { has_completed_focus = NIG_federal_policing }
		add_to_temp_variable = { police_law_desire = 3.0 }
	}
	if = { limit = { has_completed_focus = UKR_police_reform }
		add_to_temp_variable = { police_law_desire = 3.0 }
	}
	##
	if = { limit = { check_variable = { treasury_rate < -5.0 } }
		subtract_from_temp_variable = { #Reduce spending when possible!
			police_law_desire = 8.0
		}
	}
	else_if = { limit = { check_variable = { treasury_rate < -4.50 } }
		subtract_from_temp_variable = { #Reduce when issues start becoming more relevant
			police_law_desire = 6.0
		}
	}
	else_if = { limit = { check_variable = { treasury_rate < -3.50 } }
		subtract_from_temp_variable = { #Reduce when issues start becoming more relevant
			police_law_desire = 4.0
		}
	}
	else_if = { limit = { check_variable = { treasury_rate < -2.50 } }
		subtract_from_temp_variable = { #Reduce when issues start becoming more relevant
			police_law_desire = 2.0
		}
	}
	# Reduce if debt is high
	if = {
		limit = {
			check_variable = { debt_ratio > 1.50 }
		}
		subtract_from_temp_variable = { police_law_desire = 3.0 }
	}
	# Next, modify based upon ruling ideology and coalition partners.
	set_temp_variable = {
		coalition_law_modifier = 0
	}
	if = {
		limit = {
			ruling_party_wants_police_minus_two = yes
		}
		subtract_from_temp_variable = {
			police_law_desire = 6.0
		}
		multiply_temp_variable = {
			num_police_minus_two_coalition_partners = 1 # Same desire as ruling party
		}
		multiply_temp_variable = {
			num_police_minus_one_coalition_partners = 1 # Minimum distance from ruling party, minimum change
		}
		multiply_temp_variable = {
			num_police_status_quo_coalition_partners = 1 # Minor distance from ruling party, minor change
		}
		multiply_temp_variable = {
			num_police_plus_one_coalition_partners = 2 # Moderate distance from ruling party, moderate change
		}
		multiply_temp_variable = {
			num_police_plus_two_coalition_partners = 3 # Major distance from ruling party, major change
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_police_minus_two_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_police_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_police_minus_two_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_police_minus_two_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			police_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_police_minus_one = yes
		}
		subtract_from_temp_variable = {
			police_law_desire = 3.0
		}
		multiply_temp_variable = {
			num_police_minus_two_coalition_partners = 1 # Minimum distance, minimum change
		}
		multiply_temp_variable = {
			num_police_minus_one_coalition_partners = 1 # Same desire as ruling party
		}
		multiply_temp_variable = {
			num_police_status_quo_coalition_partners = 1 # Minor distance from ruling party, minor change
		}
		multiply_temp_variable = {
			num_police_plus_one_coalition_partners = 2 # Moderate distance from ruling party, moderate change
		}
		multiply_temp_variable = {
			num_police_plus_two_coalition_partners = 3 # Major distance from ruling party, major change
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_minus_two_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_police_minus_one_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_police_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_police_minus_one_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_police_minus_one_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			police_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_police_status_quo = yes
		}
		add_to_temp_variable = {
			police_law_desire = 0.0
		}
		multiply_temp_variable = {
			num_police_minus_two_coalition_partners = 2 # moderate distance, moderate change
		}
		multiply_temp_variable = {
			num_police_minus_one_coalition_partners = 1 # minor distance, minor change
		}
		multiply_temp_variable = {
			num_police_status_quo_coalition_partners = 1 # same as ruling party
		}
		multiply_temp_variable = {
			num_police_plus_one_coalition_partners = 1 # minor distance, minor change
		}
		multiply_temp_variable = {
			num_police_plus_two_coalition_partners = 2 # moderate distance, moderate change
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_minus_one_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_police_status_quo_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_police_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_police_status_quo_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_police_status_quo_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			police_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_police_plus_one = yes
		}
		add_to_temp_variable = {
			police_law_desire = 3.0
		}
		multiply_temp_variable = {
			num_police_minus_two_coalition_partners = 3 # Major distance, Major change
		}
		multiply_temp_variable = {
			num_police_minus_one_coalition_partners = 2 # Moderate distance, moderate change
		}
		multiply_temp_variable = {
			num_police_status_quo_coalition_partners = 1 # Minor distance, minor change
		}
		multiply_temp_variable = {
			num_police_plus_one_coalition_partners = 1 # Same as ruling party
		}
		multiply_temp_variable = {
			num_police_plus_two_coalition_partners = 1 # minor distance, minor change
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_status_quo_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_police_plus_one_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_police_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_police_plus_one_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_police_plus_one_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			police_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_police_plus_two = yes
		}
		add_to_temp_variable = {
			police_law_desire = 6.0
		}
		multiply_temp_variable = {
			num_police_minus_two_coalition_partners = 3 # Major distance, Major change
		}
		multiply_temp_variable = {
			num_police_minus_one_coalition_partners = 2 # Moderate distance, moderate change
		}
		multiply_temp_variable = {
			num_police_status_quo_coalition_partners = 1 # Minor distance, minor change
		}
		multiply_temp_variable = {
			num_police_plus_one_coalition_partners = 1 # Minor distance, minor change
		}
		multiply_temp_variable = {
			num_police_plus_two_coalition_partners = 1 # Same as ruling party
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_plus_one_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_police_plus_two_coalition_partners
		# }
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_police_plus_two_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_police_plus_two_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			police_law_desire = coalition_law_modifier
		}
	}

	# Finally, set country flag based on result.
	if = { limit = { check_variable = { police_law_desire < 4 } }
		set_country_flag = wants_police_01
	}
	else_if = { limit = { check_variable = { police_law_desire < 7 } }
		set_country_flag = wants_police_02
	}
	else_if = { limit = { check_variable = { police_law_desire < 10 } }
		set_country_flag = wants_police_03
	}
	else_if = { limit = { check_variable = { police_law_desire < 13 } }
		set_country_flag = wants_police_04
	}
	else_if = { limit = { check_variable = { var = police_law_desire value = 13 compare = greater_than_or_equals } }
		set_country_flag = wants_police_05
	}
}

# Education desire is highly dependent on wealth and development level. Underdeveloped or developing nations should have edu_01 or edu_02.
# Most developed nations should never go below edu_03. Richer nations should have edu_04. Also dependent on political policies.
recalculate_edu_desire = {
	set_temp_variable = { edu_law_desire = 0.0 }
	# First, set base from GDP
	if = { limit = { check_variable = { gdp_per_capita < 2.000 } }
		add_to_temp_variable = {
			edu_law_desire = 2.0 # edu_01
		}
	}
	else_if = {
		limit = {
			check_variable = { gdp_per_capita > 1.999 }
			check_variable = { gdp_per_capita < 10.000 }
		}
		add_to_temp_variable = {
			edu_law_desire = 5.0 # edu_02
		}
	}
	else_if = {
		limit = {
			check_variable = { gdp_per_capita > 9.999 }
			check_variable = { gdp_per_capita < 90.000 }
		}
		add_to_temp_variable = {
			edu_law_desire = 8.0 # edu_03
		}
	}
	else_if = {
		limit = {
			check_variable = { gdp_per_capita > 89.999 }
		}
		add_to_temp_variable = {
			edu_law_desire = 11.0 # edu_04
		}
	}
	# Adjust based on completed national focuses
	if = { limit = { original_tag = AFG }
		if = { limit = { has_completed_focus = AFG_better_officers }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
		if = { limit = { has_completed_focus = AFG_economy_first }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
		if = { limit = { has_completed_focus = AFG_junbishi_milli }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
	}
	if = { limit = { original_tag = BRA }
		if = { limit = { has_completed_focus = BRA_education_funding }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
		if = { limit = { has_completed_focus = BRA_university_funding }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
		if = { limit = { has_completed_focus = BRA_education_investment }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
		if = { limit = { has_completed_focus = BRA_left_wing_education }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
		if = { limit = { has_completed_focus = BRA_new_imperial_university }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
		if = { limit = { has_completed_focus = BRA_education_reforms }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
	}
	if = { limit = { original_tag = CAN }
		if = { limit = { has_completed_focus = CAN_educational_focuses }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
		if = { limit = { has_completed_focus = CAN_french_schools }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
		if = { limit = { has_completed_focus = CAN_redistribution_of_balance }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
	}
	if = { limit = { has_completed_focus = ETH_education_program }
		add_to_temp_variable = { edu_law_desire = 3.0 }
	}
	if = { limit = { original_tag = FRA }
		if = { limit = { has_completed_focus = FRA_competitive_education }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
		if = { limit = { has_completed_focus = FRA_censorship_in_education }
			subtract_from_temp_variable = { edu_law_desire = 3.0 }
		}
	}
	if = { limit = { original_tag = GRE }
		if = { limit = { has_completed_focus = GRE_extend_education }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
		if = { limit = { has_completed_focus = GRE_begin_changing_education_system }
			subtract_from_temp_variable = { edu_law_desire = 3.0 }
		}
		if = { limit = { has_completed_focus = GRE_reduce_education }
			subtract_from_temp_variable = { edu_law_desire = 3.0 }
		}
	}
	if = { limit = { original_tag = ITA }
		if = { limit = { has_completed_focus = ITA_modern_education }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
		if = { limit = { has_completed_focus = ITA_increase_funding_for_research }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
	}
	if = { limit = { original_tag = KOR }
		if = { limit = { has_completed_focus = KOR_liberal_economics }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
	}
	if = { limit = { original_tag = NIG }
		if = { limit = { has_completed_focus = NIG_the_way_of_bible }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
		if = { limit = { has_completed_focus = NIG_education_programs }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
	}
	if = { limit = { original_tag = NOR }
		if = { limit = { has_completed_focus = NOR_invest_in_the_ministry_of_education_and_research }
			add_to_temp_variable = { edu_law_desire = 1.50 }
		}
		if = { limit = { has_completed_focus = NOR_further_research_investments }
			add_to_temp_variable = { edu_law_desire = 1.50 }
		}
	}
	if = { limit = { original_tag = POL }
		if = { limit = { has_completed_focus = POL_fix_brain_drain }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
		if = { limit = { has_completed_focus = POL_revisit_education_programs }
			add_to_temp_variable = { edu_law_desire = 3.0 }
		}
	}
	if = { limit = { has_completed_focus = SYR_education_reform }
		add_to_temp_variable = { edu_law_desire = 3.0 }
	}
	if = { limit = { has_completed_focus = UKR_education_reform }
		add_to_temp_variable = { edu_law_desire = 3.0 }
	}

	##Edit based on factories
	if = {
		limit = {
			num_of_factories < 40
		}
		subtract_from_temp_variable = {  #Can't afford a crazy amount of education
			edu_law_desire = 6.0
		}
	}
	else_if = {
		limit = {
			num_of_factories > 39
			num_of_factories < 80
		}
		subtract_from_temp_variable = { ##Just one level lower
 			edu_law_desire = 3.0
		}
	}
	else_if = {
		limit = { ##Great
			num_of_factories > 79
		}
		add_to_temp_variable = {
			edu_law_desire = 3.0
		}
	}
	##
	if = { limit = { check_variable = { treasury_rate < -5.0 } }
		subtract_from_temp_variable = { #Reduce spending when possible!
			edu_law_desire = 8.0
		}
	}
	else_if = { limit = { check_variable = { treasury_rate < -4.50 } }
		subtract_from_temp_variable = { #Reduce when issues start becoming more relevant
			edu_law_desire = 6.0
		}
	}
	else_if = { limit = { check_variable = { treasury_rate < -3.50 } }
		subtract_from_temp_variable = { #Reduce when issues start becoming more relevant
			edu_law_desire = 4.0
		}
	}
	else_if = { limit = { check_variable = { treasury_rate < -2.50 } }
		subtract_from_temp_variable = { #Reduce when issues start becoming more relevant
			edu_law_desire = 2.0
		}
	}
	# Reduce if debt is high
	if = {
		limit = {
			check_variable = { debt_ratio > 1.50 }
		}
		subtract_from_temp_variable = { edu_law_desire = 3.0 }
	}
	# Next, modify based upon ruling ideology and coalition partners.
	set_temp_variable = {
		coalition_law_modifier = 0
	}
	if = {
		limit = {
			ruling_party_wants_edu_minus_two = yes
		}
		subtract_from_temp_variable = {
			edu_law_desire = 6.0
		}
		multiply_temp_variable = {
			num_edu_minus_two_coalition_partners = 1 # Same desire as ruling party
		}
		multiply_temp_variable = {
			num_edu_minus_one_coalition_partners = 1 # Minimum distance from ruling party, minimum change
		}
		multiply_temp_variable = {
			num_edu_status_quo_coalition_partners = 1 # Minor distance from ruling party, minor change
		}
		multiply_temp_variable = {
			num_edu_plus_one_coalition_partners = 2 # Moderate distance from ruling party, moderate change
		}
		multiply_temp_variable = {
			num_edu_plus_two_coalition_partners = 3 # Major distance from ruling party, major change
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_edu_minus_two_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_edu_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_edu_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_edu_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_edu_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_edu_minus_two_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_edu_minus_two_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			edu_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_edu_minus_one = yes
		}
		subtract_from_temp_variable = {
			edu_law_desire = 3.0
		}
		multiply_temp_variable = {
			num_edu_minus_two_coalition_partners = 1 # Minimum distance, minimum change
		}
		multiply_temp_variable = {
			num_edu_minus_one_coalition_partners = 1 # Same desire as ruling party
		}
		multiply_temp_variable = {
			num_edu_status_quo_coalition_partners = 1 # Minor distance from ruling party, minor change
		}
		multiply_temp_variable = {
			num_edu_plus_one_coalition_partners = 2 # Moderate distance from ruling party, moderate change
		}
		multiply_temp_variable = {
			num_edu_plus_two_coalition_partners = 3 # Major distance from ruling party, major change
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_edu_minus_two_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_edu_minus_one_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_edu_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_edu_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_edu_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_edu_minus_one_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_edu_minus_one_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			edu_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_edu_status_quo = yes
		}
		add_to_temp_variable = {
			edu_law_desire = 0.0
		}
		multiply_temp_variable = {
			num_edu_minus_two_coalition_partners = 2 # moderate distance, moderate change
		}
		multiply_temp_variable = {
			num_edu_minus_one_coalition_partners = 1 # minor distance, minor change
		}
		multiply_temp_variable = {
			num_edu_status_quo_coalition_partners = 1 # same as ruling party
		}
		multiply_temp_variable = {
			num_edu_plus_one_coalition_partners = 1 # minor distance, minor change
		}
		multiply_temp_variable = {
			num_edu_plus_two_coalition_partners = 2 # moderate distance, moderate change
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_edu_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_edu_minus_one_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_edu_status_quo_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_edu_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_edu_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_edu_status_quo_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_edu_status_quo_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			edu_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_edu_plus_one = yes
		}
		add_to_temp_variable = {
			edu_law_desire = 3.0
		}
		multiply_temp_variable = {
			num_edu_minus_two_coalition_partners = 3 # Major distance, Major change
		}
		multiply_temp_variable = {
			num_edu_minus_one_coalition_partners = 2 # Moderate distance, moderate change
		}
		multiply_temp_variable = {
			num_edu_status_quo_coalition_partners = 1 # Minor distance, minor change
		}
		multiply_temp_variable = {
			num_edu_plus_one_coalition_partners = 1 # Same as ruling party
		}
		multiply_temp_variable = {
			num_edu_plus_two_coalition_partners = 1 # minor distance, minor change
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_edu_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_edu_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_edu_status_quo_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_edu_plus_one_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_edu_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_edu_plus_one_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_edu_plus_one_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			edu_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_edu_plus_two = yes
		}
		add_to_temp_variable = {
			edu_law_desire = 6.0
		}
		multiply_temp_variable = {
			num_edu_minus_two_coalition_partners = 3 # Major distance, Major change
		}
		multiply_temp_variable = {
			num_edu_minus_one_coalition_partners = 2 # Moderate distance, moderate change
		}
		multiply_temp_variable = {
			num_edu_status_quo_coalition_partners = 1 # Minor distance, minor change
		}
		multiply_temp_variable = {
			num_edu_plus_one_coalition_partners = 1 # Minor distance, minor change
		}
		multiply_temp_variable = {
			num_edu_plus_two_coalition_partners = 1 # Same as ruling party
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_edu_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_edu_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_edu_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_edu_plus_one_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_edu_plus_two_coalition_partners
		# }
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_edu_plus_two_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_edu_plus_two_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			edu_law_desire = coalition_law_modifier
		}
	}

	# Finally, set country flag based on result.
	if = { limit = { check_variable = { edu_law_desire < 4 } }
		set_country_flag = wants_edu_01
	}
	else_if = { limit = { check_variable = { edu_law_desire < 7 } }
		set_country_flag = wants_edu_02
	}
	else_if = { limit = { check_variable = { edu_law_desire < 10 } }
		set_country_flag = wants_edu_03
	}
	else_if = { limit = { check_variable = { edu_law_desire < 13 } }
		set_country_flag = wants_edu_04
	}
	else_if = { limit = { check_variable = { var = edu_law_desire value = 13 compare = greater_than_or_equals } }
		set_country_flag = wants_edu_05
	}
}

# Health is again highly dependent on development.
recalculate_health_desire = {
	set_temp_variable = { health_law_desire = 0.0 }
	# First, set base from GDP
	if = { limit = { check_variable = { gdp_per_capita < 2.000 } }
		add_to_temp_variable = {
			health_law_desire = 2.0 # health_01
		}
	}
	else_if = {
		limit = {
			check_variable = { gdp_per_capita > 1.999 }
			check_variable = { gdp_per_capita < 4.000 }
		}
		add_to_temp_variable = {
			health_law_desire = 5.0 # health_02
		}
	}
	else_if = {
		limit = {
			check_variable = { gdp_per_capita > 3.999 }
			check_variable = { gdp_per_capita < 15.000 }
		}
		add_to_temp_variable = {
			health_law_desire = 8.0 # health_03
		}
	}
	else_if = {
		limit = {
			check_variable = { gdp_per_capita > 14.999 }
			check_variable = { gdp_per_capita < 30.000 }
		}
		add_to_temp_variable = {
			health_law_desire = 11.0 # health_04
		}
	}
	else_if = {
		limit = {
			check_variable = { gdp_per_capita > 29.999 }
			check_variable = { gdp_per_capita < 90.000 }
		}
		add_to_temp_variable = {
			health_law_desire = 14.0 # health_05
		}
	}
	else_if = { limit = { check_variable = { gdp_per_capita > 89.999 } }
		add_to_temp_variable = {
			health_law_desire = 17.0 # health_06
		}
	}
	# Adjust based on national focuses
	if = {
		limit = {
			has_completed_focus = FRA_reformed_universal_healthcare
		}
		add_to_temp_variable = {
			health_law_desire = 3.0
		}
	}
	if = {
		limit = {
			has_completed_focus = NIG_national_health_care_service
		}
		add_to_temp_variable = {
			health_law_desire = 3.0
		}
	}
	if = {
		limit = {
			has_completed_focus = POL_social_development_priority
		}
		add_to_temp_variable = {
			health_law_desire = 3.0
		}
	}
	if = {
		limit = {
			has_completed_focus = SYR_healthcare_reform
		}
		add_to_temp_variable = {
			health_law_desire = 3.0
		}
	}
	if = {
		limit = {
			has_completed_focus = UKR_health_care_reform
		}
		add_to_temp_variable = {
			health_law_desire = 3.0
		}
	}
	##
	##
	if = { limit = { check_variable = { treasury_rate < -5.0 } }
		subtract_from_temp_variable = { #Reduce spending when possible!
			health_law_desire = 8.0
		}
	}
	else_if = { limit = { check_variable = { treasury_rate < -4.50 } }
		subtract_from_temp_variable = { #Reduce when issues start becoming more relevant
			health_law_desire = 6.0
		}
	}
	else_if = { limit = { check_variable = { treasury_rate < -3.50 } }
		subtract_from_temp_variable = { #Reduce when issues start becoming more relevant
			health_law_desire = 4.0
		}
	}
	else_if = { limit = { check_variable = { treasury_rate < -2.50 } }
		subtract_from_temp_variable = { #Reduce when issues start becoming more relevant
			health_law_desire = 2.0
		}
	}
	# Reduce if debt is high
	if = {
		limit = {
			check_variable = { debt_ratio > 1.50 }
		}
		subtract_from_temp_variable = { health_law_desire = 3.0 }
	}

	# Next, modify based upon ruling ideology and coalition partners.
	set_temp_variable = {
		coalition_law_modifier = 0
	}
	if = {
		limit = {
			ruling_party_wants_health_minus_two = yes
		}
		subtract_from_temp_variable = {
			health_law_desire = 6.0
		}
		multiply_temp_variable = {
			num_health_minus_two_coalition_partners = 1 # Same desire as ruling party
		}
		multiply_temp_variable = {
			num_health_minus_one_coalition_partners = 1 # Minimum distance from ruling party, minimum change
		}
		multiply_temp_variable = {
			num_health_status_quo_coalition_partners = 1 # Minor distance from ruling party, minor change
		}
		multiply_temp_variable = {
			num_health_plus_one_coalition_partners = 2 # Moderate distance from ruling party, moderate change
		}
		multiply_temp_variable = {
			num_health_plus_two_coalition_partners = 3 # Major distance from ruling party, major change
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_health_minus_two_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_health_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_health_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_health_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_health_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_health_minus_two_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_health_minus_two_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			health_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_health_minus_one = yes
		}
		subtract_from_temp_variable = {
			health_law_desire = 3.0
		}
		multiply_temp_variable = {
			num_health_minus_two_coalition_partners = 1 # Minimum distance, minimum change
		}
		multiply_temp_variable = {
			num_health_minus_one_coalition_partners = 1 # Same desire as ruling party
		}
		multiply_temp_variable = {
			num_health_status_quo_coalition_partners = 1 # Minor distance from ruling party, minor change
		}
		multiply_temp_variable = {
			num_health_plus_one_coalition_partners = 2 # Moderate distance from ruling party, moderate change
		}
		multiply_temp_variable = {
			num_health_plus_two_coalition_partners = 3 # Major distance from ruling party, major change
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_health_minus_two_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_health_minus_one_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_health_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_health_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_health_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_health_minus_one_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_health_minus_one_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			health_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_health_status_quo = yes
		}
		add_to_temp_variable = {
			health_law_desire = 0.0
		}
		multiply_temp_variable = {
			num_health_minus_two_coalition_partners = 2 # moderate distance, moderate change
		}
		multiply_temp_variable = {
			num_health_minus_one_coalition_partners = 1 # minor distance, minor change
		}
		multiply_temp_variable = {
			num_health_status_quo_coalition_partners = 1 # same as ruling party
		}
		multiply_temp_variable = {
			num_health_plus_one_coalition_partners = 1 # minor distance, minor change
		}
		multiply_temp_variable = {
			num_health_plus_two_coalition_partners = 2 # moderate distance, moderate change
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_health_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_health_minus_one_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_health_status_quo_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_health_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_health_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_health_status_quo_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_health_status_quo_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			health_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_health_plus_one = yes
		}
		add_to_temp_variable = {
			health_law_desire = 3.0
		}
		multiply_temp_variable = {
			num_health_minus_two_coalition_partners = 3 # Major distance, Major change
		}
		multiply_temp_variable = {
			num_health_minus_one_coalition_partners = 2 # Moderate distance, moderate change
		}
		multiply_temp_variable = {
			num_health_status_quo_coalition_partners = 1 # Minor distance, minor change
		}
		multiply_temp_variable = {
			num_health_plus_one_coalition_partners = 1 # Same as ruling party
		}
		multiply_temp_variable = {
			num_health_plus_two_coalition_partners = 1 # minor distance, minor change
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_health_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_health_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_health_status_quo_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_health_plus_one_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_health_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_health_plus_one_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_health_plus_one_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			health_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_health_plus_two = yes
		}
		add_to_temp_variable = {
			health_law_desire = 6.0
		}
		multiply_temp_variable = {
			num_health_minus_two_coalition_partners = 3 # Major distance, Major change
		}
		multiply_temp_variable = {
			num_health_minus_one_coalition_partners = 2 # Moderate distance, moderate change
		}
		multiply_temp_variable = {
			num_health_status_quo_coalition_partners = 1 # Minor distance, minor change
		}
		multiply_temp_variable = {
			num_health_plus_one_coalition_partners = 1 # Minor distance, minor change
		}
		multiply_temp_variable = {
			num_health_plus_two_coalition_partners = 1 # Same as ruling party
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_health_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_health_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_health_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_health_plus_one_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_health_plus_two_coalition_partners
		# }
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_health_plus_two_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_health_plus_two_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			health_law_desire = coalition_law_modifier
		}
	}

	# Finally, set country flag based on result.
	if = {
		limit = {
			check_variable = {
				health_law_desire < 4
			}
		}
		set_country_flag = wants_health_01
	}
	else_if = {
		limit = {
			check_variable = {
				health_law_desire < 7
			}
		}
		set_country_flag = wants_health_02
	}
	else_if = {
		limit = {
			check_variable = {
				health_law_desire < 10
			}
		}
		set_country_flag = wants_health_03
	}
	else_if = {
		limit = {
			check_variable = {
				health_law_desire < 13
			}
		}
		set_country_flag = wants_health_04
	}
	else_if = {
		limit = {
			check_variable = {
				health_law_desire < 16
			}
		}
		set_country_flag = wants_health_05
	}
	else_if = {
		limit = {
			check_variable = {
				var = health_law_desire
				value = 16
				compare = greater_than_or_equals
			}
		}
		set_country_flag = wants_health_06
	}
}

# Welfare is highly dependent on development, but with more GDP categories skewing lower.
recalculate_social_desire = {
	set_temp_variable = { social_law_desire = 0.0 }
	# First, set base from GDP
	if = {
		limit = {
			check_variable = { gdp_per_capita < 4.000 }
		}
		add_to_temp_variable = {
			social_law_desire = 2.0 # social_01
		}
	}
	else_if = {
		limit = {
			check_variable = { gdp_per_capita > 3.999 }
			check_variable = { gdp_per_capita < 10.000 }
		}
		add_to_temp_variable = {
			social_law_desire = 5.0 # social_02
		}
	}
	else_if = {
		limit = {
			check_variable = { gdp_per_capita > 9.999 }
			check_variable = { gdp_per_capita < 20.000 }
		}
		add_to_temp_variable = {
			social_law_desire = 8.0 # social_03
		}
	}
	else_if = {
		limit = {
			check_variable = { gdp_per_capita > 19.999 }
			check_variable = { gdp_per_capita < 90.000 }
		}
		add_to_temp_variable = {
			social_law_desire = 11.0 # social_04
		}
	}
	else_if = {
		limit = {
			check_variable = { gdp_per_capita > 89.999 }
		}
		add_to_temp_variable = {
			social_law_desire = 14.0 # social_05
		}
	}
	# Add modifiers based upon completed focuses, to prevent AI countries from immediately changing again
	if = {
		limit = {
			has_completed_focus = BRA_fome_zero
		}
		add_to_temp_variable = {
			social_law_desire = 3.0
		}
	}
	if = {
		limit = {
			has_completed_focus = GCC_deepen_the_safety_net
		}
		add_to_temp_variable = {
			social_law_desire = 3.0
		}
	}
	if = {
		limit = {
			has_completed_focus = NIG_poverty_issues
		}
		add_to_temp_variable = {
			social_law_desire = 3.0
		}
	}
	if = {
		limit = {
			has_completed_focus = NIG_expand_the_safety_net
		}
		add_to_temp_variable = {
			social_law_desire = 3.0
		}
	}
	if = {
		limit = {
			has_completed_focus = POL_guarantee_family_support
		}
		add_to_temp_variable = {
			social_law_desire = 3.0
		}
	}
	if = {
		limit = {
			has_completed_focus = POL_focus_on_social_projects
		}
		add_to_temp_variable = {
			social_law_desire = 3.0
		}
	}
	if = {
		limit = {
			has_completed_focus = POL_full_social_support
		}
		add_to_temp_variable = {
			social_law_desire = 3.0
		}
	}
	if = {
		limit = {
			has_completed_focus = CHI_Break_the_Iron_Rice_Bowl
		}
		subtract_from_temp_variable = {
			social_law_desire = 3.0
		}
	}
	if = {
		limit = {
			has_completed_focus = GCC_shrink_the_safety_net
		}
		subtract_from_temp_variable = {
			social_law_desire = 3.0
		}
	}
	##
	if = { limit = { check_variable = { treasury_rate < -5.0 } }
		subtract_from_temp_variable = { #Reduce spending when possible!
			social_law_desire = 8.0
		}
	}
	else_if = { limit = { check_variable = { treasury_rate < -4.50 } }
		subtract_from_temp_variable = { #Reduce when issues start becoming more relevant
			social_law_desire = 6.0
		}
	}
	else_if = { limit = { check_variable = { treasury_rate < -3.50 } }
		subtract_from_temp_variable = { #Reduce when issues start becoming more relevant
			social_law_desire = 4.0
		}
	}
	else_if = { limit = { check_variable = { treasury_rate < -2.50 } }
		subtract_from_temp_variable = { #Reduce when issues start becoming more relevant
			social_law_desire = 2.0
		}
	}
	# Reduce if debt is high
	if = {
		limit = {
			check_variable = { debt_ratio > 1.50 }
		}
		subtract_from_temp_variable = { social_law_desire = 3.0 }
	}

	# Next, modify based upon ruling ideology and coalition partners.
	set_temp_variable = { coalition_law_modifier = 0 }
	if = {
		limit = {
			ruling_party_wants_social_minus_two = yes
		}
		subtract_from_temp_variable = {
			social_law_desire = 6.0
		}
		multiply_temp_variable = {
			num_social_minus_two_coalition_partners = 1 # Same desire as ruling party
		}
		multiply_temp_variable = {
			num_social_minus_one_coalition_partners = 1 # Minimum distance from ruling party, minimum change
		}
		multiply_temp_variable = {
			num_social_status_quo_coalition_partners = 1 # Minor distance from ruling party, minor change
		}
		multiply_temp_variable = {
			num_social_plus_one_coalition_partners = 2 # Moderate distance from ruling party, moderate change
		}
		multiply_temp_variable = {
			num_social_plus_two_coalition_partners = 3 # Major distance from ruling party, major change
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_social_minus_two_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_social_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_social_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_social_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_social_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_social_minus_two_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_social_minus_two_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = { social_law_desire = coalition_law_modifier }
	}
	else_if = {
		limit = {
			ruling_party_wants_social_minus_one = yes
		}
		subtract_from_temp_variable = {
			social_law_desire = 3.0
		}
		multiply_temp_variable = {
			num_social_minus_two_coalition_partners = 1 # Minimum distance, minimum change
		}
		multiply_temp_variable = {
			num_social_minus_one_coalition_partners = 1 # Same desire as ruling party
		}
		multiply_temp_variable = {
			num_social_status_quo_coalition_partners = 1 # Minor distance from ruling party, minor change
		}
		multiply_temp_variable = {
			num_social_plus_one_coalition_partners = 2 # Moderate distance from ruling party, moderate change
		}
		multiply_temp_variable = {
			num_social_plus_two_coalition_partners = 3 # Major distance from ruling party, major change
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_social_minus_two_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_social_minus_one_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_social_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_social_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_social_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_social_minus_one_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_social_minus_one_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			social_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_social_status_quo = yes
		}
		add_to_temp_variable = {
			social_law_desire = 0.0
		}
		multiply_temp_variable = {
			num_social_minus_two_coalition_partners = 2 # moderate distance, moderate change
		}
		multiply_temp_variable = {
			num_social_minus_one_coalition_partners = 1 # minor distance, minor change
		}
		multiply_temp_variable = {
			num_social_status_quo_coalition_partners = 1 # same as ruling party
		}
		multiply_temp_variable = {
			num_social_plus_one_coalition_partners = 1 # minor distance, minor change
		}
		multiply_temp_variable = {
			num_social_plus_two_coalition_partners = 2 # moderate distance, moderate change
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_social_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_social_minus_one_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_social_status_quo_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_social_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_social_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_social_status_quo_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_social_status_quo_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			social_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_social_plus_one = yes
		}
		add_to_temp_variable = {
			social_law_desire = 3.0
		}
		multiply_temp_variable = {
			num_social_minus_two_coalition_partners = 3 # Major distance, Major change
		}
		multiply_temp_variable = {
			num_social_minus_one_coalition_partners = 2 # Moderate distance, moderate change
		}
		multiply_temp_variable = {
			num_social_status_quo_coalition_partners = 1 # Minor distance, minor change
		}
		multiply_temp_variable = {
			num_social_plus_one_coalition_partners = 1 # Same as ruling party
		}
		multiply_temp_variable = {
			num_social_plus_two_coalition_partners = 1 # minor distance, minor change
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_social_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_social_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_social_status_quo_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_social_plus_one_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_social_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_social_plus_one_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_social_plus_one_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			social_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_social_plus_two = yes
		}
		add_to_temp_variable = {
			social_law_desire = 6.0
		}
		multiply_temp_variable = {
			num_social_minus_two_coalition_partners = 3 # Major distance, Major change
		}
		multiply_temp_variable = {
			num_social_minus_one_coalition_partners = 2 # Moderate distance, moderate change
		}
		multiply_temp_variable = {
			num_social_status_quo_coalition_partners = 1 # Minor distance, minor change
		}
		multiply_temp_variable = {
			num_social_plus_one_coalition_partners = 1 # Minor distance, minor change
		}
		multiply_temp_variable = {
			num_social_plus_two_coalition_partners = 1 # Same as ruling party
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_social_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_social_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_social_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_social_plus_one_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_social_plus_two_coalition_partners
		# }
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_social_plus_two_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_social_plus_two_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_temp_variable = {
			social_law_desire = coalition_law_modifier
		}
	}

	# Finally, set country flag based on result.
	if = { limit = { check_variable = { social_law_desire < 4 } }
		set_country_flag = wants_social_01
	}
	else_if = { limit = { check_variable = { social_law_desire < 7 } }
		set_country_flag = wants_social_02
	}
	else_if = { limit = { check_variable = { social_law_desire < 10 } }
		set_country_flag = wants_social_03
	}
	else_if = { limit = { check_variable = { social_law_desire < 13 } }
		set_country_flag = wants_social_04
	}
	else_if = { limit = { check_variable = { social_law_desire < 16 } }
		set_country_flag = wants_social_05
	}
	else_if = { limit = { check_variable = { var = social_law_desire value = 16 compare = greater_than_or_equals } }
		set_country_flag = wants_social_06
	}
}

##Military Laws
recalculate_defence_spending_desire = {
	set_temp_variable = { defence_spending_desire = 0 }
	#Base Calc is based on Power
	if = {
		limit = { has_idea = non_power }
		add_to_temp_variable = { defence_spending_desire = 1 } #Non_powers WANT 00 - 04 due to budget
	}
	else_if = {
		limit = { has_idea = minor_power }
		add_to_temp_variable = { defence_spending_desire = 2 }
	}
	else_if = {
		limit = { has_idea = regional_power }
		add_to_temp_variable = { defence_spending_desire = 4 }
	}
	else_if = {
		limit = { has_idea = large_power }
		add_to_temp_variable = { defence_spending_desire = 6 }
	}
	else_if = {
		limit = { has_idea = great_power }
		add_to_temp_variable = { defence_spending_desire = 8 }
	}
	else_if = {
		limit = { has_idea = superpower }
		add_to_temp_variable = { defence_spending_desire = 12 }
	}

	#Focuses that increase military spending
	if = {
		limit = { has_completed_focus = CHI_Strategic_Industries }
		add_to_temp_variable = { defence_spending_desire = 2 }
	}
	if = {
		limit = { has_completed_focus = JAP_mobilize_the_population }
		add_to_temp_variable = { defence_spending_desire = 2 }
	}
	if = {
		limit = { has_completed_focus = POL_new_allience }
		add_to_temp_variable = { defence_spending_desire = 2 }
	}
	if = {
		limit = { has_completed_focus = POL_anti_russian_front }
		add_to_temp_variable = { defence_spending_desire = 2 }
	}
	if = {
		limit = { has_completed_focus = SOV_2008_military_reforms }
		add_to_temp_variable = { defence_spending_desire = 2 }
	}

	##Economic Factors
	if = {
		limit = { num_of_military_factories > 5 }
		add_to_temp_variable = { defence_spending_desire = 1 }
	}
	if = {
		limit = { num_of_military_factories > 10 }
		add_to_temp_variable = { defence_spending_desire = 1 }
	}
	if = {
		limit = { num_of_military_factories > 15 }
		add_to_temp_variable = { defence_spending_desire = 1 }
	}
	if = {
		limit = { num_of_military_factories > 25 }
		add_to_temp_variable = { defence_spending_desire = 1 }
	}
	if = {
		limit = { num_of_military_factories > 40 }
		add_to_temp_variable = { defence_spending_desire = 1 }
	}
	if = {
		limit = { num_of_military_factories > 60 }
		add_to_temp_variable = { defence_spending_desire = 1 }
	}
	if = {
		limit = { num_of_military_factories > 80 }
		add_to_temp_variable = { defence_spending_desire = 1 }
	}
	if = {
		limit = { num_of_military_factories > 100 }
		add_to_temp_variable = { defence_spending_desire = 1 }
	}

	if = {
		limit = {
			ai_has_acceptable_deficit = no #When deficit becomes unbearable start to reduce!
		}
		subtract_from_temp_variable = { #Reduce spending when possible!
			defence_spending_desire = 7.0
		}
	}
	# Reduce if Debt is high
	if = { limit = { check_variable = { debt_ratio > 1.50 } }
		subtract_from_temp_variable = { #Reduce spending when possible!
			defence_spending_desire = 3.0
		}
	}

	if = {
		limit = { ruling_party_in_favor_of_higher_military_spending = yes }
		add_to_temp_variable = { defence_spending_desire = 5 }
	}
	else = {
		subtract_from_temp_variable = { defence_spending_desire = 5 }
	}

	if = {
		limit = { check_variable = { defence_spending_desire > 15 } }
		set_country_flag = wants_defence_00
	}

}

# Wrapper function to do everything in one place.
recalculate_law_desires = {
	clear_law_desire_flags = yes # First, clear law desire flags.
	focus_on_laws_due_to_economic_despair = yes # This should trigger economic despair
	get_coalition_partner_numbers = yes # Next, get coalition partner modifiers.
	recalculate_bureaucracy_desire = yes
	recalculate_police_desire = yes
	recalculate_edu_desire = yes
	recalculate_health_desire = yes
	recalculate_social_desire = yes
}

focus_on_laws_due_to_economic_despair = {
	if = {
		limit = {
			NOT = { has_country_flag = AI_economic_downspiral }
			OR = {
				has_idea = depression
				has_idea = recession
				ai_has_major_economic_problems = yes
				ai_has_moderate_economic_problems = yes
			}
		}
		set_country_flag = AI_economic_downspiral
		log = "[GetDateText]: [Root.GetName]: AI Scripted Trigger: focus_on_laws_due_to_economic_despair fired"
	}
	else_if = {
		limit = {
			has_country_flag = AI_economic_downspiral
			OR = {
				ai_has_acceptable_deficit = yes
				NOT = {
					has_idea = depression
					has_idea = recession
				}
			}
		}
		log = "[GetDateText]: [Root.GetName]: AI Scripted Trigger: focus_on_laws_due_to_economic_despair removed" #To log when the AI actuall needs to fire these
		clr_country_flag = AI_economic_downspiral
	}
}

# Logging Sections
bureau_law_desire_logger = {
	if = { limit = { has_country_flag = wants_bureau_01 }
		log = "[GetDateText]: [Root.GetName]: Bureaucracy law desire: bureau_01"
	}
	else_if = { limit = { has_country_flag = wants_bureau_02 }
		log = "[GetDateText]: [Root.GetName]: Bureaucracy law desire: bureau_02"
	}
	else_if = { limit = { has_country_flag = wants_bureau_03 }
		log = "[GetDateText]: [Root.GetName]: Bureaucracy law desire: bureau_03"
	}
	else_if = { limit = { has_country_flag = wants_bureau_04 }
		log = "[GetDateText]: [Root.GetName]: Bureaucracy law desire: bureau_04"
	}
	else_if = { limit = { has_country_flag = wants_bureau_05 }
		log = "[GetDateText]: [Root.GetName]: Bureaucracy law desire: bureau_05"
	}
	else = {
		log = "[GetDateText]: [Root.GetName]: Error: No bureaucracy law desire found"
	}
}

police_law_desire_logger = {
	if = { limit = { has_country_flag = wants_police_01 }
		log = "[GetDateText]: [Root.GetName]: Police/security law desire: police_01"
	}
	else_if = { limit = { has_country_flag = wants_police_02 }
		log = "[GetDateText]: [Root.GetName]: Police/security law desire: police_02"
	}
	else_if = { limit = { has_country_flag = wants_police_03 }
		log = "[GetDateText]: [Root.GetName]: Police/security law desire: police_03"
	}
	else_if = { limit = { has_country_flag = wants_police_04 }
		log = "[GetDateText]: [Root.GetName]: Police/security law desire: police_04"
	}
	else_if = { limit = { has_country_flag = wants_police_05 }
		log = "[GetDateText]: [Root.GetName]: Police/security law desire: police_05"
	}
	else = {
		log = "[GetDateText]: [Root.GetName]: Error: No Police/security law desire found"
	}
}

education_law_desire_logger = {
	if = {
		limit = {
			has_country_flag = wants_edu_01
		}
		log = "[GetDateText]: [Root.GetName]: Education law desire: edu_01"
	}
	else_if = {
		limit = {
			has_country_flag = wants_edu_02
		}
		log = "[GetDateText]: [Root.GetName]: Education law desire: edu_02"
	}
	else_if = {
		limit = {
			has_country_flag = wants_edu_03
		}
		log = "[GetDateText]: [Root.GetName]: Education law desire: edu_03"
	}
	else_if = {
		limit = {
			has_country_flag = wants_edu_04
		}
		log = "[GetDateText]: [Root.GetName]: Education law desire: edu_04"
	}
	else_if = {
		limit = {
			has_country_flag = wants_edu_05
		}
		log = "[GetDateText]: [Root.GetName]: Education law desire: edu_05"
	}
	else = {
		log = "[GetDateText]: [Root.GetName]: Error: No Education law desire found"
	}
}

health_law_desire_trigger = {
	if = {
		limit = {
			has_country_flag = wants_health_01
		}
		log = "[GetDateText]: [Root.GetName]: Health law desire: health_01"
	}
	else_if = {
		limit = {
			has_country_flag = wants_health_02
		}
		log = "[GetDateText]: [Root.GetName]: Health law desire: health_02"
	}
	else_if = {
		limit = {
			has_country_flag = wants_health_03
		}
		log = "[GetDateText]: [Root.GetName]: Health law desire: health_03"
	}
	else_if = {
		limit = {
			has_country_flag = wants_health_04
		}
		log = "[GetDateText]: [Root.GetName]: Health law desire: health_04"
	}
	else_if = {
		limit = {
			has_country_flag = wants_health_05
		}
		log = "[GetDateText]: [Root.GetName]: Health law desire: health_05"
	}
	else_if = {
		limit = {
			has_country_flag = wants_health_06
		}
		log = "[GetDateText]: [Root.GetName]: Health law desire: health_06"
	}
	else = {
		log = "[GetDateText]: [Root.GetName]: Error: No Health law desire found"
	}
}

social_law_desire_trigger = {
	if = {
		limit = {
			has_country_flag = wants_social_01
		}
		log = "[GetDateText]: [Root.GetName]: Social Budget law desire: social_01"
	}
	else_if = {
		limit = {
			has_country_flag = wants_social_02
		}
		log = "[GetDateText]: [Root.GetName]: Social Budget law desire: social_02"
	}
	else_if = {
		limit = {
			has_country_flag = wants_social_03
		}
		log = "[GetDateText]: [Root.GetName]: Social Budget law desire: social_03"
	}
	else_if = {
		limit = {
			has_country_flag = wants_social_04
		}
		log = "[GetDateText]: [Root.GetName]: Social Budget law desire: social_04"
	}
	else_if = {
		limit = {
			has_country_flag = wants_social_05
		}
		log = "[GetDateText]: [Root.GetName]: Social Budget law desire: social_05"
	}
	else_if = {
		limit = {
			has_country_flag = wants_social_06
		}
		log = "[GetDateText]: [Root.GetName]: Social Budget law desire: social_06"
	}
	else = {
		log = "[GetDateText]: [Root.GetName]: Error: No Social Budget law desire found"
	}
}