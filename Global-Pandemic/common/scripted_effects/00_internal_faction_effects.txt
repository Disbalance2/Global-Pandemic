# Authors: Birdy, Killerabbit
# see Modding Resources/Internal Factions/ for more info on functions and code
# Purpose of this file:
# This file handles ALL background methods for the internal faction system.
# Version: v2.0
# Last Modified: January 2022

# List of Factions sorted by category
# Economic Type: Small & Medium Business Owners, International Bankers, Fossil Fuel Industry
# Industrial Conglomerates, Oligarchs
# Militaristic: Maritime Industry, Military-Industrial Complex, The Military, Intelligence Community
# Special Interest: Labour Unions, Landowners, Farmers, Communist Cadres
# Religious Factions: Wahabi Ulema, The Ulema, The Clergy, The Priesthood
# Nation Specific: The Donju, The Bazaar, Saudi Royal Family, IRGC, Iranian Quds Force,
# Foreign Jihadis, VEVAK, Chaebols, Wall Street, ISI Pakistan

# setup_init_factions:
# Method for initializing all dynamic modifiers and other effects for the internal faction system
setup_init_factions = {
	# Economic Factions
	if = {
		limit = {
			has_idea = small_medium_business_owners
			NOT = { has_variable = small_medium_business_owners_opinion }
		}
		set_variable = { small_medium_business_owners_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = international_bankers
			NOT = { has_variable = international_bankers_opinion }
		}
		set_variable = { international_bankers_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = oligarchs
			NOT = { has_variable = oligarchs_opinion }
		}
		set_variable = { oligarchs_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = industrial_conglomerates
			NOT = { has_variable = industrial_conglomerates_opinion }
		}
		set_variable = { industrial_conglomerates_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = fossil_fuel_industry
			NOT = { has_variable = fossil_fuel_industry_opinion }
		}
		set_variable = { fossil_fuel_industry_opinion = 50 }
	}
	# Militaristic Factions
	if = {
		limit = {
			has_idea = intelligence_community
			NOT = { has_variable = intelligence_community_opinion }
		}
		set_variable = { intelligence_community_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = the_military
			NOT = { has_variable = the_military_opinion }
		}
		set_variable = { the_military_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = defense_industry
			NOT = { has_variable = defense_industry_opinion }
		}
		set_variable = { defense_industry_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = maritime_industry
			NOT = { has_variable = maritime_industry_opinion }
		}
		set_variable = { maritime_industry_opinion = 50 }
	}
	# Special Interest Groups
	if = {
		limit = {
			has_idea = wahabi_ulema
			NOT = { has_variable = wahabi_ulema_opinion }
		}
		set_variable = { wahabi_ulema_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = the_priesthood
			NOT = { has_variable = the_priesthood_opinion }
		}
		set_variable = { the_priesthood_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = the_ulema
			NOT = { has_variable = the_ulema_opinion }
		}
		set_variable = { the_ulema_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = the_clergy
			NOT = { has_variable = the_clergy_opinion }
		}
		set_variable = { the_clergy_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = communist_cadres
			NOT = { has_variable = communist_cadres_opinion }
		}
		set_variable = { communist_cadres_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = farmers
			NOT = { has_variable = farmers_opinion }
		}
		set_variable = { farmers_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = landowners
			NOT = { has_variable = landowners_opinion }
		}
		set_variable = { landowners_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = labour_unions
			NOT = { has_variable = labour_unions_opinion }
		}
		set_variable = { labour_unions_opinion = 50 }
	}
	# Nation Specific
	if = {
		limit = {
			has_idea = irgc
			NOT = { has_variable = irgc_opinion }
		}
		set_variable = { irgc_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = foreign_jihadis
			NOT = { has_variable = foreign_jihadis_opinion }
		}
		set_variable = { foreign_jihadis_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = iranian_quds_force
			NOT = { has_variable = iranian_quds_force_opinion }
		}
		set_variable = { iranian_quds_force_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = saudi_royal_family
			NOT = { has_variable = saudi_royal_family_opinion }
		}
		set_variable = { saudi_royal_family_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = vevak
			NOT = { has_variable = vevak_opinion }
		}
		set_variable = { vevak_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = isi_pakistan
			NOT = { has_variable = isi_pakistan_opinion }
		}
		set_variable = { isi_pakistan_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = chaebols
			NOT = { has_variable = chaebols_opinion }
		}
		set_variable = { chaebols_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = wall_street
			NOT = { has_variable = wall_street_opinion }
		}
		set_variable = { wall_street_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = the_donju
			NOT = { has_variable = the_donju_opinion }
		}
		set_variable = { the_donju_opinion = 50 }
	}
	if = {
		limit = {
			has_idea = the_bazaar
			NOT = { has_variable = the_bazaar_opinion }
		}
		set_variable = { the_bazaar_opinion = 50 }
	}
	initialize_internal_faction_dynamic_modifiers = yes
}

# display_election_campaign_status:
# Method for handling Internal Factions role in MDs Election System
# Note: This is a handler for adding to variable campaign_funding_count which impacts the election system
# Otherwise it is only used for localization purposes in the initial event for elections.
# Subsequent effects such as display_election_status_small_medium_business_owners are just for the
# individual factions and their impact on the variable campaign_funding_count and their display loc
display_election_campaign_status = {
	# Base Value of Campaign Funding
	# Further Modified by your factions
	set_variable = { campaign_funding_count = 10 }

	# Economic Factions
	if = { limit = { has_idea = small_medium_business_owners }
		display_election_status_small_medium_business_owners = yes
	}
	if = { limit = { has_idea = international_bankers }
		display_election_status_international_bankers = yes
	}
	if = { limit = { has_idea = fossil_fuel_industry }
		display_election_status_fossil_fuel_industry = yes
	}
	if = { limit = { has_idea = industrial_conglomerates }
		display_election_status_industrial_conglomerates = yes
	}
	if = { limit = { has_idea = oligarchs }
		display_election_status_oligarchs = yes
	}

	# Militaristic Groups
	if = { limit = { has_idea = defense_industry }
		display_election_status_defense_industry = yes
	}
	if = { limit = { has_idea = maritime_industry }
		display_election_status_maritime_industry = yes
	}
	if = { limit = { has_idea = the_military }
		display_election_status_the_military = yes
	}
	if = { limit = { has_idea = intelligence_community }
		display_election_status_intelligence_community = yes
	}

	# Special Interest Groups
	if = { limit = { has_idea = labour_unions }
		display_election_status_labour_unions = yes
	}
	if = { limit = { has_idea = landowners }
		display_election_status_landowners = yes
	}
	if = { limit = { has_idea = farmers }
		display_election_status_farmers = yes
	}
	if = { limit = { has_idea = communist_cadres }
		display_election_status_communist_cadres = yes
	}

	# Religious Factions
	if = { limit = { has_idea = the_priesthood }
		display_election_status_the_priesthood = yes
	}
	if = { limit = { has_idea = the_ulema }
		display_election_status_the_ulema = yes
	}
	if = { limit = { has_idea = the_clergy }
		display_election_status_the_clergy = yes
	}
	if = { limit = { has_idea = wahabi_ulema }
		display_election_status_wahabi_ulema = yes
	}

	# Nation Specific Factions
	if = { limit = { has_idea = the_donju }
		display_election_status_the_donju = yes
	}
	if = { limit = { has_idea = the_bazaar }
		display_election_status_the_bazaar = yes
	}
	if = { limit = { has_idea = saudi_royal_family }
		display_election_status_saudi_royal_family = yes
	}
	if = { limit = { has_idea = irgc }
		display_election_status_IRGC = yes
	}
	if = { limit = { has_idea = iranian_quds_force }
		display_election_status_iranian_quds_force = yes
	}
	if = { limit = { has_idea = foreign_jihadis }
		display_election_status_foreign_jihadis = yes
	}
	if = { limit = { has_idea = vevak }
		display_election_status_VEVAK = yes
	}
	if = { limit = { has_idea = isi_pakistan }
		display_election_status_isi_pakistan = yes
	}
	if = { limit = { has_idea = wall_street }
		display_election_status_wall_street = yes
	}
	if = { limit = { has_idea = chaebols }
		display_election_status_chaebols = yes
	}

	custom_effect_tooltip = display_internal_faction_election_effects
}

# Economic Factions
display_election_status_small_medium_business_owners = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_small_medium_business_owners = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_small_medium_business_owners = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_small_medium_business_owners = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_small_medium_business_owners = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_small_medium_business_owners = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_international_bankers = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_international_bankers = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_international_bankers = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_international_bankers = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_international_bankers = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_international_bankers = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_fossil_fuel_industry = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_fossil_fuel_industry = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_fossil_fuel_industry = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_fossil_fuel_industry = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_fossil_fuel_industry = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_fossil_fuel_industry = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_industrial_conglomerates = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_industrial_conglomerates = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_industrial_conglomerates = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_industrial_conglomerates = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_industrial_conglomerates = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_industrial_conglomerates = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_oligarchs = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_oligarchs = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_oligarchs = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_oligarchs = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_oligarchs = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_oligarchs = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}

#Militaristic Groups
display_election_status_defense_industry = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_defense_industry = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_defense_industry = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_defense_industry = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_defense_industry = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_defense_industry = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_maritime_industry = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_maritime_industry = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_maritime_industry = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_maritime_industry = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_maritime_industry = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_maritime_industry = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_the_military = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_the_military = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_the_military = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_the_military = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_the_military = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_the_military = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_intelligence_community = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_intelligence_community = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_intelligence_community = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_intelligence_community = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_intelligence_community = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_intelligence_community = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}

# Special Interest Groups
display_election_status_labour_unions = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_labour_unions = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_labour_unions = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_labour_unions = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_labour_unions = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_labour_unions = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_landowners = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_landowners = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_landowners = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_landowners = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_landowners = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_landowners = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_farmers = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_farmers = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_farmers = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_farmers = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_farmers = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_farmers = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_communist_cadres = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_communist_cadres = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_communist_cadres = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_communist_cadres = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_communist_cadres = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_communist_cadres = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}

# Religious Factions
display_election_status_the_clergy = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_the_clergy = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_the_clergy = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_the_clergy = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_the_clergy = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_the_clergy = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_the_ulema = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_the_ulema = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_the_ulema = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_the_ulema = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_the_ulema = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_the_ulema = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_the_priesthood = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_the_priesthood = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_the_priesthood = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_the_priesthood = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_the_priesthood = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_the_priesthood = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_wahabi_ulema = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_wahabi_ulema = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_wahabi_ulema = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_wahabi_ulema = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_wahabi_ulema = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_wahabi_ulema = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_saudi_royal_family = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_saudi_royal_family = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_saudi_royal_family = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_saudi_royal_family = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_saudi_royal_family = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_saudi_royal_family = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_chaebols = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_chaebols = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_chaebols = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_chaebols = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_chaebols = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_chaebols = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_wall_street = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_wall_street = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_wall_street = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_wall_street = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_wall_street = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_wall_street = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_the_donju = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_the_donju = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_the_donju = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_the_donju = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_the_donju = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_the_donju = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_the_bazaar = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_the_bazaar = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_the_bazaar = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_the_bazaar = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_the_bazaar = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_the_bazaar = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_IRGC = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_irgc = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_irgc = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_irgc = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_irgc = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_irgc = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_foreign_jihadis = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_foreign_jihadis = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_foreign_jihadis = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_foreign_jihadis = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_foreign_jihadis = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_foreign_jihadis = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_iranian_quds_force = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_iranian_quds_force = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_iranian_quds_force = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_iranian_quds_force = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_iranian_quds_force = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_iranian_quds_force = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_isi_pakistan = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_isi_pakistan = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_isi_pakistan = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_isi_pakistan = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_isi_pakistan = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_isi_pakistan = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}
display_election_status_VEVAK = {
	set_temp_variable = { election_funding = 0 }
	if = { limit = { hostile_vevak = yes }
		add_to_temp_variable = { election_funding = -2 }
	}
	else_if = { limit = { negative_vevak = yes }
		add_to_temp_variable = { election_funding = -1 }
	}
	else_if = { limit = { indifferent_vevak = yes }
		add_to_temp_variable = { election_funding = 0 }
	}
	else_if = { limit = { positive_vevak = yes }
		add_to_temp_variable = { election_funding = 1 }
	}
	else_if = { limit = { enthusiastic_vevak = yes }
		add_to_temp_variable = { election_funding = 2 }
	}
	add_to_variable = { campaign_funding_count = election_funding }
	clear_variable = election_funding
}

# Check for deposed faction
check_deposed_faction = {
	# if = {
	# 	limit = {
	# 		has_country_flag = active_small_medium_business_owners
	# 		NOT = { has_idea = small_medium_business_owners }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.1 } } }
	# 	clr_country_flag = active_small_medium_business_owners
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_the_bazaar
	# 		NOT = { has_idea = the_bazaar }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.1 } } }
	# 	clr_country_flag = active_the_bazaar
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_the_donju
	# 		NOT = { has_idea = the_donju }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.1 } } }
	# 	clr_country_flag = active_the_donju
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_international_bankers
	# 		NOT = { has_idea = international_bankers }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.2 } } }
	# 	clr_country_flag = active_international_bankers
	# 	calculate_interest_rate = yes
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_wall_street
	# 		NOT = { has_idea = wall_street }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.2 } } }
	# 	clr_country_flag = active_wall_street
	# 	calculate_interest_rate = yes
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_fossil_fuel_industry
	# 		NOT = { has_idea = fossil_fuel_industry }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.3 } } }
	# 	clr_country_flag = active_fossil_fuel_industry
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_industrial_conglomerates
	# 		NOT = { has_idea = industrial_conglomerates }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.4 } } }
	# 	clr_country_flag = active_industrial_conglomerates
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_chaebols
	# 		NOT = { has_idea = chaebols }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.4 } } }
	# 	clr_country_flag = active_chaebols
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_oligarchs
	# 		NOT = { has_idea = oligarchs }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.5 } } }
	# 	clr_country_flag = active_oligarchs
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_maritime_industry
	# 		NOT = { has_idea = maritime_industry }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.6 } } }
	# 	clr_country_flag = active_maritime_industry
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_defense_industry
	# 		NOT = { has_idea = defense_industry }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.7 } } }
	# 	clr_country_flag = active_defense_industry
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_the_military
	# 		NOT = { has_idea = the_military }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.8 } } }
	# 	clr_country_flag = active_the_military
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_intelligence_community
	# 		NOT = { has_idea = intelligence_community }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.9 } } }
	# 	clr_country_flag = active_intelligence_community
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_isi_pakistan
	# 		NOT = { has_idea = isi_pakistan }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.9 } } }
	# 	clr_country_flag = active_isi_pakistan
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_VEVAK
	# 		NOT = { has_idea = vevak }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.9 } } }
	# 	clr_country_flag = active_VEVAK
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_labour_unions
	# 		NOT = { has_idea = labour_unions }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.10 } } }
	# 	clr_country_flag = active_labour_unions
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_landowners
	# 		NOT = { has_idea = landowners }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.11 } } }
	# 	clr_country_flag = active_landowners
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_farmers
	# 		NOT = { has_idea = farmers }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.12 } } }
	# 	clr_country_flag = active_farmers
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_communist_cadres
	# 		NOT = { has_idea = communist_cadres }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.13 } } }
	# 	clr_country_flag = active_communist_cadres
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_the_clergy
	# 		NOT = { has_idea = the_clergy }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.14 } } }
	# 	clr_country_flag = active_the_clergy
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_the_ulema
	# 		NOT = { has_idea = the_ulema }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.14 } } }
	# 	clr_country_flag = active_the_ulema
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_the_priesthood
	# 		NOT = { has_idea = the_priesthood }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.14 } } }
	# 	clr_country_flag = active_the_priesthood
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_wahabi_ulema
	# 		NOT = { has_idea = wahabi_ulema }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.14 } } }
	# 	clr_country_flag = active_wahabi_ulema
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_saudi_royal_family
	# 		NOT = { has_idea = saudi_royal_family }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.15 } } }
	# 	clr_country_flag = active_saudi_royal_family
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_iranian_quds_force
	# 		NOT = { has_idea = iranian_quds_force }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.16 } } }
	# 	clr_country_flag = active_iranian_quds_force
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_foreign_jihadis
	# 		NOT = { has_idea = foreign_jihadis }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.17 } } }
	# 	clr_country_flag = active_foreign_jihadis
	# }
	# if = {
	# 	limit = {
	# 		has_country_flag = active_IRGC
	# 		NOT = { has_idea = irgc }
	# 	}
	# 	hidden_effect = { ROOT = { country_event = { days = 1 id = int_fac_deposed.18 } } }
	# 	clr_country_flag = active_IRGC
	# }
}

# Cleanup Function:
# This is a tidy function to remove a variable if a nation no longer has a faction it will clear its variable
if_no_longer_has_faction_clear_previous = {
	if = {
		limit = {
			NOT = { has_idea = small_medium_business_owners }
			has_variable = small_medium_business_owners_opinion
		}
		clear_variable = small_medium_business_owners_opinion
		clear_variable = SMBO_production_speed_industrial_complex_factor
		clear_variable = SMBO_stability_factor
		clear_variable = SMBO_consumer_goods_factor_var
		clear_variable = SMBO_civilian_industry_tax_modifier_var
		clear_variable = SMBO_production_speed_internet_station_factor_var
	}
	if = {
		limit = {
			NOT = { has_idea = international_bankers }
			has_variable = international_bankers_opinion
		}
		clear_variable = international_bankers_opinion
		clear_variable = INTB_psof_var
		clear_variable = INTB_local_resources_factor_var
		clear_variable = INTB_trade_opinion_factor_var
		clear_variable = INTB_democratic_acceptance_factor_var
		clear_variable = INTB_democratic_drift_var
		clear_variable = INTB_investment_duration_var
		clear_variable = INTB_investment_cost_var
		clear_variable = INTB_office_park_income_tax_modifier_var
	}
	if = {
		limit = {
			NOT = { has_idea = fossil_fuel_industry }
			has_variable = fossil_fuel_industry_opinion
		}
		clear_variable = fossil_fuel_industry_opinion
		clear_variable = FFI_local_resource_factor_var
		clear_variable = FFI_fuel_gain_factor_var
		clear_variable = FFI_justify_war_goal_time_var
		clear_variable = FFI_oil_export_multiplier_modifier_var
		clear_variable = FFI_production_speed_fuel_silo_factor_var
	}
	if = {
		limit = {
			NOT = { has_idea = industrial_conglomerates }
			has_variable = industrial_conglomerates_opinion
		}
		clear_variable = industrial_conglomerates_opinion
		clear_variable = ICL_psifra_factor_var
		clear_variable = ICL_local_resources_factor_var
		clear_variable = ICL_communism_acceptance_factor_var
		clear_variable = ICL_communism_drift
	}
	if = {
		limit = {
			NOT = { has_idea = oligarchs }
			has_variable = oligarchs_opinion
		}
		clear_variable = oligarchs_opinion
		clear_variable = OLI_psic_factor_var
		clear_variable = OLI_local_resources_factor_var
		clear_variable = OLI_communism_acceptance_factor_var
		clear_variable = OLI_communism_drift_var
	}
	if = {
		limit = {
			NOT = { has_idea = maritime_industry }
			has_variable = maritime_industry_opinion
		}
		clear_variable = maritime_industry_opinion
		clear_variable = MRI_dockyard_factor_var
		clear_variable = MRI_psvb_factor_var
		clear_variable = MRI_industrial_capacity_dockyard_var
		clear_variable = MRI_navy_max_range_factor_var
		clear_variable = MRI_dockyard_productivity_var
		clear_variable = MRI_dockyard_income_tax_modifier_var
	}
	if = {
		limit = {
			NOT = { has_idea = defense_industry }
			has_variable = defense_industry_opinion
		}
		clear_variable = defense_industry_opinion
		clear_variable = DEF_military_factory_speed_factor_var
		clear_variable = DEF_factory_base_efficiency_factor_var
		clear_variable = DEF_military_factory_speed_factor_var
		clear_variable = DEF_military_factories_productivity_var
		clear_variable = DEF_military_industry_tax_modifier_var
	}
	if = {
		limit = {
			NOT = { has_idea = the_military }
			has_variable = the_military_opinion
		}
		clear_variable = the_military_opinion
		clear_variable = MILI_army_org_factor_var
		clear_variable = MILI_army_morale_factor_var
		clear_variable = MILI_training_time_factor_var
		clear_variable = MILI_air_base_production_factor_var
		clear_variable = MILI_personnel_cost_multiplier_modifier_var
	}
	if = {
		limit = {
			NOT = { has_idea = intelligence_community }
			has_variable = intelligence_community_opinion
		}
		clear_variable = intelligence_community_opinion
		clear_variable = INTC_decryption_factor_var
		clear_variable = INTC_encryption_factor_var
		clear_variable = INTC_foreign_subversive_activies_upkeep_var
		clear_variable = INTC_foreign_subversive_activies_var
		clear_variable = INTC_civilian_intel_factor_var
		clear_variable = INTC_army_intel_factor_var
		clear_variable = INTC_navy_intel_factor_var
		clear_variable = INTC_airforce_intel_factor_var
	}
	if = {
		limit = {
			NOT = { has_idea = labour_unions }
			has_variable = labour_unions_opinion
		}
		clear_variable = labour_unions_opinion
		clear_variable = LBU_production_factory_efficiency_gain_factor_var
		clear_variable = LBU_production_start_effiency_factor_var
		clear_variable = LBU_political_power_factor_var
		clear_variable = LBU_health_cost_multiplier_modifier_var
		clear_variable = LBU_social_cost_multiplier_modifier_var
	}
	if = {
		limit = {
			NOT = { has_idea = landowners }
			has_variable = landowners_opinion
		}
		clear_variable = landowners_opinion
		clear_variable = LAND_local_resources_factor_var
		clear_variable = LAND_conscription_factor_var
		clear_variable = LAND_psic_factor_var
		clear_variable = LAND_office_park_income_tax_modifier_var
		clear_variable = LAND_political_power_factor_var
	}
	if = {
		limit = {
			NOT = { has_idea = farmers }
			has_variable = farmers_opinion
		}
		clear_variable = farmers_opinion
		clear_variable = FARM_conscription_factor_var
		clear_variable = FARM_consumer_goods_factor_var
		clear_variable = FARM_monthly_pop_var
		clear_variable = FARM_productivity_modifier_var
		clear_variable = FARM_agriculture_income_modifier_var
		clear_variable = FARM_production_speed_synthetic_refinery_factor_var
	}
	if = {
		limit = {
			NOT = { has_idea = communist_cadres }
			has_variable = communist_cadres_opinion
		}
		clear_variable = communist_cadres_opinion
		clear_variable = COM_army_org_regain_var
		clear_variable = COM_consumer_good_factor_var
		clear_variable = COM_army_core_defence_factor_var
		clear_variable = COM_mobilization_speed_var
		clear_variable = COM_bureaucracy_cost_multiplier_modifier_var
	}
	if = {
		limit = {
			NOT = { has_idea = the_priesthood }
			has_variable = the_priesthood_opinion
		}
		clear_variable = the_priesthood_opinion
		clear_variable = PRIEST_stability_factor_var
		clear_variable = PRIEST_monthly_population_var
		clear_variable = PRIEST_political_power_var
		clear_variable = PRIEST_education_cost_multiplier_modifier_var
	}
	if = {
		limit = {
			NOT = { has_idea = the_ulema }
			has_variable = the_ulema_opinion
		}
		clear_variable = the_ulema_opinion
		clear_variable = ULE_stability_factor_var
		clear_variable = ULE_monthly_population_var
		clear_variable = ULE_political_power_var
		clear_variable = ULE_education_cost_multiplier_modifier_var
	}
	if = {
		limit = {
			NOT = { has_idea = the_clergy }
			has_variable = the_clergy_opinion
		}
		clear_variable = the_clergy_opinion
		clear_variable = CLER_stability_factor_var
		clear_variable = CLER_monthly_population_var
		clear_variable = CLER_political_power_var
		clear_variable = CLER_education_cost_multiplier_modifier_var
	}
	if = {
		limit = {
			NOT = { has_idea = wahabi_ulema }
			has_variable = wahabi_ulema_opinion
		}
		clear_variable = wahabi_ulema_opinion
		clear_variable = WAHULE_stability_factor_var
		clear_variable = WAHULE_monthly_population_var
		clear_variable = WAHULE_political_power_var
		clear_variable = WAHULE_fascism_drift_var
		clear_variable = WAHULE_education_cost_multiplier_modifier_var
	}
	if = {
		limit = {
			NOT = { has_idea = the_donju }
			has_variable = the_donju_opinion
		}
		clear_variable = the_donju_opinion
		clear_variable = DONJU_production_speed_industrial_complex_factor
		clear_variable = DONJU_stability_factor
		clear_variable = DONJU_consunmer_goods_factor_var
		clear_variable = DONJU_infrastructure_production_speed_var
	}
	if = {
		limit = {
			NOT = { has_idea = the_bazaar }
			has_variable = the_bazaar_opinion
		}
		clear_variable = the_bazaar_opinion
		clear_variable = TBAZ_production_speed_industrial_complex_factor
		clear_variable = TBAZ_stability_factor
		clear_variable = TBAZ_consunmer_goods_factor_var
	}
	if = {
		limit = {
			NOT = { has_idea = saudi_royal_family }
			has_variable = saudi_royal_family_opinion
		}
		clear_variable = saudi_royal_family_opinion
		clear_variable = SARF_political_power_factor_var #20% Max
		clear_variable = SARF_ideology_drift_defense_var #25% Max
		clear_variable = SARF_stability_factor_var #5% max
	}
	if = {
		limit = {
			NOT = { has_idea = irgc }
			has_variable = irgc_opinion
		}
		clear_variable = irgc_opinion
		clear_variable = IRGC_commmunist_drift_var
		clear_variable = IRGC_offence_influence_var
	}
	if = {
		limit = {
			NOT = { has_idea = iranian_quds_force }
			has_variable = iranian_quds_force_opinion
		}
		clear_variable = iranian_quds_force_opinion
		clear_variable = IRGC_commmunist_drift_var
	}
	if = {
		limit = {
			NOT = { has_idea = foreign_jihadis }
			has_variable = foreign_jihadis_opinion
		}
		clear_variable = foreign_jihadis_opinion
		clear_variable = JIHAD_fascism_drift_var
		clear_variable = JIHAD_non_core_manpower_var
		clear_variable = JIHAD_special_forces_cap_var
	}
	if = {
		limit = {
			NOT = { has_idea = vevak }
			has_variable = vevak_opinion
		}
		clear_variable = vevak_opinion
		clear_variable = VEVAK_decryption_factor_var
		clear_variable = VEVAK_encryption_factor_var
		clear_variable = VEVAK_radar_station_factor_var
		clear_variable = VEVAK_subversive_activies_upkeep_var
		clear_variable = VEVAK_foreign_subversive_activites_var
		clear_variable = VEVAK_civilian_intel_factor_var
		clear_variable = VEVAK_army_intel_factor_var
		clear_variable = VEVAK_navy_intel_factor_var
		clear_variable = VEVAK_airforce_intel_factor_var
	}
	if = {
		limit = {
			NOT = { has_idea = isi_pakistan }
			has_variable = isi_pakistan_opinion
		}
		clear_variable = isi_pakistan_opinion
		clear_variable = ISI_decryption_factor_var
		clear_variable = ISI_encryption_factor_var
		clear_variable = ISI_radar_station_factor_var
		clear_variable = ISI_subversive_activies_upkeep_var
		clear_variable = ISI_foreign_subversive_activites_var
		clear_variable = ISI_civilian_intel_factor_var
		clear_variable = ISI_army_intel_factor_var
		clear_variable = ISI_navy_intel_factor_var
		clear_variable = ISI_airforce_intel_factor_var
	}
	if = {
		limit = {
			NOT = { has_idea = wall_street }
			has_variable = wall_street_opinion
		}
		clear_variable = wall_street_opinion
		clear_variable = WALL_local_resources_factor_var
		clear_variable = WALL_trade_opinion_factor_var
		clear_variable = WALL_psic_factor_var
		clear_variable = WALL_office_park_income_tax_modifier_var
		clear_variable = WALL_investment_cost_var
		clear_variable = WALL_investment_duration_var
	}
	if = {
		limit = {
			NOT = { has_idea = chaebols }
			has_variable = chaebols_opinion
		}
		clear_variable = chaebols_opinion
		clear_variable = CHAE_psic_factor_var
		clear_variable = CHAE_psinfra_factor_avr
		clear_variable = CHAE_local_resouces_factor
	}
}

# Dynamic Modifier System for Internal Factions. The dynamic effects are sourced here using dynamic modifiers and basic variables.
######Apply Modifiers#####
##Do NOT add to these variables. They will break and the effects will reverse whatever you add.###
initialize_internal_faction_dynamic_modifiers = {
	if = {
		limit = { is_debug = yes }
		log = "[GetDateText]: [THIS.GetName]: initialization of dynamic modifiers for Internal Faction System"
	}
	#Economic Internal Factions
	if = { limit = { has_idea = small_medium_business_owners }
		add_dynamic_modifier = { modifier = small_medium_business_owners_dynamic_modifier }
		apply_small_medium_business_owner_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = international_bankers }
		add_dynamic_modifier = { modifier = international_bankers_dynamic_modifier }
		apply_international_bankers_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = fossil_fuel_industry }
		add_dynamic_modifier = { modifier = fossil_fuel_industry_dynamic_modifier }
		apply_fossil_fuel_industry_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = industrial_conglomerates }
		add_dynamic_modifier = { modifier = industrial_conglomerates_dynamic_modifier }
		apply_industrial_conglomerates_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = oligarchs }
		add_dynamic_modifier = { modifier = oligarchs_dynamic_modifier }
		apply_oligarchs_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = maritime_industry }
		add_dynamic_modifier = { modifier = maritime_industry_dynamic_modifier }
		apply_maritime_industry_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = defense_industry }
		add_dynamic_modifier = { modifier = defense_industry_dynamic_modifier }
		apply_defense_industry_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = the_military }
		add_dynamic_modifier = { modifier = the_military_dynamic_modifier }
		apply_the_military_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = intelligence_community }
		add_dynamic_modifier = { modifier = intelligence_community_dynamic_modifier }
		apply_intelligence_community_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = labour_unions }
		add_dynamic_modifier = { modifier = labour_unions_dynamic_modifier }
		apply_labour_unions_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = landowners }
		add_dynamic_modifier = { modifier = landowners_dynamic_modifier }
		apply_landowners_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = farmers }
		add_dynamic_modifier = { modifier = farmers_dynamic_modifier }
		apply_farmers_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = communist_cadres }
		add_dynamic_modifier = { modifier = communist_cadres_dynamic_modifier }
		apply_communist_cadres_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = the_priesthood }
		add_dynamic_modifier = { modifier = the_priesthood_dynamic_modifier }
		apply_the_priesthood_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = the_ulema }
		add_dynamic_modifier = { modifier = the_ulema_dynamic_modifier }
		apply_the_ulema_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = the_clergy }
		add_dynamic_modifier = { modifier = the_clergy_dynamic_modifier }
		apply_the_clergy_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = wahabi_ulema }
		add_dynamic_modifier = { modifier = wahabi_ulema_dynamic_modifier }
		apply_wahabi_ulema_dynamic_effect_DYNMOD = yes
	}
	# Nation Specific Factions
	if = { limit = { has_idea = the_donju }
		add_dynamic_modifier = { modifier = the_donju_dynamic_modifier }
		apply_the_donju_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = the_bazaar }
		add_dynamic_modifier = { modifier = the_bazaar_dynamic_modifier }
		apply_the_bazaar_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = saudi_royal_family }
		add_dynamic_modifier = { modifier = saudi_royal_family_dynamic_modifier }
		apply_saudi_royal_family_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = irgc }
		add_dynamic_modifier = { modifier = irgc_dynamic_modifier }
		apply_irgc_iranian_quds_force_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = iranian_quds_force }
		add_dynamic_modifier = { modifier = iranian_quds_force_dynamic_modifier }
		apply_irgc_iranian_quds_force_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = foreign_jihadis }
		add_dynamic_modifier = { modifier = foreign_jihadis_force_dynamic_modifier }
		apply_foreign_jihadis_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = vevak }
		add_dynamic_modifier = { modifier = vevak_force_dynamic_modifier }
		apply_vevak_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = isi_pakistan }
		add_dynamic_modifier = { modifier = isi_pakistan_dynamic_modifier }
		apply_isi_pakistan_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = wall_street }
		add_dynamic_modifier = { modifier = wall_street_force_dynamic_modifier }
		apply_wall_street_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = chaebols }
		add_dynamic_modifier = { modifier = chaebols_force_dynamic_modifier }
		apply_chaebols_effect_DYNMOD = yes
	}
}

# Update the Dynamic Modifier Effects
# This section pertains to the updating of the Dynamic Modifiers for the individual Internal Factions

# Economic Factions
apply_small_medium_business_owner_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = small_medium_business_owners_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { SMBO_production_speed_industrial_complex_factor = base_modifier }
	set_variable = { SMBO_stability_factor = base_modifier }
	set_variable = { SMBO_consumer_goods_factor_var = base_modifier }
	set_variable = { SMBO_civilian_industry_tax_modifier_var = base_modifier }
	set_variable = { SMBO_production_speed_internet_station_factor_var = base_modifier }
	set_variable = { SMBO_civilian_factories_productivity_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 15%, 10%, -10%, 20%
	multiply_variable = { SMBO_production_speed_industrial_complex_factor = 0.003 }
	multiply_variable = { SMBO_stability_factor = 0.002 }
	multiply_variable = { SMBO_consumer_goods_factor_var = -0.002 }
	multiply_variable = { SMBO_civilian_industry_tax_modifier_var = 0.004 }
	multiply_variable = { SMBO_production_speed_internet_station_factor_var = 0.003 }
	multiply_variable = { SMBO_civilian_factories_productivity_var = 0.003 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_international_bankers_dynamic_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = international_bankers_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { INTB_psof_var = base_modifier }
	set_variable = { INTB_local_resources_factor_var = base_modifier }
	set_variable = { INTB_trade_opinion_factor_var = base_modifier }
	set_variable = { INTB_democratic_acceptance_factor_var = base_modifier }
	set_variable = { INTB_democratic_drift_var = base_modifier }
	set_variable = { INTB_investment_duration_var = base_modifier }
	set_variable = { INTB_investment_cost_var = base_modifier }
	set_variable = { INTB_office_park_income_tax_modifier_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 15%, 10%, 20%, +25, +0.05
	multiply_variable = { INTB_psof_var = 0.003 }
	multiply_variable = { INTB_local_resources_factor_var = 0.002 }
	multiply_variable = { INTB_trade_opinion_factor_var = 0.004 }
	multiply_variable = { INTB_democratic_acceptance_factor_var = 0.5 }
	multiply_variable = { INTB_democratic_drift_var = 0.001 }
	multiply_variable = { INTB_investment_duration_var = -0.002 }
	multiply_variable = { INTB_investment_cost_var = -0.002 }
	multiply_variable = { INTB_office_park_income_tax_modifier_var = 0.003 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_fossil_fuel_industry_dynamic_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = fossil_fuel_industry_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { FFI_local_resource_factor_var = base_modifier }
	set_variable = { FFI_fuel_gain_factor_var = base_modifier }
	set_variable = { FFI_justify_war_goal_time_var = base_modifier }
	set_variable = { FFI_oil_export_multiplier_modifier_var = base_modifier }
	set_variable = { FFI_production_speed_fuel_silo_factor_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 20%, 25%, -15%, 20%, 15%
	multiply_variable = { FFI_local_resource_factor_var = 0.004 }
	multiply_variable = { FFI_fuel_gain_factor_var = 0.005 }
	multiply_variable = { FFI_justify_war_goal_time_var = -0.003 }
	multiply_variable = { FFI_oil_export_multiplier_modifier_var = 0.004 }
	multiply_variable = { FFI_production_speed_fuel_silo_factor_var = 0.003 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_industrial_conglomerates_dynamic_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = industrial_conglomerates_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { ICL_psifra_factor_var = base_modifier }
	set_variable = { ICL_local_resources_factor_var = base_modifier }
	set_variable = { ICL_communism_acceptance_factor_var = base_modifier }
	set_variable = { ICL_communism_drift = base_modifier }
	set_variable = { ICL_civilian_industry_tax_modifier_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 15%, 10%, 25, 0.05
	multiply_variable = { ICL_psifra_factor_var = 0.003 }
	multiply_variable = { ICL_local_resources_factor_var = 0.002 }
	multiply_variable = { ICL_communism_acceptance_factor_var = 0.5 }
	multiply_variable = { ICL_communism_drift = 0.001 }
	multiply_variable = { ICL_civilian_industry_tax_modifier_var = 0.004 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_oligarchs_dynamic_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = oligarchs_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { OLI_psic_factor_var = base_modifier }
	set_variable = { OLI_local_resources_factor_var = base_modifier }
	set_variable = { OLI_communism_acceptance_factor_var = base_modifier }
	set_variable = { OLI_communism_drift_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 15%, 5%, 25, 0.05
	multiply_variable = { OLI_psic_factor_var = 0.003 }
	multiply_variable = { OLI_local_resources_factor_var = 0.004 }
	multiply_variable = { OLI_communism_acceptance_factor_var = 0.5 }
	multiply_variable = { OLI_communism_drift_var = 0.001 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_maritime_industry_dynamic_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = maritime_industry_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { MRI_dockyard_factor_var = base_modifier }
	set_variable = { MRI_psvb_factor_var = base_modifier }
	set_variable = { MRI_industrial_capacity_dockyard_var = base_modifier }
	set_variable = { MRI_navy_max_range_factor_var = base_modifier }
	set_variable = { MRI_dockyard_productivity_var = base_modifier }
	set_variable = { MRI_dockyard_income_tax_modifier_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 20%, 20%, 10%, 20%
	multiply_variable = { MRI_dockyard_factor_var = 0.004 }
	multiply_variable = { MRI_psvb_factor_var = 0.004 }
	multiply_variable = { MRI_industrial_capacity_dockyard_var = 0.004 }
	multiply_variable = { MRI_navy_max_range_factor_var = 0.004 }
	multiply_variable = { MRI_dockyard_productivity_var = 0.004 }
	multiply_variable = { MRI_dockyard_income_tax_modifier_var = 0.004 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_defense_industry_dynamic_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = defense_industry_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { DEF_military_factory_speed_factor_var = base_modifier }
	set_variable = { DEF_factory_efficiency_gain_factor_var = base_modifier }
	set_variable = { DEF_factory_base_efficiency_factor_var = base_modifier }
	set_variable = { DEF_military_factories_productivity_var = base_modifier }
	set_variable = { DEF_military_industry_tax_modifier_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 15%, 5%, 25, 0.05
	multiply_variable = { DEF_military_factory_speed_factor_var = 0.002 }
	multiply_variable = { DEF_factory_efficiency_gain_factor_var = 0.003 }
	multiply_variable = { DEF_factory_base_efficiency_factor_var = 0.003 }
	multiply_variable = { DEF_military_factories_productivity_var = 0.003 }
	multiply_variable = { DEF_military_industry_tax_modifier_var = 0.004 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}

# Special Interest Factions
apply_landowners_dynamic_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = landowners_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { LAND_local_resources_factor_var = base_modifier }
	set_variable = { LAND_conscription_factor_var = base_modifier }
	set_variable = { LAND_psic_factor_var = base_modifier }
	set_variable = { LAND_office_park_income_tax_modifier_var = base_modifier }
	set_variable = { LAND_political_power_factor_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 15%, 15%, 15%
	multiply_variable = { LAND_local_resources_factor_var = 0.003 }
	multiply_variable = { LAND_conscription_factor_var = 0.003 }
	multiply_variable = { LAND_psic_factor_var = 0.003 }
	multiply_variable = { LAND_office_park_income_tax_modifier_var = 0.003 }
	multiply_variable = { LAND_political_power_factor_var = 0.003 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_farmers_dynamic_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = farmers_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { FARM_conscription_factor_var = base_modifier }
	set_variable = { FARM_consumer_goods_factor_var = base_modifier }
	set_variable = { FARM_monthly_pop_var = base_modifier }
	set_variable = { FARM_productivity_modifier_var = base_modifier }
	set_variable = { FARM_agriculture_income_modifier_var = base_modifier }
	set_variable = { FARM_production_speed_synthetic_refinery_factor_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 10%, -10%, 20%, 10%, 15%, 20%
	multiply_variable = { FARM_conscription_factor_var = 0.002 }
	multiply_variable = { FARM_consumer_goods_factor_var = -0.002 }
	multiply_variable = { FARM_monthly_pop_var = 0.004 }
	multiply_variable = { FARM_productivity_modifier_var = 0.003 }
	multiply_variable = { FARM_agriculture_income_modifier_var = 0.005 }
	multiply_variable = { FARM_production_speed_synthetic_refinery_factor_var = 0.003 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_labour_unions_dynamic_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = labour_unions_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { LBU_production_start_effiency_factor_var = base_modifier }
	set_variable = { LBU_production_factory_efficiency_gain_factor_var = base_modifier }
	set_variable = { LBU_political_power_factor_var = base_modifier }
	set_variable = { LBU_health_cost_multiplier_modifier_var = base_modifier }
	set_variable = { LBU_social_cost_multiplier_modifier_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 15%, 15%, 25%
	multiply_variable = { LBU_production_start_effiency_factor_var = 0.002 }
	multiply_variable = { LBU_production_factory_efficiency_gain_factor_var = 0.002 }
	multiply_variable = { LBU_political_power_factor_var = 0.005 }
	multiply_variable = { LBU_health_cost_multiplier_modifier_var = -0.003 }
	multiply_variable = { LBU_social_cost_multiplier_modifier_var = -0.003 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_the_military_dynamic_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = the_military_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { MILI_army_org_factor_var = base_modifier }
	set_variable = { MILI_army_morale_factor_var = base_modifier }
	set_variable = { MILI_training_time_factor_var = base_modifier }
	set_variable = { MILI_air_base_production_factor_var = base_modifier }
	set_variable = { MILI_personnel_cost_multiplier_modifier_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 5%, 10%, -20%, 25%, -25%
	multiply_variable = { MILI_army_org_factor_var = 0.001 }
	multiply_variable = { MILI_army_morale_factor_var = 0.002 }
	multiply_variable = { MILI_training_time_factor_var = -0.004 }
	multiply_variable = { MILI_air_base_production_factor_var = 0.005 }
	multiply_variable = { MILI_personnel_cost_multiplier_modifier_var = -0.005 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_intelligence_community_dynamic_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = intelligence_community_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	if = { limit = { NOT = { has_dlc = "La Resistance" } }
		set_variable = { INTC_decryption_factor_var = base_modifier }
		set_variable = { INTC_encryption_factor_var = base_modifier }

		multiply_variable = { INTC_decryption_factor_var = 0.004 }
		multiply_variable = { INTC_encryption_factor_var = 0.004 }
	}
	else = {
		set_variable = { INTC_civilian_intel_factor_var = base_modifier }
		set_variable = { INTC_army_intel_factor_var = base_modifier }
		set_variable = { INTC_navy_intel_factor_var = base_modifier }
		set_variable = { INTC_airforce_intel_factor_var = base_modifier }

		multiply_variable = { INTC_civilian_intel_factor_var = 0.003 }
		multiply_variable = { INTC_army_intel_factor_var = 0.003 }
		multiply_variable = { INTC_navy_intel_factor_var = 0.003 }
		multiply_variable = { INTC_airforce_intel_factor_var = 0.003 }
	}

	set_variable = { INTC_radar_station_factor_var = base_modifier }
	set_variable = { INTC_foreign_subversive_activies_upkeep_var = base_modifier }
	set_variable = { INTC_foreign_subversive_activies_var = base_modifier }
	set_variable = { INTC_foreign_influence_modifier = base_modifier }

	# Multiplies by the scaled factor - Max values: 20%, 20%, -25%, -20%, -20%
	multiply_variable = { INTC_radar_station_factor_var = 0.005 }
	multiply_variable = { INTC_foreign_subversive_activies_upkeep_var = -0.004 }
	multiply_variable = { INTC_foreign_subversive_activies_var = -0.004 }
	multiply_variable = { INTC_foreign_influence_modifier = 0.003 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_communist_cadres_dynamic_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = communist_cadres_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { COM_army_org_regain_var = base_modifier }
	set_variable = { COM_consumer_good_factor_var = base_modifier }
	set_variable = { COM_army_core_defence_factor_var = base_modifier }
	set_variable = { COM_mobilization_speed_var = base_modifier }
	set_variable = { COM_bureaucracy_cost_multiplier_modifier_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 15%, 15%, 15%
	multiply_variable = { COM_army_org_regain_var = 0.004 }
	multiply_variable = { COM_consumer_good_factor_var = -0.001 }
	multiply_variable = { COM_army_core_defence_factor_var = 0.002 }
	multiply_variable = { COM_mobilization_speed_var = 0.005 }
	multiply_variable = { COM_bureaucracy_cost_multiplier_modifier_var = -0.003 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_the_priesthood_dynamic_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = the_priesthood_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { PRIEST_stability_factor_var = base_modifier }
	set_variable = { PRIEST_monthly_population_var = base_modifier }
	set_variable = { PRIEST_political_power_var = base_modifier }
	set_variable = { PRIEST_education_cost_multiplier_modifier_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 15%, 25%, 30%
	multiply_variable = { PRIEST_stability_factor_var = 0.003 }
	multiply_variable = { PRIEST_monthly_population_var = 0.005 }
	multiply_variable = { PRIEST_political_power_var = 0.006 }
	multiply_variable = { PRIEST_education_cost_multiplier_modifier_var = -0.002 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_the_ulema_dynamic_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = the_ulema_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { ULE_stability_factor_var = base_modifier }
	set_variable = { ULE_monthly_population_var = base_modifier }
	set_variable = { ULE_political_power_var = base_modifier }
	set_variable = { ULE_education_cost_multiplier_modifier_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 15%, 25%, 30%
	multiply_variable = { ULE_stability_factor_var = 0.003 }
	multiply_variable = { ULE_monthly_population_var = 0.005 }
	multiply_variable = { ULE_political_power_var = 0.006 }
	multiply_variable = { ULE_education_cost_multiplier_modifier_var = -0.002 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_the_clergy_dynamic_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = the_clergy_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { CLER_stability_factor_var = base_modifier }
	set_variable = { CLER_monthly_population_var = base_modifier }
	set_variable = { CLER_political_power_var = base_modifier }
	set_variable = { CLER_education_cost_multiplier_modifier_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 15%, 25%, 30%
	multiply_variable = { CLER_stability_factor_var = 0.003 }
	multiply_variable = { CLER_monthly_population_var = 0.005 }
	multiply_variable = { CLER_political_power_var = 0.006 }
	multiply_variable = { CLER_education_cost_multiplier_modifier_var = -0.002 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_wahabi_ulema_dynamic_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = wahabi_ulema_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { WAHULE_stability_factor_var = base_modifier }
	set_variable = { WAHULE_monthly_population_var = base_modifier }
	set_variable = { WAHULE_political_power_var = base_modifier }
	set_variable = { WAHULE_fascism_drift_var = base_modifier }
	set_variable = { WAHULE_education_cost_multiplier_modifier_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 15%, 25%, 30%
	multiply_variable = { WAHULE_stability_factor_var = 0.003 }
	multiply_variable = { WAHULE_monthly_population_var = 0.005 }
	multiply_variable = { WAHULE_political_power_var = 0.006 }
	multiply_variable = { WAHULE_fascism_drift_var = 0.005 }
	multiply_variable = { WAHULE_education_cost_multiplier_modifier_var = -0.002 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}

# Country Specific
apply_the_donju_dynamic_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = the_donju_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { DONJU_production_speed_industrial_complex_factor = base_modifier }
	set_variable = { DONJU_stability_factor = base_modifier }
	set_variable = { DONJU_consunmer_goods_factor_var = base_modifier }
	set_variable = { DONJU_infrastructure_production_speed_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 15%, 15%, 15%
	multiply_variable = { DONJU_production_speed_industrial_complex_factor = 0.003 }
	multiply_variable = { DONJU_stability_factor = 0.003 }
	multiply_variable = { DONJU_consunmer_goods_factor_var = -0.001 }
	multiply_variable = { DONJU_infrastructure_production_speed_var = 0.003 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}

apply_the_bazaar_dynamic_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = the_bazaar_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { TBAZ_production_speed_industrial_complex_factor = base_modifier }
	set_variable = { TBAZ_stability_factor = base_modifier }
	set_variable = { TBAZ_consunmer_goods_factor_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 15%, 15%, 15%
	multiply_variable = { TBAZ_production_speed_industrial_complex_factor = 0.003 }
	multiply_variable = { TBAZ_stability_factor = 0.003 }
	multiply_variable = { TBAZ_consunmer_goods_factor_var = -0.001 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}

apply_saudi_royal_family_dynamic_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = saudi_royal_family_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { SARF_political_power_factor_var = base_modifier }
	set_variable = { SARF_ideology_drift_defense_var = base_modifier }
	set_variable = { SARF_stability_factor_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 15%, 15%, 15%
	multiply_variable = { SARF_political_power_factor_var = 0.005 }
	multiply_variable = { SARF_ideology_drift_defense_var = 0.005 }
	multiply_variable = { SARF_stability_factor_var = 0.003 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_irgc_iranian_quds_force_dynamic_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	if = { limit = { has_idea = irgc }
		set_temp_variable = { base_modifier = irgc_opinion }
	}
	else_if = { limit = { has_idea = iranian_quds_force }
		set_temp_variable = { base_modifier = iranian_quds_force_opinion }
	}
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { IRGC_commmunist_drift_var = base_modifier }
	# Multiplies by the scaled factor - Max values: 15%, 15%, 15%
	multiply_variable = { IRGC_commmunist_drift_var = 0.002 }

	set_variable = { IRGC_offence_influence_var = base_modifier }
	# Multiplies by the scaled factor - Max values: 15%, 15%, 15%
	multiply_variable = { IRGC_offence_influence_var = 0.035 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_foreign_jihadis_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = foreign_jihadis_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { JIHAD_fascism_drift_var = base_modifier }
	set_variable = { JIHAD_non_core_manpower_var = base_modifier }
	set_variable = { JIHAD_special_forces_cap_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 15%, 15%, 15%
	multiply_variable = { JIHAD_fascism_drift_var = 0.002 }
	multiply_variable = { JIHAD_non_core_manpower_var = 0.002 }
	multiply_variable = { JIHAD_special_forces_cap_var = 0.004 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_vevak_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = vevak_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	if = { limit = { NOT = { has_dlc = "La Resistance" } }
		set_variable = { VEVAK_decryption_factor_var = base_modifier }
		set_variable = { VEVAK_encryption_factor_var = base_modifier }

		multiply_variable = { VEVAK_decryption_factor_var = 0.004 }
		multiply_variable = { VEVAK_encryption_factor_var = 0.004 }
	}
	else = {
		set_variable = { VEVAK_civilian_intel_factor_var = base_modifier }
		set_variable = { VEVAK_army_intel_factor_var = base_modifier }
		set_variable = { VEVAK_navy_intel_factor_var = base_modifier }
		set_variable = { VEVAK_airforce_intel_factor_var = base_modifier }

		multiply_variable = { VEVAK_civilian_intel_factor_var = 0.003 }
		multiply_variable = { VEVAK_army_intel_factor_var = 0.003 }
		multiply_variable = { VEVAK_navy_intel_factor_var = 0.003 }
		multiply_variable = { VEVAK_airforce_intel_factor_var = 0.003 }
	}

	set_variable = { VEVAK_radar_station_factor_var = base_modifier }
	set_variable = { VEVAK_subversive_activies_upkeep_var = base_modifier }
	set_variable = { VEVAK_foreign_subversive_activites_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 15%, 15%, 15%
	multiply_variable = { VEVAK_radar_station_factor_var = -0.005 }
	multiply_variable = { VEVAK_subversive_activies_upkeep_var = -0.004 }
	multiply_variable = { VEVAK_foreign_subversive_activites_var = -0.004 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_isi_pakistan_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = isi_pakistan_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	if = { limit = { NOT = { has_dlc = "La Resistance" } }
		set_variable = { ISI_decryption_factor_var = base_modifier }
		set_variable = { ISI_encryption_factor_var = base_modifier }

		multiply_variable = { ISI_decryption_factor_var = 0.004 }
		multiply_variable = { ISI_encryption_factor_var = 0.004 }
	}
	else = {
		set_variable = { ISI_civilian_intel_factor_var = base_modifier }
		set_variable = { ISI_army_intel_factor_var = base_modifier }
		set_variable = { ISI_navy_intel_factor_var = base_modifier }
		set_variable = { ISI_airforce_intel_factor_var = base_modifier }

		multiply_variable = { ISI_civilian_intel_factor_var = 0.003 }
		multiply_variable = { ISI_army_intel_factor_var = 0.003 }
		multiply_variable = { ISI_navy_intel_factor_var = 0.003 }
		multiply_variable = { ISI_airforce_intel_factor_var = 0.003 }
	}


	set_variable = { ISI_radar_station_factor_var = base_modifier }
	set_variable = { ISI_subversive_activies_upkeep_var = base_modifier }
	set_variable = { ISI_foreign_subversive_activites_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 15%, 15%, 15%
	multiply_variable = { ISI_radar_station_factor_var = -0.005 }
	multiply_variable = { ISI_subversive_activies_upkeep_var = -0.004 }
	multiply_variable = { ISI_foreign_subversive_activites_var = -0.004 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_wall_street_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = wall_street_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { WALL_local_resources_factor_var = base_modifier }
	set_variable = { WALL_trade_opinion_factor_var = base_modifier }
	set_variable = { WALL_psic_factor_var = base_modifier }
	set_variable = { WALL_office_park_income_tax_modifier_var = base_modifier }
	set_variable = { WALL_investment_cost_var = base_modifier }
	set_variable = { WALL_investment_duration_var = base_modifier }

	# Multiplies by the scaled factor - Max values: 15%, 15%, 15%
	multiply_variable = { WALL_local_resources_factor_var = 0.001 }
	multiply_variable = { WALL_trade_opinion_factor_var = 0.004 }
	multiply_variable = { WALL_psic_factor_var = 0.002 }
	multiply_variable = { WALL_office_park_income_tax_modifier_var = 0.003 }
	multiply_variable = { WALL_investment_cost_var = -0.002 }
	multiply_variable = { WALL_investment_duration_var = -0.002 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}
apply_chaebols_effect_DYNMOD = {
	# Sets the base to current opinion then subtracts 50 from it to get the modifier value
	set_temp_variable = { base_modifier = chaebols_opinion }
	add_to_temp_variable = { base_modifier = -50 }

	set_variable = { CHAE_psic_factor_var = base_modifier }
	set_variable = { CHAE_psinfra_factor_avr = base_modifier }
	set_variable = { CHAE_local_resouces_factor = base_modifier }

	# Multiplies by the scaled factor - Max values: 15%, 15%, 15%
	multiply_variable = { CHAE_psic_factor_var = 0.003 }
	multiply_variable = { CHAE_psinfra_factor_avr = 0.003 }
	multiply_variable = { CHAE_local_resouces_factor = 0.003 }

	# Force the Update Dynamic Modifier with new Calculated Effects
	force_update_dynamic_modifier = yes
}

# Update Opinion
# Methods for changing internal faction opinions
# HOW TO USE:
# effect = {
#	 set_temp_variable = { temp_opinion = -# } for reducing opinion
#	 set_temp_variable = { temp_opinion = # } for raising opinion
#	 change_defense_industry_opinion = yes #Automatically will handle any updates
# }

# set_temp_variable = { temp_opinion = -+ # }
change_small_medium_business_owners_opinion = {
	if = { limit = { has_idea = small_medium_business_owners }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { small_medium_business_owners_opinion = temp_opinion }

		set_temp_variable = { small_medium_business_owners_min = 0 }
		set_temp_variable = { small_medium_business_owners_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { defense_industry_min = x }
		# }

		clamp_variable = {
			var = small_medium_business_owners_opinion
			min = small_medium_business_owners_min
			max = small_medium_business_owners_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_small_medium_business_owners_opinion
		# Updates the Dynamic Modifiers
		apply_small_medium_business_owner_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# Industrial Conglomerates
# set_temp_variable = { temp_opinion = -+ # }
change_industrial_conglomerates_opinion = {
	if = { limit = { has_idea = industrial_conglomerates }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { industrial_conglomerates_opinion = temp_opinion }

		set_temp_variable = { industrial_conglomerates_min = 0 }
		set_temp_variable = { industrial_conglomerates_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { defense_industry_min = x }
		# }

		clamp_variable = {
			var = industrial_conglomerates_opinion
			min = industrial_conglomerates_min
			max = industrial_conglomerates_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_industrial_conglomerates_opinion
		# Updates the Dynamic Modifiers
		apply_industrial_conglomerates_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# Fossil Fuel Industry
# set_temp_variable = { temp_opinion = -+ # }
change_fossil_fuel_industry_opinion = {
	if = { limit = { has_idea = fossil_fuel_industry }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { fossil_fuel_industry_opinion = temp_opinion }

		set_temp_variable = { fossil_fuel_industry_min = 0 }
		set_temp_variable = { fossil_fuel_industry_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { defense_industry_min = x }
		# }

		clamp_variable = {
			var = fossil_fuel_industry_opinion
			min = fossil_fuel_industry_min
			max = fossil_fuel_industry_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_fossil_fuel_industry_opinion
		apply_fossil_fuel_industry_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# Military-Industrial Complex
# set_temp_variable = { temp_opinion = -+ # }
change_defense_industry_opinion = {
	if = { limit = { has_idea = defense_industry }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { defense_industry_opinion = temp_opinion }

		set_temp_variable = { defense_industry_min = 0 }
		set_temp_variable = { defense_industry_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { defense_industry_min = x }
		# }

		clamp_variable = {
			var = defense_industry_opinion
			min = defense_industry_min
			max = defense_industry_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_defense_industry_opinion
		apply_defense_industry_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# Maritime Industry
# set_temp_variable = { temp_opinion = -+ # }
change_maritime_industry_opinion = {
	if = { limit = { has_idea = maritime_industry }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { maritime_industry_opinion = temp_opinion }

		set_temp_variable = { maritime_industry_min = 0 }
		set_temp_variable = { maritime_industry_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { maritime_industry_min = x }
		# }

		clamp_variable = {
			var = maritime_industry_opinion
			min = maritime_industry_min
			max = maritime_industry_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_maritime_industry_opinion
		apply_maritime_industry_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# International Bankers
# set_temp_variable = { temp_opinion = -+ # }
change_international_bankers_opinion = {
	if = { limit = { has_idea = international_bankers }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { international_bankers_opinion = temp_opinion }

		set_temp_variable = { international_bankers_min = 0 }
		set_temp_variable = { international_bankers_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { international_bankers_min = x }
		# }

		clamp_variable = {
			var = international_bankers_opinion
			min = international_bankers_min
			max = international_bankers_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_international_bankers_opinion
		apply_international_bankers_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# Oligarchs
# set_temp_variable = { temp_opinion = -+ # }
change_oligarchs_opinion = {
	if = { limit = { has_idea = oligarchs }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { oligarchs_opinion = temp_opinion }

		set_temp_variable = { oligarchs_min = 0 }
		set_temp_variable = { oligarchs_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { oligarchs_min = x }
		# }

		clamp_variable = {
			var = oligarchs_opinion
			min = oligarchs_min
			max = oligarchs_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_oligarchs_opinion
		apply_oligarchs_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# Farmers
# set_temp_variable = { temp_opinion = -+ # }
change_farmers_opinion = {
	if = { limit = { has_idea = farmers }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { farmers_opinion = temp_opinion }

		set_temp_variable = { farmers_min = 0 }
		set_temp_variable = { farmers_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { farmers_min = x }
		# }

		clamp_variable = {
			var = farmers_opinion
			min = farmers_min
			max = farmers_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_farmers_opinion
		apply_farmers_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# Landowners
# set_temp_variable = { temp_opinion = -+ # }
change_landowners_opinion = {
	if = { limit = { has_idea = landowners }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { landowners_opinion = temp_opinion }

		set_temp_variable = { landsowners_min = 0 }
		set_temp_variable = { landsowners_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { farmers_min = x }
		# }
		if = { limit = { tag = SPR }
			if = { limit = { has_idea = SPR_the_hands_of_the_few_idea  }
				add_to_temp_variable = { landsowners_min = 15 }
			}
		}
		if = {
			limit = { tag = SIN }
			if = { limit = { has_idea = SIN_support_for_the_business  }
				add_to_temp_variable = { landsowners_min = 10 }
			}
		}


		clamp_variable = {
			var = landowners_opinion
			min = landsowners_min
			max = landsowners_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_landowners_opinion
		apply_landowners_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# Labour Unions
# set_temp_variable = { temp_opinion = -+ # }
change_labour_unions_opinion = {
	if = { limit = { has_idea = labour_unions }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { labour_unions_opinion = temp_opinion }

		set_temp_variable = { labour_unions_min = 0 }
		set_temp_variable = { labour_unions_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { farmers_min = x }
		# }
		if = { limit = { tag = SPR }
			if = { limit = { has_idea = SPR_unionization_of_faith_idea  }
				add_to_temp_variable = { labour_unions_min = 15 }
			}
		}
		if = {
			limit = { tag = SIN }
			if = { limit = { has_idea = SIN_support_for_the_workers  }
				add_to_temp_variable = { labour_unions_min = 10 }
			}
		}
		if = {
			limit = { tag = DEN }
			if = { limit = { has_idea = DEN_in_need_of_banking_reforms_idea  }
				add_to_temp_variable = { labour_unions_max = -15 }
			}
			if = { limit = { has_idea = DEN_intensify_the_flexicurity_idea  }
				add_to_temp_variable = { labour_unions_min = 10 }
			}
		}

		clamp_variable = {
			var = labour_unions_opinion
			min = labour_unions_min
			max = labour_unions_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_labour_unions_opinion
		apply_labour_unions_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# Communist Cadres
# set_temp_variable = { temp_opinion = -+ # }
change_communist_cadres_opinion = {
	if = { limit = { has_idea = communist_cadres }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { communist_cadres_opinion = temp_opinion }

		set_temp_variable = { communist_cadres_min = 0 }
		set_temp_variable = { communist_cadres_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { farmers_min = x }
		# }

		clamp_variable = {
			var = communist_cadres_opinion
			min = communist_cadres_min
			max = communist_cadres_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_communist_cadres_opinion
		apply_communist_cadres_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# The Clergy
# set_temp_variable = { temp_opinion = -+ # }
change_the_clergy_opinion = {
	if = { limit = { has_idea = the_clergy }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { the_clergy_opinion = temp_opinion }

		set_temp_variable = { the_clergy_min = 0 }
		set_temp_variable = { the_clergy_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { farmers_min = x }
		# }

		clamp_variable = {
			var = the_clergy_opinion
			min = the_clergy_min
			max = the_clergy_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_the_clergy_opinion
		apply_the_clergy_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# The Ulema
# set_temp_variable = { temp_opinion = -+ # }
change_the_ulema_opinion = {
	if = { limit = { has_idea = the_ulema }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { the_ulema_opinion = temp_opinion }

		set_temp_variable = { the_ulema_min = 0 }
		set_temp_variable = { the_ulema_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { farmers_min = x }
		# }

		clamp_variable = {
			var = the_ulema_opinion
			min = the_ulema_min
			max = the_ulema_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_the_ulema_opinion
		apply_the_ulema_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# The Priesthood
# set_temp_variable = { temp_opinion = -+ # }
change_the_priesthood_opinion = {
	if = { limit = { has_idea = the_priesthood }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { the_priesthood_opinion = temp_opinion }

		set_temp_variable = { the_priesthood_min = 0 }
		set_temp_variable = { the_priesthood_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { farmers_min = x }
		# }

		clamp_variable = {
			var = the_priesthood_opinion
			min = the_priesthood_min
			max = the_priesthood_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_the_priesthood_opinion
		apply_the_priesthood_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# Wahabi Ulema
# set_temp_variable = { temp_opinion = -+ # }
change_the_wahabi_ulema_opinion = {
	if = { limit = { has_idea = wahabi_ulema }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { wahabi_ulema_opinion = temp_opinion }

		set_temp_variable = { wahabi_ulema_min = 0 }
		set_temp_variable = { wahabi_ulema_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { farmers_min = x }
		# }

		clamp_variable = {
			var = wahabi_ulema_opinion
			min = wahabi_ulema_min
			max = wahabi_ulema_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_wahabi_ulema_opinion
		apply_wahabi_ulema_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# The Military
# set_temp_variable = { temp_opinion = -+ # }
change_the_military_opinion = {
	if = { limit = { has_idea = the_military }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { the_military_opinion = temp_opinion }

		set_temp_variable = { the_military_min = 0 }
		set_temp_variable = { the_military_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { the_military_min = x }
		# }

		clamp_variable = {
			var = the_military_opinion
			min = the_military_min
			max = the_military_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_the_military_opinion
		apply_the_military_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# Intelligence Community
# set_temp_variable = { temp_opinion = -+ # }
change_intelligence_community_opinion = {
	if = { limit = { has_idea = intelligence_community }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { intelligence_community_opinion = temp_opinion }

		set_temp_variable = { intelligence_community_min = 0 }
		set_temp_variable = { intelligence_community_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { the_military_min = x }
		# }

		clamp_variable = {
			var = intelligence_community_opinion
			min = intelligence_community_min
			max = intelligence_community_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_intelligence_community_opinion
		apply_intelligence_community_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# ISI Pakistan
# set_temp_variable = { temp_opinion = -+ # }
change_isi_pakistan_opinion = {
	if = { limit = { has_idea = isi_pakistan }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { isi_pakistan_opinion = temp_opinion }

		set_temp_variable = { isi_pakistan_min = 0 }
		set_temp_variable = { isi_pakistan_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { the_military_min = x }
		# }

		clamp_variable = {
			var = isi_pakistan_opinion
			min = isi_pakistan_min
			max = isi_pakistan_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_isi_pakistan_opinion
		apply_isi_pakistan_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# Vevak
# set_temp_variable = { temp_opinion = -+ # }
change_vevak_opinion = {
	if = { limit = { has_idea = vevak }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { vevak_opinion = temp_opinion }

		set_temp_variable = { vevak_min = 0 }
		set_temp_variable = { vevak_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { the_military_min = x }
		# }

		clamp_variable = {
			var = vevak_opinion
			min = vevak_min
			max = vevak_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_vevak_opinion
		apply_vevak_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}


# The Bazaar
# set_temp_variable = { temp_opinion = -+ # }
change_the_bazaar_opinion = {
	if = { limit = { has_idea = the_bazaar }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { the_bazaar_opinion = temp_opinion }

		set_temp_variable = { the_bazaar_min = 0 }
		set_temp_variable = { the_bazaar_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { the_military_min = x }
		# }

		clamp_variable = {
			var = the_bazaar_opinion
			min = the_bazaar_min
			max = the_bazaar_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_the_bazaar_opinion
		apply_the_bazaar_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# The Donju
# set_temp_variable = { temp_opinion = -+ # }
change_the_donju_opinion = {
	if = { limit = { has_idea = the_donju }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { the_donju_opinion = temp_opinion }

		set_temp_variable = { the_donju_min = 0 }
		set_temp_variable = { the_donju_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { the_military_min = x }
		# }

		clamp_variable = {
			var = the_donju_opinion
			min = the_donju_min
			max = the_donju_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_the_donju_opinion
		apply_the_donju_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# Saudi Royal Family
# set_temp_variable = { temp_opinion = -+ # }
change_saudi_royal_family_opinion = {
	if = { limit = { has_idea = saudi_royal_family }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { saudi_royal_family_opinion = temp_opinion }

		set_temp_variable = { saudi_royal_family_min = 0 }
		set_temp_variable = { saudi_royal_family_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { the_military_min = x }
		# }

		clamp_variable = {
			var = saudi_royal_family_opinion
			min = saudi_royal_family_min
			max = saudi_royal_family_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_saudi_royal_family_opinion
		apply_saudi_royal_family_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}


# Foreign Jihadist
# set_temp_variable = { temp_opinion = -+ # }
change_foreign_jihadis_opinion = {
	if = { limit = { has_idea = foreign_jihadis }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { foreign_jihadis_opinion = temp_opinion }

		set_temp_variable = { foreign_jihadis_min = 0 }
		set_temp_variable = { foreign_jihadis_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { the_military_min = x }
		# }

		clamp_variable = {
			var = foreign_jihadis_opinion
			min = foreign_jihadis_min
			max = foreign_jihadis_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_foreign_jihadis_opinion
		apply_foreign_jihadis_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# IRGC
# set_temp_variable = { temp_opinion = -+ # }
change_irgc_opinion = {
	if = { limit = { has_idea = irgc }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { irgc_opinion = temp_opinion }

		set_temp_variable = { irgc_min = 0 }
		set_temp_variable = { irgc_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { the_military_min = x }
		# }

		clamp_variable = {
			var = irgc_opinion
			min = irgc_min
			max = irgc_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_irgc_opinion
		apply_irgc_iranian_quds_force_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# Iranian Quds Force
# set_temp_variable = { temp_opinion = -+ # }
change_iranian_quds_force_opinion = {
	if = { limit = { has_idea = iranian_quds_force }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { iranian_quds_force_opinion = temp_opinion }

		set_temp_variable = { iranian_quds_force_min = 0 }
		set_temp_variable = { iranian_quds_force_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { the_military_min = x }
		# }

		clamp_variable = {
			var = iranian_quds_force_opinion
			min = iranian_quds_force_min
			max = iranian_quds_force_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_iranian_quds_force_opinion
		apply_irgc_iranian_quds_force_dynamic_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# Chaebols
# set_temp_variable = { temp_opinion = -+ # }
change_chaebols_opinion = {
	if = { limit = { has_idea = chaebols }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { chaebols_opinion = temp_opinion }

		set_temp_variable = { chaebols_min = 0 }
		set_temp_variable = { chaebols_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { the_military_min = x }
		# }

		clamp_variable = {
			var = chaebols_opinion
			min = chaebols_min
			max = chaebols_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_chaebols_opinion
		apply_chaebols_effect_DYNMOD = yes
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# Wall Street
# set_temp_variable = { temp_opinion = -+ # }
change_wall_street_opinion = {
	if = { limit = { has_idea = wall_street }

		#Autocrats get faction effects double
		if = {
			limit = {
				OR = {
					is_in_array = { ruling_party = 0 }	#Western Autocrats
					is_in_array = { ruling_party = 7 }	#Emerging autocrats
					is_in_array = { ruling_party = 13 }	#Neutral autocrats
					is_in_array = { ruling_party = 21 }	#fascists
					is_in_array = { ruling_party = 22 }	#military junta
				}
				check_variable = { temp_opinion > 0 }
			}
			multiply_temp_variable = { temp_opinion = 2 }
		}

		add_to_variable = { wall_street_opinion = temp_opinion }

		set_temp_variable = { wall_street_min = 0 }
		set_temp_variable = { wall_street_max = 100 }

		# Custom Min/Max Opinion Instructions
		# if = {
		#	limit = { tag = TAG }
		# 	set_variable = { the_military_min = x }
		# }

		clamp_variable = {
			var = wall_street_opinion
			min = wall_street_min
			max = wall_street_max
		}
		# THIS MUST STAY BETWEEN 0 - 100 pls. Makes my life easier
		custom_effect_tooltip = display_wall_street_opinion
		apply_wall_street_effect_DYNMOD = yes

		if = {
			limit = {
				check_variable = { temp_opinion > 0 }
				check_variable = { USA_strength_of_wall_street_var < 51 }
			}
			set_temp_variable = { modify_wall_street = 2 }
			USA_modify_strength_of_wall_street = yes
		}
		else_if = {
			limit = {
				check_variable = { temp_opinion < 0 }
				check_variable = { USA_strength_of_wall_street_var > 0 }
			}
			set_temp_variable = { modify_wall_street = -2 }
			USA_modify_strength_of_wall_street = yes
		}
		# Reset command in case there is a successive change
		#set_temp_variable = { temp_opinion = 0 }
	}
}

# Internal Faction Debugging Tools:
# The following command sets all of one's Internal Factions to maximum
# This is only used for cheating or extensive testing. :shrug:
set_to_max_internal_faction_opinions = {
	custom_effect_tooltip = set_full_internal_faction_opinions
	if = { limit = { has_idea = small_medium_business_owners }
		set_variable = { small_medium_business_owners_opinion = 100 }
		apply_small_medium_business_owner_effect_DYNMOD = yes
	}
	if = {
		limit = {
			OR = {
				has_idea = irgc
				has_idea = iranian_quds_force
			}
		}
		if = {
			limit = { has_idea = irgc }
			set_variable = { irgc_opinion = 100 }
		}
		if = {
			limit = { has_idea = iranian_quds_force }
			set_variable = { iranian_quds_force_opinion = 100 }
		}
		apply_irgc_iranian_quds_force_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = foreign_jihadis }
		set_variable = { foreign_jihadis_opinion = 100 }
		apply_foreign_jihadis_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = saudi_royal_family }
		set_variable = { saudi_royal_family_opinion = 100 }
		apply_saudi_royal_family_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = wahabi_ulema }
		set_variable = { wahabi_ulema_opinion = 100 }
		apply_wahabi_ulema_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = the_priesthood }
		set_variable = { the_priesthood_opinion = 100 }
		apply_the_priesthood_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = the_ulema }
		set_variable = { the_ulema_opinion = 100 }
		apply_the_ulema_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = the_clergy }
		set_variable = { the_clergy_opinion = 100 }
		apply_the_clergy_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = communist_cadres  }
		set_variable = { communist_cadres_opinion = 100 }
		apply_communist_cadres_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = farmers }
		set_variable = { farmers_opinion = 100 }
		apply_farmers_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = landowners }
		set_variable = { landowners_opinion = 100 }
		apply_landowners_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = labour_unions }
		set_variable = { labour_unions_opinion = 100 }
		apply_labour_unions_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = vevak }
		set_variable = { vevak_opinion = 100 }
		apply_vevak_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = isi_pakistan }
		set_variable = { isi_pakistan_opinion = 100 }
		apply_isi_pakistan_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = intelligence_community }
		set_variable = { intelligence_community_opinion = 100 }
		apply_intelligence_community_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = the_military }
		set_variable = { the_military_opinion = 100 }
		apply_the_military_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = defense_industry }
		set_variable = { defense_industry_opinion = 100 }
		apply_defense_industry_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = maritime_industry }
		set_variable = { maritime_industry_opinion = 100 }
		apply_maritime_industry_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = oligarchs }
		set_variable = { oligarchs_opinion = 100 }
		apply_oligarchs_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = chaebols }
		set_variable = { chaebols_opinion = 100 }
		apply_chaebols_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = industrial_conglomerates }
		set_variable = { industrial_conglomerates_opinion = 100 }
		apply_industrial_conglomerates_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = fossil_fuel_industry }
		set_variable = { fossil_fuel_industry_opinion = 100 }
		apply_fossil_fuel_industry_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = wall_street }
		set_variable = { wall_street_opinion = 100 }
		apply_wall_street_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = international_bankers }
		set_variable = { international_bankers_opinion = 100 }
		apply_international_bankers_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = the_donju }
		set_variable = { the_donju_opinion = 100 }
		apply_the_donju_dynamic_effect_DYNMOD = yes
	}
	if = { limit = { has_idea = the_bazaar }
		set_variable = { the_bazaar_opinion = 100 }
		apply_the_bazaar_dynamic_effect_DYNMOD = yes
	}
}

# The following command sets all of one's Internal Factions to neutral or 50
# Again this is used for testing or debugging.
reset_all_internal_faction_opinions = {
	custom_effect_tooltip = reset_internal_faction_opinion
	# Economic Factions
	if = { limit = { has_idea = small_medium_business_owners }
		set_variable = { small_medium_business_owners_opinion = 50 }
	}
	if = { limit = { has_idea = international_bankers }
		set_variable = { international_bankers_opinion = 50 }
	}
	if = { limit = { has_idea = oligarchs }
		set_variable = { oligarchs_opinion = 50 }
	}
	if = { limit = { has_idea = industrial_conglomerates }
		set_variable = { industrial_conglomerates_opinion = 50 }
	}
	if = { limit = { has_idea = fossil_fuel_industry }
		set_variable = { fossil_fuel_industry_opinion = 50 }
	}
	# Militaristic Factions
	if = { limit = { has_idea = intelligence_community }
		set_variable = { intelligence_community_opinion = 50 }
	}
	if = { limit = { has_idea = the_military }
		set_variable = { the_military_opinion = 50 }
	}
	if = { limit = { has_idea = defense_industry }
		set_variable = { defense_industry_opinion = 50 }
	}
	if = { limit = { has_idea = maritime_industry }
		set_variable = { maritime_industry_opinion = 50 }
	}
	# Special Interest Groups
	if = { limit = { has_idea = wahabi_ulema }
		set_variable = { wahabi_ulema_opinion = 50 }
	}
	if = { limit = { has_idea = the_priesthood }
		set_variable = { the_priesthood_opinion = 50 }
	}
	if = { limit = { has_idea = the_ulema }
		set_variable = { the_ulema_opinion = 50 }
	}
	if = { limit = { has_idea = the_clergy }
		set_variable = { the_clergy_opinion = 50 }
	}
	if = { limit = { has_idea = communist_cadres }
		set_variable = { communist_cadres_opinion = 50 }
	}
	if = { limit = { has_idea = farmers }
		set_variable = { farmers_opinion = 50 }
	}
	if = { limit = { has_idea = landowners }
		set_variable = { landowners_opinion = 50 }
	}
	if = { limit = { has_idea = labour_unions }
		set_variable = { labour_unions_opinion = 50 }
	}
	# Nation Specific
	if = { limit = { has_idea = irgc }
		set_variable = { irgc_opinion = 50 }
	}
	if = { limit = { has_idea = foreign_jihadis }
		set_variable = { foreign_jihadis_opinion = 50 }
	}
	if = { limit = { has_idea = iranian_quds_force }
		set_variable = { iranian_quds_force_opinion = 50 }
	}
	if = { limit = { has_idea = saudi_royal_family }
		set_variable = { saudi_royal_family_opinion = 50 }
	}
	if = { limit = { has_idea = isi_pakistan }
		set_variable = { isi_pakistan_opinion = 50 }
	}
	if = { limit = { has_idea = chaebols }
		set_variable = { chaebols_opinion = 50 }
	}
	if = { limit = { has_idea = wall_street }
		set_variable = { wall_street_opinion = 50 }
	}
	if = { limit = { has_idea = the_donju }
		set_variable = { the_donju_opinion = 50 }
	}
	if = { limit = { has_idea = the_bazaar }
		set_variable = { the_bazaar_opinion = 50 }
	}
}
