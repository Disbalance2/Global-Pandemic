scripted_gui = {
	open_energy_window = {
		window_name = "open_energy_gui"
		context_type = player_context
		parent_window_token = construction_tab

		effects = {
			open_energy_window_click = {
				if = {
					limit = { NOT = { has_country_flag = open_energy_screen } }
					set_country_flag = open_energy_screen
				}
				else = {
					clr_country_flag = open_energy_screen
				}
			}
		}
	}

	energy_scripted_gui = {
		window_name = "energy_scripted_gui"
		context_type = player_context
		parent_window_token = construction_tab

		visible = {
			ROOT = {
				OR = {
					is_ai = yes
					has_country_flag = open_energy_screen
				}
			}
		}

		properties = {
			heavy_power_restrictions_button = { image = "[heavy_power_restrictions_button]" }
			some_power_restrictions_button = { image = "[some_power_restrictions_button]" }
			no_power_rules_button = { image = "[no_power_rules_button]" }
			some_additional_consumption_button = { image = "[some_additional_consumption_button]" }
			heavy_additional_consumption_button = { image = "[heavy_additional_consumption_button_image]" }
		}

		triggers = {
			build_enrichment_facility_button_click_enabled = {
				if = { limit = { is_ai = no }
					custom_trigger_tooltip = {
						tooltip = cost_25_0_tooltip
						check_variable = { treasury > 24.99 }
					}
				}
				NOT = { has_active_mission = bankruptcy_incoming_collapse }
				NOT = { has_active_mission = energy_building_enrichment_facilities }
			}
			build_enrichment_facility_button_shift_click_enabled = {
				if = { limit = { is_ai = no }
					custom_trigger_tooltip = {
						tooltip = cost_75_0_tooltip
						check_variable = { treasury > 74.99 }
					}
				}
				NOT = { has_active_mission = bankruptcy_incoming_collapse }
				NOT = { has_active_mission = energy_building_enrichment_facilities }
			}
			build_battery_park_button_click_enabled = {
				NOT = { has_active_mission = bankruptcy_incoming_collapse }
				has_tech = utility_scale_battery_storage
			}
			buy_fuel_for_money_button_click_enabled = {
				NOT = { has_active_mission = bankruptcy_incoming_collapse }
				if = { limit = { has_country_flag = recently_bought_fuel }
					custom_trigger_tooltip = {
						tooltip = recently_bought_fuel_tt
						NOT = { has_country_flag = recently_bought_fuel }
					}
				}
			}
		}

		effects = {
			# Refresh Energy Screen
			refresh_energy_screen_bg_click = {
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1049 Triggered Energy Refresh"
				ingame_update_setup = yes
				refresh_gui = yes
			}
			close_energy_screen_button_click = {
				clr_country_flag = open_energy_screen
			}
			# Restrictions/Encouragement
			heavy_power_restrictions_button_click = {
				log = "[GetDateText]: [Root.GetName]: Energy GUI  heavy_power_restrictions_button_click"
				add_ideas = heavy_power_restrictions_spirit
				remove_ideas = {
					some_power_restrictions_spirit
					some_additional_consumption_spirit
					heavy_additional_consumption_spirit
				}
				ingame_update_setup = yes
			}
			some_power_restrictions_button_click = {
				log = "[GetDateText]: [Root.GetName]: Energy GUI  some_power_restrictions_button_click"
				add_ideas = some_power_restrictions_spirit
				remove_ideas = {
					heavy_power_restrictions_spirit
					some_additional_consumption_spirit
					heavy_additional_consumption_spirit
				}
				ingame_update_setup = yes
			}
			no_power_rules_button_click = {
				log = "[GetDateText]: [Root.GetName]: Energy GUI  no_power_rules_button_click"
				remove_ideas = {
					heavy_power_restrictions_spirit
					some_power_restrictions_spirit
					some_additional_consumption_spirit
					heavy_additional_consumption_spirit
				}
				ingame_update_setup = yes
			}
			some_additional_consumption_button_click = {
				log = "[GetDateText]: [Root.GetName]: Energy GUI  some_additional_consumption_button_click"
				add_ideas = some_additional_consumption_spirit
				remove_ideas = {
					some_power_restrictions_spirit
					heavy_power_restrictions_spirit
					heavy_additional_consumption_spirit
				}
				ingame_update_setup = yes
			}
			heavy_additional_consumption_button_click = {
				log = "[GetDateText]: [Root.GetName]: Energy GUI  heavy_additional_consumption_button_click"
				add_ideas = heavy_additional_consumption_spirit
				remove_ideas = {
					some_power_restrictions_spirit
					some_additional_consumption_spirit
					heavy_power_restrictions_spirit
				}
				ingame_update_setup = yes
			}
			build_enrichment_facility_button_click = {
				log = "[GetDateText]: [Root.GetName]: Energy GUI build_enrichment_facility_button"
				set_country_flag = single_enrichment_facility
				set_variable = { enrichment_facility_time = 120 }
				activate_mission = energy_building_enrichment_facilities
				if = { limit = { NOT = { is_in_array = { global.enrichment_countries = THIS.id } } }
					random_list = {
						30 = {
							random_country = {
								limit = {
									OR = {
										has_idea = superpower
										has_idea = large_power
										has_idea = great_power
									}
									has_enrichment_facilities = yes
									OR = {
										AND = {
											PREV = { has_government = democratic }
											NOT = { has_government = democratic }
										}
										AND = {
											PREV = { has_government = neutrality }
											NOT = { has_government = neutrality }
										}
										AND = {
											PREV = { has_government = communism }
											NOT = { has_government = communism }
										}
										AND = {
											PREV = { has_government = nationalist }
											NOT = { has_government = nationalist }
										}
										AND = {
											PREV = { has_government = fascism }
											NOT = { has_government = fascism }
										}
									}
								}
								set_variable = { new_enrichment_country = PREV.id }
								country_event = energy.4
							}
						}
						70 = { }
					}
				}
			}
			build_enrichment_facility_button_shift_click = {
				log = "[GetDateText]: [Root.GetName]: Energy GUI build_enrichment_facility_button"
				set_country_flag = build_three_enrichment_facility
				set_variable = { enrichment_facility_time = 290 }
				activate_mission = energy_building_enrichment_facilities
				if = { limit = { NOT = { is_in_array = { global.enrichment_countries = THIS.id } } }
					random_list = {
						30 = {
							random_country = {
								limit = {
									OR = {
										has_idea = superpower
										has_idea = large_power
										has_idea = great_power
									}
									has_enrichment_facilities = yes
									OR = {
										AND = {
											PREV = { has_government = democratic }
											NOT = { has_government = democratic }
										}
										AND = {
											PREV = { has_government = neutrality }
											NOT = { has_government = neutrality }
										}
										AND = {
											PREV = { has_government = communism }
											NOT = { has_government = communism }
										}
										AND = {
											PREV = { has_government = nationalist }
											NOT = { has_government = nationalist }
										}
										AND = {
											PREV = { has_government = fascism }
											NOT = { has_government = fascism }
										}
									}
								}
								set_variable = { new_enrichment_country = PREV.id }
								country_event = energy.4
							}
						}
						70 = { }
					}
				}
			}
			build_battery_park_button_click = {
				log = "[GetDateText]: [Root.GetName]: Energy GUI  build_battery_park_button_click"
				set_temp_variable = { temp_change = 1 }
				build_battery_park_effect = yes
			}
			buy_fuel_for_money_button_click = {
				log = "[GetDateText]: [Root.GetName]: Energy GUI  buy_fuel_for_money_button_click"
				buy_fuel_from_the_market_effect = yes
				set_country_flag = { flag = recently_bought_fuel value = 1 days = 28 }
			}
		}

		# AI Section
		# Note: 3 days - 72 Hrs
		# Functional Notes:
		# ai_enabled - triggers that engage the AI for this GUI
		# ai_test_interval - time frame between AI checks
		# ai_check - trigger the AI looks for to determine if it needs to look at a button
		# ai_weights - modifiers to determine AI habits
		# ai_max_weight_taken_per_test - Determines the number of elements to check for the GUI

		# If you wish to see the values outputted from this. enable human_ai and view ai.log in the logs
		ai_enabled = { always = yes }
		ai_test_interval = 72 # 3 Days
		ai_max_weight_taken_per_test = 1

		ai_check = {
			# Need to Check Energy Sum Against Consumption
			OR = {
				has_fuel < 350000
				AND = {
					is_in_array = { global.enrichment_countries = ROOT.id }
					check_variable = { var_reactor_material_stockpile < 5000 }
				}

				# Temp AI check to make sure they remove the spirit and go to standard for now
				OR = {
					AND = {
						NOT = { original_tag = USA }
						OR = {
							has_idea = heavy_power_restrictions_spirit
							has_idea = some_power_restrictions_spirit
							has_idea = some_additional_consumption_spirit
							has_idea = heavy_additional_consumption_spirit
						}
					}
					AND = {
						original_tag = USA
						NOT = { has_idea = heavy_additional_consumption_spirit }
					}
				}
			}
		}

		ai_weights = {
			buy_fuel_for_money_button_click = {
				ai_will_do = {
					factor = 100
					modifier = {
						factor = 0
						has_fuel > 1000000
					}
				}
			}
			build_enrichment_facility_button_click = {
				ai_will_do = {
					factor = 0
					modifier = {
						add = 20
						is_in_array = { global.enrichment_countries = ROOT.id }
						check_variable = { var_reactor_material_stockpile < 5000 }
					}
					modifier = {
						factor = 5
						check_variable = { nuclear_fuel_consumption > var_nuke_nuclear_reactor_prod }
					}
				}
			}
			no_power_rules_button_click = {
				ai_will_do = {
					factor = 1000
					modifier = {
						factor = 0
						NOT = {
							has_idea = heavy_power_restrictions_spirit
							has_idea = some_power_restrictions_spirit
							has_idea = some_additional_consumption_spirit
							has_idea = heavy_additional_consumption_spirit
						}
					}
					modifier = {
						factor = 0
						original_tag = USA
					}
				}
			}
		}
	}

	economic_state_view = {
		context_type = selected_state_context
		window_name = "state_energy_ui_view"

		parent_window_token = selected_state_view
	}
}
