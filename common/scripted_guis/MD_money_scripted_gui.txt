scripted_gui = {
	# Hides Topbar Money Container
	hide_money = {
		context_type = player_context

		window_name = "hide_money_button"

		dirty = global.update_monie_ui

		visible = {
			ROOT = { NOT = { has_country_flag = hide_money } }
		}

		effects = {
			hide_money_bg_click = {
				ROOT = { set_country_flag = hide_money }
			}
		}
	}
	# Shows Topbar Money Container
	show_money = {
		context_type = player_context

		window_name = "show_money_button"

		dirty = global.update_monie_ui

		visible = {
			ROOT = { has_country_flag = hide_money }
		}

		effects = {
			show_money_bg_click = {
				ROOT = { clr_country_flag = hide_money }
			}
		}
	}

	# Topbar Containers
	# Debt Container within the topbar
	debt = {
		context_type = player_context

		window_name = "debt_container"

		visible = {
			ROOT = { NOT = { has_country_flag = hide_money } }
		}

		effects = {
			#Take debt
			debt_bg_click = {
				if = {
					limit = { check_variable = { interest_rate < 20 } }
					add_to_variable = { treasury = 1 }
					add_to_variable = { debt = 1.01 }
					ingame_update_setup = yes
					refresh_gui = yes
				}
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1070 1b debt taken (Total Debt: Total Debt: [?debt]b, Interest Rate: [?interest_rate]% balance:[?treasury_rate]b, Total Treasury:[?treasury], Total Treasury:[?treasury], Total Treasury Rate:[?treasury_rate])"
			}
			debt_bg_control_click = {
				if = {
					limit = { check_variable = { interest_rate < 20 } }
					add_to_variable = { treasury = 10 }
					add_to_variable = { debt = 10.1 }
					ingame_update_setup = yes
					refresh_gui = yes
				}
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1071 10b debt taken (Total Debt: [?debt]b, Interest Rate: [?interest_rate]% balance:[?treasury_rate]b, Total Treasury:[?treasury], Total Treasury Rate:[?treasury_rate])"
			}
			debt_bg_shift_click = {
				if = {
					limit = { check_variable = { interest_rate < 20 } }
					add_to_variable = { treasury = 100 }
					add_to_variable = { debt = 101 }
					ingame_update_setup = yes
					refresh_gui = yes
				}
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1072 100b debt taken (Total Debt: [?debt]b, Interest Rate: [?interest_rate]% balance:[?treasury_rate]b, Total Treasury:[?treasury], Total Treasury Rate:[?treasury_rate])"
			}

		  	#Repay $1b debt
			debt_bg_right_click = {
				# You have enough money and debt to pay $1b T/T
				if = { limit = {
					check_variable = { var = treasury value = 1 compare = greater_than_or_equals }
					check_variable = { var = debt value = 1 compare = greater_than_or_equals } }
					subtract_from_variable = { treasury = 1 }
					subtract_from_variable = { debt = 1 }
				}
				# You have enough money to pay $1b but less than $1b in debt T/F
				else_if = { limit = {
					check_variable = { var = treasury value = 1 compare = greater_than_or_equals }
					check_variable = { var = debt value = 1 compare = less_than_or_equals } }
					subtract_from_variable = { treasury = debt }
					subtract_from_variable = { debt = debt }
				}
				# You don't have enough money to pay $1b, have enough debt to pay $1b F/T
				else_if = { limit = {
					check_variable = { var = treasury value = 1 compare = less_than_or_equals }
					check_variable = { var = debt value = 1 compare = greater_than_or_equals } }
					subtract_from_variable = { debt = treasury }
					subtract_from_variable = { treasury = treasury }
				}
				# You don't have enough money to pay $1b, and don't have enough debt to pay $1b F/F
				# Money > Debt
				else_if = { limit = {
					check_variable = { var = treasury value = debt compare = greater_than_or_equals } }
					subtract_from_variable = { treasury = debt }
					subtract_from_variable = { debt = debt }
				}
				# Money < Debt
				else_if = { limit = {
					check_variable = { var = treasury value = debt compare = less_than_or_equals } }
					subtract_from_variable = { debt = treasury }
					subtract_from_variable = { treasury = treasury }
					if = { limit = { is_debug = yes }
						log = "1b Repay debt Case 5"
					}
				}
				ingame_update_setup = yes
				refresh_gui = yes
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1073 1b debt paid (Total Debt: [?debt]b, Interest Rate: [?interest_rate]% balance:[?treasury_rate]b, Total Treasury:[?treasury], Total Treasury Rate:[?treasury_rate])"
			}
			debt_bg_control_right_click = {
				# You have enough money and debt to pay $10b T/T
				if = { limit = {
					check_variable = { var = treasury value = 10 compare = greater_than_or_equals }
					check_variable = { var = debt value = 10 compare = greater_than_or_equals } }
					subtract_from_variable = { treasury = 10 }
					subtract_from_variable = { debt = 10 }
				}
				# You have enough money to pay $10b but less than $10b in debt T/F
				else_if = { limit = {
					check_variable = { var = treasury value = 10 compare = greater_than_or_equals }
					check_variable = { var = debt value = 10 compare = less_than_or_equals } }
					subtract_from_variable = { treasury = debt }
					subtract_from_variable = { debt = debt }
				}
				# You don't have enough money to pay $10b, have enough debt to pay $10b F/T
				else_if = { limit = {
					check_variable = { var = treasury value = 10 compare = less_than_or_equals }
					check_variable = { var = debt value = 10 compare = greater_than_or_equals } }
					subtract_from_variable = { debt = treasury }
					subtract_from_variable = { treasury = treasury }
				}
				# You don't have enough money to pay $10b, and don't have enough debt to pay $10b F/F
				# Money > Debt
				else_if = { limit = {
					check_variable = { var = treasury value = debt compare = greater_than_or_equals } }
					subtract_from_variable = { treasury = debt }
					subtract_from_variable = { debt = debt }
				}
				# Money < Debt
				else_if = { limit = {
					check_variable = { var = treasury value = debt compare = less_than_or_equals } }
					subtract_from_variable = { debt = treasury }
					subtract_from_variable = { treasury = treasury }
				}
				ingame_update_setup = yes
				refresh_gui = yes
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1074 10b debt paid (Total Debt: [?debt]b, Interest Rate: [?interest_rate]% balance:[?treasury_rate]b, Total Treasury:[?treasury], Total Treasury Rate:[?treasury_rate])"
			}
			debt_bg_shift_right_click = {
				# You have enough money and debt to pay $100b T/T
				if = { limit = {
					check_variable = { var = treasury value = 100 compare = greater_than_or_equals }
					check_variable = { var = debt value = 100 compare = greater_than_or_equals } }
					subtract_from_variable = { treasury = 100 }
					subtract_from_variable = { debt = 100 }
				}
				# You have enough money to pay $100b but less than $100b in debt T/F
				else_if = { limit = {
					check_variable = { var = treasury value = 100 compare = greater_than_or_equals }
					check_variable = { var = debt value = 100 compare = less_than_or_equals } }
					subtract_from_variable = { treasury = debt }
					subtract_from_variable = { debt = debt }
				}
				# You don't have enough money to pay $100b, have enough debt to pay $100b F/T
				else_if = { limit = {
					check_variable = { var = treasury value = 100 compare = less_than_or_equals }
					check_variable = { var = debt value = 100 compare = greater_than_or_equals } }
					subtract_from_variable = { debt = treasury }
					subtract_from_variable = { treasury = treasury }
				}
				# You don't have enough money to pay $100b, and don't have enough debt to pay $100b F/F
				# Money > Debt
				else_if = { limit = {
					check_variable = { var = treasury value = debt compare = greater_than_or_equals } }
					subtract_from_variable = { treasury = debt }
					subtract_from_variable = { debt = debt }
				}
				# Money < Debt
				else_if = { limit = {
					check_variable = { var = treasury value = debt compare = less_than_or_equals } }
					subtract_from_variable = { debt = treasury }
					subtract_from_variable = { treasury = treasury }
				}
				ingame_update_setup = yes
				refresh_gui = yes
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1075 100b debt paid (Total Debt: [?debt]b, Interest Rate: [?interest_rate]% balance:[?treasury_rate]b, Total Treasury:[?treasury], Total Treasury Rate:[?treasury_rate])"
			}
			#Pay off maximum
			debt_bg_alt_right_click = {
				if = {
					limit = { check_variable = { treasury > debt } }
					subtract_from_variable = { treasury = debt }
					subtract_from_variable = { debt = debt }
					ingame_update_setup = yes
					refresh_gui = yes
				}
				else = {
					subtract_from_variable = { debt = treasury }
					subtract_from_variable = { treasury = treasury }
					ingame_update_setup = yes
					refresh_gui = yes
				}
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1076 Max debt paid (Total Debt: [?debt]b, Interest Rate: [?interest_rate]% balance:[?treasury_rate]b, Total Treasury:[?treasury], Total Treasury Rate:[?treasury_rate])"
			}
		}

		triggers = {
			####
			debt_bg_right_click_enabled = {
				check_variable = { treasury > 0 }
				check_variable = { debt > 0 }
			}
			debt_bg_control_right_click_enabled = {
				check_variable = { treasury > 0 }
				check_variable = { debt > 0 }
			}
			debt_bg_shift_right_click_enabled = {
				check_variable = { treasury > 0 }
				check_variable = { debt > 0 }
			}
			debt_bg_alt_right_click_enabled = {
				NOT = { has_idea = bankrupcy }
			}

			debt_bg_click_enabled = {
				NOT = { has_idea = bankrupcy }
			}
			debt_bg_control_click_enabled = {
				NOT = { has_idea = bankrupcy }
			}
			debt_bg_shift_click_enabled = {
				NOT = { has_idea = bankrupcy }
			}
		}

		# AI Section
		# ai_enabled enables the AI for this GUI
		ai_enabled = { always = yes }
		# ai_test_interval is the time in hours that is used to test the ai_check
		ai_test_interval = 120 # 5 Days
		ai_check = { has_available_treasury = yes }
		ai_max_weight_taken_per_test = 3 # Allow the AI to select up to 3 if necessary

		ai_weights = {
			# ------- #
			# Repaying Debt AI
			# This section primarily deals with the AI decreasing debt
			debt_bg_right_click = { # Repay Debt -- 1 Billion
				ai_will_do = {
					factor = 5
					# Interest Rate Methodology
					modifier = {
						set_temp_variable = { temp_interest_rate = 1.50 }
						multiply_temp_variable = { temp_interest_rate = interest_rate }
						has_variable = interest_rate
						factor = temp_interest_rate
					}
					# GDP Debt Ratio Methodology
					# Start being more likely to pay debt
					modifier = {
						set_temp_variable = { temp_debt_ratio = 2 }
						multiply_temp_variable = { temp_debt_ratio = debt_ratio }
						check_variable = { debt_ratio > 0.50 }
						factor = temp_debt_ratio
					}
					# Killswitches
					modifier = {
						factor = 0
						OR = {
							check_variable = { treasury < 5 }
							check_variable = { treasury_rate < 0 }
						}
					}
				}
			}
			debt_bg_control_right_click = { #Repay debt -- 10 debt
				ai_will_do = {
					factor = 5
					# Interest Rate Methodology
					modifier = {
						set_temp_variable = { temp_interest_rate = 1.50 }
						multiply_temp_variable = { temp_interest_rate = interest_rate }
						has_variable = interest_rate
						factor = temp_interest_rate
					}
					# GDP Debt Ratio Methodology
					# Start being more likely to pay debt
					modifier = {
						set_temp_variable = { temp_debt_ratio = 2 }
						multiply_temp_variable = { temp_debt_ratio = debt_ratio }
						check_variable = { debt_ratio > 0.50 }
						factor = temp_debt_ratio
					}
					# Killswitches
					modifier = {
						factor = 0
						OR = {
							check_variable = { treasury < 15 }
							check_variable = { treasury_rate < 0 }
						}
					}
				}
			}
			debt_bg_shift_right_click = { #should force the AI to repay 100 debt if they have the funds
				ai_will_do = {
					factor = 5
					# Interest Rate Methodology
					modifier = {
						set_temp_variable = { temp_interest_rate = 1.50 }
						multiply_temp_variable = { temp_interest_rate = interest_rate }
						has_variable = interest_rate
						factor = temp_interest_rate
					}
					# GDP Debt Ratio Methodology
					# Start being more likely to pay debt
					modifier = {
						set_temp_variable = { temp_debt_ratio = 2 }
						multiply_temp_variable = { temp_debt_ratio = debt_ratio }
						check_variable = { debt_ratio > 0.50 }
						factor = temp_debt_ratio
					}
					# Killswitches
					modifier = {
						factor = 0
						OR = {
							check_variable = { treasury < 115 }
							check_variable = { treasury_rate < 0 }
						}
					}
				}
			}
			debt_bg_alt_right_click = {
				ai_will_do = {
					factor = 100
					modifier = {
						factor = 2
						check_variable = { treasury > debt }
					}
					modifier = {
						factor = 0
						check_variable = { treasury < debt }
					}
				}
			}
		}
	}
	# Treasury Topbar Container
	treasury = {
		context_type = player_context

		window_name = "treasury_container"

		visible = {
			ROOT = { NOT = { has_country_flag = hide_money } }
		}

		effects = {
			treasury_bg_click = {
				if = {
					limit = {
						OR = {
							NOT = { has_country_flag = open_economy_screen }
							is_ai = yes
						}
					}

					set_country_flag = open_economy_screen
				}
				else = {
					clr_country_flag = open_economy_screen
				}
			}
		}
	}
	# International Investments Topbar Container
	int_investments = {
		context_type = player_context

		window_name = "int_investments_container"

		visible = {
			ROOT = { NOT = { has_country_flag = hide_money } }
		}

		effects = {
			#Sell off investments
			int_investments_bg_right_click = {
				subtract_from_variable = { int_investments = 1 }
				add_to_variable = { treasury = 0.60 }
				ingame_update_setup = yes
			}
			int_investments_bg_control_right_click = {
				subtract_from_variable = { int_investments = 10 }
				add_to_variable = { treasury = 6.0 }
				ingame_update_setup = yes
			}
			int_investments_bg_shift_right_click = {
				subtract_from_variable = { int_investments = 100 }
				add_to_variable = { treasury = 60 }
				ingame_update_setup = yes
			}

			# Reinvestment Feature
			int_investments_bg_shift_click = {
				if = { limit = { has_country_flag = int_reinvestment_flag }
					clr_country_flag = int_reinvestment_flag
				}
				else = {
					set_country_flag = int_reinvestment_flag
				}
				ingame_update_setup = yes
			}

			int_investments_bg_control_click = {
				if = { limit = { has_country_flag = int_auto_reject_investment_flag }
					clr_country_flag = int_auto_reject_investment_flag
				}
				else = {
					set_country_flag = int_auto_reject_investment_flag
				}
				ingame_update_setup = yes
			}
		}

		triggers = {
			int_investments_bg_right_click_enabled = {
				check_variable = { int_investments > 1 }
			}
			int_investments_bg_control_right_click_enabled = {
				check_variable = { int_investments > 10 }
			}
			int_investments_bg_shift_right_click_enabled = {
				check_variable = { int_investments > 100 }
			}
		}
	}

	### AC System ###
	AC_treasury = {
		context_type = selected_state_context

		window_name = "AC_treasury_container"

		parent_window_token = selected_state_view

		visible = {
			NOT = { is_owned_by = ROOT }
			ROOT = { NOT = { has_country_flag = AC_hide_investment_window } }
		}
	}

	AC_int_investments = {
		context_type = selected_state_context

		window_name = "AC_int_investments_container"

		parent_window_token = selected_state_view

		visible = {
			NOT = { is_owned_by = ROOT }
			ROOT = { NOT = { has_country_flag = AC_hide_investment_window } }
		}
	}
	### Diplomacy view other countries ###
	treasury_dip = {
		context_type = selected_country_context

		window_name = "diplo_treasury_container"
		parent_window_token = selected_country_view

	}
	int_investments_dip = {
		context_type = selected_country_context

		window_name = "diplo_int_investments_container"
		parent_window_token = selected_country_view

	}
	debt_dip = {
		context_type = selected_country_context

		window_name = "diplo_debt_container"
		parent_window_token = selected_country_view

	}
	tax_rate_dip = {
		context_type = selected_country_context

		window_name = "tax_rate_diplo"
		parent_window_token = selected_country_view_diplomacy

	}
	expense_gain_dip = {
		context_type = selected_country_context

		window_name = "expense_gain_diplo"
		parent_window_token = selected_country_view_diplomacy

	}
	tax_gain_dip = {
		context_type = selected_country_context

		window_name = "tax_gain_diplo"
		parent_window_token = selected_country_view_diplomacy

	}

	# Open Economy Buttons
	open_economy_construction_button = {
		context_type = player_context
		window_name = "construction_economy_open_button"
		parent_window_token = construction_tab

		dirty = global.update_monie_ui

		effects = {
			open_economy_construction_button_click = {
				if = {
					limit = { NOT = { has_country_flag = open_economy_screen } }
					set_country_flag = open_economy_screen
				}
				else = {
					clr_country_flag = open_economy_screen
				}
			}
		}
	}
	open_economy_trade_button = {
		context_type = player_context
		window_name = "trade_economy_open_button"
		parent_window_token = trade_tab

		dirty = global.update_monie_ui

		effects = {
			open_economy_trade_button_click = {
				if = {
					limit = { NOT = { has_country_flag = open_economy_screen } }
					set_country_flag = open_economy_screen
				}
				else = {
					clr_country_flag = open_economy_screen
				}
			}
		}
	}
	open_economy_political_button = {
		context_type = player_context
		window_name = "politics_economy_open_button"
		parent_window_token = politics_tab

		dirty = global.update_monie_ui

		effects = {
			open_economy_political_button_click = {
				if = {
					limit = { NOT = { has_country_flag = open_economy_screen } }
					set_country_flag = open_economy_screen
				}
				else = {
					clr_country_flag = open_economy_screen
				}
			}
		}
	}

	open_economy_main_button = {
		context_type = player_context
		window_name = "main_economy_open_button"
		parent_window_name = "MapmodesInterface_Ingame"
		dirty = global.update_monie_ui

		effects = {
			open_economy_main_screen_button_click = {
				if = {
					limit = { NOT = { has_country_flag = open_economy_screen } }
					set_country_flag = open_economy_screen
				}
				else = {
					clr_country_flag = open_economy_screen
				}
			}
		}
	}

	# Economy/Budget Screen
	budget_tab = {
		context_type = player_context
		window_name = "budget_tab"

		dirty = global.update_monie_ui

		visible = {
			ROOT = {
				OR = {
					is_ai = yes
					has_country_flag = open_economy_screen
				}
			}
		}

		properties = {
			# Project Property Files
			lease_military_factories = { image = "[LeaseMilitaryFactoriesGlowTexture]" }
			lease_civilian_factories = { image = "[LeaseCivilianFactoriesGlowTexture]" }
			lease_naval_dockyards = { image = "[LeaseNavalDockyardsGlowTexture]" }
			industrial_projects = { image = "[IndustrialProjectsEnabledTexture]" }
			service_constructions = { image = "[OfficeProjectsEnabledTexture]" }
			infrastructure_investiture = { image = "[InfraProjectsEnabledTexture]" }
			arms_industry_stipends = { image = "[ArmsIndustryEnabledTexture]" }
			retool_shipyards = { image = "[RetoolShipyardsEnabledTexture]" }
		}

		triggers = {
			# Population taxes
			increase_population_tax_click_enabled = {
				check_variable = { var = population_tax_rate value = 0 compare = greater_than_or_equals }
				check_variable = { var = population_tax_rate value = 50 compare = less_than }
				NOT = { has_country_flag = no_personal_tax_rate_change }
				ROOT = { has_political_power > tax_rate_change }
				if = { limit = { is_ai = yes }
					NOT = { has_country_flag = temp_decrease_population_taxes }
				}
			}
			increase_population_tax_shift_click_enabled = { #56-60 NO
				check_variable = { var = population_tax_rate value = 0 compare = greater_than_or_equals }
				check_variable = { var = population_tax_rate value = 45 compare = less_than_or_equals }
				NOT = { has_country_flag = no_personal_tax_rate_change }
				ROOT = { has_political_power > tax_rate_change_5 }
			}
			decrease_population_tax_click_enabled = {
				check_variable = { var = population_tax_rate value = 0 compare = greater_than }
				NOT = { has_country_flag = no_personal_tax_rate_change }
				ROOT = { has_political_power > tax_rate_change }
				if = { limit = { is_ai = yes }
					NOT = { has_country_flag = temp_increase_population_taxes }
				}
			}
			decrease_population_tax_shift_click_enabled = { #0-5 NO
				check_variable = { var = population_tax_rate value = 5 compare = greater_than_or_equals }
				check_variable = { var = population_tax_rate value = 50 compare = less_than_or_equals }
				NOT = { has_country_flag = no_personal_tax_rate_change }
				ROOT = { has_political_power > tax_rate_change_5 }
			}
			# Corporate Taxes
			increase_corporate_tax_click_enabled = {
				check_variable = { var = corporate_tax_rate value = 0 compare = greater_than_or_equals }
				check_variable = { var = corporate_tax_rate value = 50 compare = less_than }
				NOT = { has_country_flag = no_corporate_tax_rate_change }
				ROOT = { has_political_power > tax_rate_change }
				if = { limit = { is_ai = yes }
					NOT = { has_country_flag = temp_decrease_corporate_taxes }
				}
			}
			increase_corporate_tax_shift_click_enabled = {
				check_variable = { var = corporate_tax_rate value = 0 compare = greater_than_or_equals }
				check_variable = { var = corporate_tax_rate value = 45 compare = less_than_or_equals }
				NOT = { has_country_flag = no_corporate_tax_rate_change }
				ROOT = { has_political_power > tax_rate_change_5 }
			}
			decrease_corporate_tax_click_enabled = {
				check_variable = { var = corporate_tax_rate value = 0 compare = greater_than }
				check_variable = { var = corporate_tax_rate value = 50 compare = less_than_or_equals }
				NOT = { has_country_flag = no_corporate_tax_rate_change }
				ROOT = { has_political_power > tax_rate_change }
				if = { limit = { is_ai = yes }
					NOT = { has_country_flag = temp_increase_corporate_taxes }
				}
			}
			decrease_corporate_tax_shift_click_enabled = {
				check_variable = { var = corporate_tax_rate value = 5 compare = greater_than_or_equals }
				check_variable = { var = corporate_tax_rate value = 50 compare = less_than_or_equals }
				NOT = { has_country_flag = no_corporate_tax_rate_change }
				ROOT = { has_political_power > tax_rate_change_5 }
			}
			# Extra Features
			print_money_button_click_enabled = {
				if = { limit = { has_country_flag = printed_money_recently }
					custom_trigger_tooltip = {
						tooltip = printed_money_recently_one_tt
						NOT = { has_country_flag = printed_money_recently }
					}
				}
				else = {
					custom_trigger_tooltip = {
						tooltip = printed_money_recently_two_tt
						NOT = { has_country_flag = printed_money_recently }
					}
				}
				has_political_power > 49
			}

			# - Lease Military Factories
			# This action increases the number of leased military factories
			lease_military_factories_click_enabled = {
				#check_variable = { leased_military_factories < 20 } #use this as an hard cap on amount of mils leasable
			}
			lease_military_factories_right_click_enabled = {
				check_variable = { leased_military_factories > 0 }
			}
			# - Lease Civilian Industry
			# This action increases the number of leased civilian factories
			lease_civilian_factories_click_enabled = {
				#check_variable = { leased_civilian_factories < 20 } #use this as an hard cap on amount of civs leasable
			}
			lease_civilian_factories_right_click_enabled = {
				check_variable = { leased_civilian_factories > 0 }
			}
			# - Lease Naval Dockyards
			# This action increases the number of leased dockyards
			lease_naval_dockyards_click_enabled = {
				#check_variable = { leased_dockyards < 20 } #use this as an hard cap on amount of dockyards leasable
			}
			lease_naval_dockyards_right_click_enabled = {
				check_variable = { leased_dockyards > 0 }
			}
			# - Industrial Projects
			# This action triggers a hidden idea to increase industrial complex construction speed
			industrial_projects_click_enabled = {
				NOT = {
					has_country_flag = infrastructure_investiture_flag
					has_country_flag = service_constructions_flag
					has_country_flag = arms_industry_stipends_flag
					has_country_flag = retool_shipyards_flag
				}
			}
			# - Service Constructions
			# This action triggers a hidden idea to increase office construction speed
			service_constructions_click_enabled = {
				NOT = {
					has_country_flag = infrastructure_investiture_flag
					has_country_flag = industrial_projects_flag
					has_country_flag = arms_industry_stipends_flag
					has_country_flag = retool_shipyards_flag
				}
			}
			# - Infrastructure Investiture
			# This action triggers a hidden idea to increase infrastructure construction speed
			infrastructure_investiture_click_enabled = {
				NOT = {
					has_country_flag = service_constructions_flag
					has_country_flag = industrial_projects_flag
					has_country_flag = arms_industry_stipends_flag
					has_country_flag = retool_shipyards_flag
				}
			}
			# - Arms Industry Stipends
			# This action triggers a hidden idea to increase arms military construction speed
			arms_industry_stipends_click_enabled = {
				NOT = {
					has_country_flag = infrastructure_investiture_flag
					has_country_flag = industrial_projects_flag
					has_country_flag = service_constructions_flag
					has_country_flag = retool_shipyards_flag
				}
			}
			# - Retool Shipyards
			# This action triggers a hidden idea to increase naval dockyard construction speed
			retool_shipyards_click_enabled = {
				NOT = {
					has_country_flag = infrastructure_investiture_flag
					has_country_flag = industrial_projects_flag
					has_country_flag = service_constructions_flag
					has_country_flag = arms_industry_stipends_flag
				}
			}

			# - Military Factories Employent
			# This action increases employment in this building type
			military_factory_employment_button_right_click_enabled = {
				has_political_power > 20
			}
			# - Civilian Factories Employent
			# This action increases employment in this building type
			civilian_factory_employment_button_right_click_enabled = {
				has_political_power > 20
			}
			# - Naval Factories Employent
			# This action increases employment in this building type
			naval_factory_employment_button_right_click_enabled = {
				has_political_power > 20
			}
			# - Offices Employent
			# This action increases employment in this building type
			office_employment_button_click_right_enabled = {
				has_political_power > 20
			}

			# - Military Factories Employent
			# This action reduces employment in this building type
			military_factory_employment_button_click_enabled = {
				has_political_power > 20
			}
			# - Civilian Factories Employent
			# This action reduces employment in this building type
			civilian_factory_employment_button_click_enabled = {
				has_political_power > 20
			}
			# - Naval Factories Employent
			# This action reduces employment in this building type
			naval_factory_employment_button_click_enabled = {
				has_political_power > 20
			}
			# - Offices Employent
			# This action reduces employment in this building type
			office_employment_button_click_enabled = {
				has_political_power > 20
			}

			### BOTTOM BAR
			bottom_bar_debt_bg_right_click_enabled = {
				check_variable = { treasury > 1 }
				check_variable = { debt > 1 }
			}
			bottom_bar_debt_bg_control_right_click_enabled = {
				check_variable = { treasury > 10 }
				check_variable = { debt > 10 }
			}
			bottom_bar_debt_bg_shift_right_click_enabled = {
				check_variable = { treasury > 100 }
				check_variable = { debt > 100 }
			}
			bottom_bar_debt_bg_alt_right_click_enabled = {
				check_variable = { treasury > debt }
				NOT = { has_idea = bankrupcy }
			}

			bottom_bar_debt_bg_click_enabled = {
				NOT = { has_idea = bankrupcy }
			}
			bottom_bar_debt_bg_control_click_enabled = {
				NOT = { has_idea = bankrupcy }
			}
			bottom_bar_debt_bg_shift_click_enabled = {
				NOT = { has_idea = bankrupcy }
			}

			bottom_bar_int_investments_bg_right_click_enabled = {
				check_variable = { int_investments > 1 }
			}
			bottom_bar_int_investments_bg_control_right_click_enabled = {
				check_variable = { int_investments > 10 }
			}
			bottom_bar_int_investments_bg_shift_right_click_enabled = {
				check_variable = { int_investments > 100 }
			}
		}

		effects = {
			close_economy_screen_click = {
				clr_country_flag = open_economy_screen
			}
			# Population Tax Increase/Decrease
			increase_population_tax_click = {
				set_temp_variable = { tax_rate_change_temp = tax_rate_change }
				multiply_temp_variable = { tax_rate_change_temp = -1 }
				ROOT = { add_political_power = tax_rate_change_temp }
				set_temp_variable = { previous_tax_rate = population_tax_rate }
				add_to_variable = { population_tax_rate = 1 }
				clamp_variable = {
					var = population_tax_rate
					min = 0
					max = 50
				}
				ingame_update_setup = yes
				refresh_gui = yes
				set_variable = { law_attitude = 0 } #index for taxes in #_law_change_attitude arrays
				set_variable = { law_change = 1 } #-1 decrease, 1 for increase
				law_attitude_change = yes
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1050 Pop Tax Rate Increases: Old Pop Taxes: [?previous_tax_rate]%, New Pop Taxes:[?population_tax_rate]% (Balance:[?treasury_rate])"
				if = { limit = { is_ai = yes }
					set_country_flag = { flag = temp_increase_population_taxes value = 1 days = 3 }
				}
			}
			increase_population_tax_shift_click = {
				set_temp_variable = { tax_rate_change_5_temp = tax_rate_change_5 }
				multiply_temp_variable = { tax_rate_change_5_temp = -1 }
				ROOT = { add_political_power = tax_rate_change_5_temp }
				set_temp_variable = { previous_tax_rate = population_tax_rate }
				add_to_variable = { population_tax_rate = 5 }
				clamp_variable = {
					var = population_tax_rate
					min = 0
					max = 50
				}
				ingame_update_setup = yes
				refresh_gui = yes
				set_variable = { law_attitude = 0 } #index for taxes in #_law_change_attitude arrays
				set_variable = { law_change = 1 } #-1 decrease, 1 for increase
				law_attitude_change = yes
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1051 Pop Tax Rate +5 Increase: Old Pop Taxes: [?previous_tax_rate]%, New Pop Taxes:[?population_tax_rate]% (Balance:[?treasury_rate])"
			}
			decrease_population_tax_click = {
				set_temp_variable = { tax_rate_change_temp = tax_rate_change }
				multiply_temp_variable = { tax_rate_change_temp = -1 }
				ROOT = { add_political_power = tax_rate_change_temp }
				set_temp_variable = { previous_tax_rate = population_tax_rate }
				subtract_from_variable = { population_tax_rate = 1 }
				clamp_variable = {
					var = population_tax_rate
					min = 0
					max = 50
				}
				ingame_update_setup = yes
				refresh_gui = yes
				set_variable = { law_attitude = 0 } #index for taxes in #_law_change_attitude arrays
				set_variable = { law_change = -1 } #-1 decrease, 1 for increase
				law_attitude_change = yes
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1052 Pop Tax Rate Decrease: Old Pop Taxes: [?previous_tax_rate]%, New Pop Taxes:[?population_tax_rate]% (Balance:[?treasury_rate])"
				if = { limit = { is_ai = yes }
					set_country_flag = { flag = temp_decrease_population_taxes value = 1 days = 3 }
				}
			}
			decrease_population_tax_shift_click = {
				set_temp_variable = { tax_rate_change_5_temp = tax_rate_change_5 }
				multiply_temp_variable = { tax_rate_change_5_temp = -1 }
				ROOT = { add_political_power = tax_rate_change_5_temp }
				set_temp_variable = { previous_tax_rate = population_tax_rate }
				subtract_from_variable = { population_tax_rate = 5 }
				clamp_variable = {
					var = population_tax_rate
					min = 0
					max = 50
				}
				ingame_update_setup = yes
				refresh_gui = yes
				set_variable = { law_attitude = 0 } #index for taxes in #_law_change_attitude arrays
				set_variable = { law_change = -1 } #-1 decrease, 1 for increase
				law_attitude_change = yes
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1053 Pop Tax Rate -5 Decrease: Old Pop Taxes: [?previous_tax_rate]%, New Pop Taxes:[?population_tax_rate]% (Balance:[?treasury_rate])"
			}
			##Corporate Tax Increase/Decrease
			increase_corporate_tax_click = {
				set_temp_variable = { tax_rate_change_temp = tax_rate_change }
				multiply_temp_variable = { tax_rate_change_temp = -1 }
				ROOT = { add_political_power = tax_rate_change_temp }
				set_temp_variable = { previous_tax_rate = corporate_tax_rate }
				add_to_variable = { corporate_tax_rate = 1 }
				clamp_variable = {
					var = corporate_tax_rate
					min = 0
					max = 50
				}
				ingame_update_setup = yes
				refresh_gui = yes
				set_variable = { law_attitude = 0 } #index for taxes in #_law_change_attitude arrays
				set_variable = { law_change = 1 } #-1 decrease, 1 for increase
				law_attitude_change = yes
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1054 Corp Tax Rate Increase: Old Corp Taxes: [?previous_tax_rate]%, New Corp Taxes:[?corporate_tax_rate]% (Balance:[?treasury_rate])"
				if = { limit = { is_ai = yes }
					set_country_flag = { flag = temp_increase_corporate_taxes value = 1 days = 3 }
				}
			}
			increase_corporate_tax_shift_click = {
				set_temp_variable = { tax_rate_change_5_temp = tax_rate_change_5 }
				multiply_temp_variable = { tax_rate_change_5_temp = -1 }
				ROOT = { add_political_power = tax_rate_change_5_temp }
				set_temp_variable = { previous_tax_rate = corporate_tax_rate }
				add_to_variable = { corporate_tax_rate = 5 }
				clamp_variable = {
					var = corporate_tax_rate
					min = 0
					max = 50
				}
				ingame_update_setup = yes
				refresh_gui = yes
				set_variable = { law_attitude = 0 } #index for taxes in #_law_change_attitude arrays
				set_variable = { law_change = 1 } #-1 decrease, 1 for increase
				law_attitude_change = yes
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1055 Corp Tax Rate +5 Increase: Old Corp Taxes: [?previous_tax_rate]%, New Corp Taxes:[?corporate_tax_rate]% (Balance:[?treasury_rate])"
			}
			decrease_corporate_tax_click = {
				set_temp_variable = { tax_rate_change_temp = tax_rate_change }
				multiply_temp_variable = { tax_rate_change_temp = -1 }
				ROOT = { add_political_power = tax_rate_change_temp }
				set_temp_variable = { previous_tax_rate = corporate_tax_rate }
				subtract_from_variable = { corporate_tax_rate = 1 }
				clamp_variable = {
					var = corporate_tax_rate
					min = 0
					max = 50
				}
				ingame_update_setup = yes
				refresh_gui = yes
				set_variable = { law_attitude = 0 } #index for taxes in #_law_change_attitude arrays
				set_variable = { law_change = -1 } #-1 decrease, 1 for increase
				law_attitude_change = yes
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1056 Corp Tax Rate Decrease: Old Corp Taxes: [?previous_tax_rate]%, New Corp Taxes:[?corporate_tax_rate]% (Balance:[?treasury_rate])"
				if = { limit = { is_ai = yes }
					set_country_flag = { flag = temp_decrease_corporate_taxes value = 1 days = 3 }
				}
			}
			decrease_corporate_tax_shift_click = {
				set_temp_variable = { tax_rate_change_5_temp = tax_rate_change_5 }
				multiply_temp_variable = { tax_rate_change_5_temp = -1 }
				ROOT = { add_political_power = tax_rate_change_5_temp }
				set_temp_variable = { previous_tax_rate = corporate_tax_rate }
				subtract_from_variable = { corporate_tax_rate = 5 }
				clamp_variable = {
					var = corporate_tax_rate
					min = 0
					max = 50
				}
				ingame_update_setup = yes
				refresh_gui = yes
				set_variable = { law_attitude = 0 } #index for taxes in #_law_change_attitude arrays
				set_variable = { law_change = -1 } #-1 decrease, 1 for increase
				law_attitude_change = yes
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1057 Corp Tax Rate -5 Decrease: Old Corp Taxes: [?previous_tax_rate]%, New Corp Taxes:[?corporate_tax_rate]% (Balance:[?treasury_rate])"
			}
			#
			refresh_tax_rates_bg_click = {
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1049 Triggered Tax Rate Refresh"
				ingame_update_setup = yes
				refresh_gui = yes
			}
			# - Printing Money action
			# This action "prints" money and adds 2 weeks of your total gross income to your treasury immediatly while reducing productivity, increasing the penalty with each click (the penalty going back down once per year however).
			print_money_button_click = {
				set_temp_variable = { var = printing value = display_income }
				multiply_temp_variable = { var = printing value = 2 }
				set_temp_variable = { treasury_change = printing }
				modify_treasury_effect = yes
				add_political_power = -50

				# Calculate the productivity change
				set_temp_variable = { temp_gdp_multiplier = gdp_total } # decreases productivity cost (loss) the higher your total GDP
				multiply_temp_variable = { temp_gdp_multiplier = 0.001 }

				set_temp_variable = { temp_multiplier = 0.20 } # increases productivity cost (loss) by 20% with each press/printing of money
				multiply_temp_variable = { temp_multiplier = printing_money_var }
				add_to_temp_variable = { temp_multiplier = 1 }

				set_temp_variable = { temp_productivity_change = -7 }
				add_to_temp_variable = { temp_productivity_change = temp_gdp_multiplier }
				clamp_temp_variable = { var = temp_productivity_change max = -3 } # hits the max reduction from the temp_gdp_multiplier at $4,000B GDP
				multiply_temp_variable = { temp_productivity_change = temp_multiplier }
				flat_productivity_change_effect = yes

				add_to_variable = { printing_money_var = 1 }

				set_country_flag = { flag = printed_money_recently value = 1 days = 30 }
				ingame_update_setup = yes
				refresh_gui = yes
				log = "[GetDateText]: [THIS.GetName]: DEBUG: Print Money. Weekly Balance:[?treasury_rate], # of Times Printed:[?printing_money_var], Int Rate:[?interest_rate]."
			}

			# - Lease Military Factories
			# This action increases the amount of leased military factories by 1
			lease_military_factories_click = {
				if = { limit = { NOT = { check_variable = { leased_factories = 20 } } }
					if = { limit = { NOT = { has_country_flag = lease_military_factories_flag } }
						set_country_flag = lease_military_factories_flag
					}
					add_offsite_building = { level = 1 type = arms_factory }
					add_to_variable = { leased_military_factories = 1 }
					add_to_variable = { leased_factories = 1 }
					add_to_variable = { lease_factories_cumulative_cost = leased_factories }
					ingame_update_setup = yes
					refresh_gui = yes
				}
			}
			# This action decreases the amount of leased military factories by 1
			lease_military_factories_right_click = {
				if = { limit = { NOT = { check_variable = { leased_factories = 0 } } }
					if = { limit = { check_variable = { leased_military_factories = 1 } }
						clr_country_flag = lease_military_factories_flag
					}
					add_offsite_building = { level = -1 type = arms_factory }
					subtract_from_variable = { lease_factories_cumulative_cost = leased_factories }
					add_to_variable = { leased_military_factories = -1 }
					add_to_variable = { leased_factories = -1 }
					ingame_update_setup = yes
					refresh_gui = yes
				}
			}
			# - Lease Civilian Industry
			# This action increases the amount of leased civilian factories by 1
			lease_civilian_factories_click = {
				if = { limit = { NOT = { check_variable = { leased_factories = 20 } } }
					if = { limit = { NOT = { has_country_flag = lease_civilian_factories_flag } }
						set_country_flag = lease_civilian_factories_flag
					}
					add_offsite_building = { level = 1 type = industrial_complex }
					add_to_variable = { leased_civilian_factories = 1 }
					add_to_variable = { leased_factories = 1 }
					add_to_variable = { lease_factories_cumulative_cost = leased_factories }
					ingame_update_setup = yes
					refresh_gui = yes
				}
				}
			# This action decreases the amount of leased civilian factories by 1
			lease_civilian_factories_right_click = {
				if = { limit = { NOT = { check_variable = { leased_factories = 0 } } }
					if = { limit = { check_variable = { leased_civilian_factories = 1 } }
						clr_country_flag = lease_civilian_factories_flag
					}
					add_offsite_building = { level = -1 type = industrial_complex }
					subtract_from_variable = { lease_factories_cumulative_cost = leased_factories }
					add_to_variable = { leased_civilian_factories = -1 }
					add_to_variable = { leased_factories = -1 }
					ingame_update_setup = yes
					refresh_gui = yes
				}
			}
			# - Lease Naval Dockyards
			# This action increases the amount of leased dockyards by 1
			lease_naval_dockyards_click = {
				if = { limit = { NOT = { check_variable = { leased_factories = 20 } } }
					if = { limit = { NOT = { has_country_flag = lease_naval_dockyards_flag } }
						set_country_flag = lease_naval_dockyards_flag
					}
					add_offsite_building = { level = 1 type = dockyard }
					add_to_variable = { leased_dockyards = 1 }
					add_to_variable = { leased_factories = 1 }
					add_to_variable = { lease_factories_cumulative_cost = leased_factories }
					ingame_update_setup = yes
					refresh_gui = yes
				}
			}
			# This action decreases the amount of leased dockyards by 1
			lease_naval_dockyards_right_click = {
				if = { limit = { NOT = { check_variable = { leased_factories = 0 } } }
					if = { limit = { check_variable = { leased_dockyards = 1 } }
						clr_country_flag = lease_naval_dockyards_flag
					}
					add_offsite_building = { level = -1 type = dockyard }
					subtract_from_variable = { lease_factories_cumulative_cost = leased_factories }
					add_to_variable = { leased_dockyards = -1 }
					add_to_variable = { leased_factories = -1 }
					ingame_update_setup = yes
					refresh_gui = yes
				}
			}
			# - Industrial Projects
			# This action triggers a hidden idea to increase industrial complex construction speed
			industrial_projects_click = {
				custom_effect_tooltip = treasury_loss_projects_TT
				if = { limit = { NOT = { has_country_flag = industrial_projects_flag } }
					set_country_flag = industrial_projects_flag
					add_ideas = industrial_projects_idea
				}
				else = {
					clr_country_flag = industrial_projects_flag
					remove_ideas = industrial_projects_idea
				}
				ingame_update_setup = yes
				refresh_gui = yes
			}
			# - Service Constructions
			# This action triggers a hidden idea to increase office construction speed
			service_constructions_click = {
				custom_effect_tooltip = treasury_loss_projects_TT
				if = { limit = { NOT = { has_country_flag = service_constructions_flag } }
					set_country_flag = service_constructions_flag
					add_ideas = service_constructions_idea
				}
				else = {
					clr_country_flag = service_constructions_flag
					remove_ideas = service_constructions_idea
				}
				ingame_update_setup = yes
				refresh_gui = yes
			}
			# - Infrastructure Investiture
			# This action triggers a hidden idea to increase infrastructure construction speed
			infrastructure_investiture_click = {
				custom_effect_tooltip = treasury_loss_projects_TT
				if = { limit = { NOT = { has_country_flag = infrastructure_investiture_flag } }
					set_country_flag = infrastructure_investiture_flag
					add_ideas = infrastructure_investiture_idea
				}
				else = {
					clr_country_flag = infrastructure_investiture_flag
					remove_ideas = infrastructure_investiture_idea
				}
				ingame_update_setup = yes
				refresh_gui = yes
			}
			# - Arms Industry Stipends
			# This action triggers a hidden idea to increase arms military construction speed
			arms_industry_stipends_click = {
				custom_effect_tooltip = treasury_loss_projects_TT
				if = { limit = { NOT = { has_country_flag = arms_industry_stipends_flag } }
					set_country_flag = arms_industry_stipends_flag
					add_ideas = arms_industry_stipends_idea
				}
				else = {
					clr_country_flag = arms_industry_stipends_flag
					remove_ideas = arms_industry_stipends_idea
				}
				ingame_update_setup = yes
				refresh_gui = yes
			}
			# - Retool Shipyards
			# This action triggers a hidden idea to increase naval dockyard construction speed
			retool_shipyards_click = {
				custom_effect_tooltip = treasury_loss_projects_TT
				if = { limit = { NOT = { has_country_flag = retool_shipyards_flag } }
					set_country_flag = retool_shipyards_flag
					add_ideas = retool_shipyards_idea
				}
				else = {
					clr_country_flag = retool_shipyards_flag
					remove_ideas = retool_shipyards_idea
				}
				ingame_update_setup = yes
				refresh_gui = yes
			}

			# - Military Factories Employent
			# This action reduces employment in this building type
			military_factory_employment_button_click = {
				if = {
					limit = {
						check_variable = { military_factory_employment_var = 0 }
					}
				}
				else = {
					add_to_variable = { military_factory_employment_var = -0.05 }
					add_political_power = -20
				}
				ingame_update_setup = yes
			}
			# This action increases employment in this building type
			military_factory_employment_button_right_click = {
				if = {
					limit = {
						check_variable = { military_factory_employment_var = 1 }
					}
				}
				else = {
					add_to_variable = { military_factory_employment_var = 0.05 }
					add_political_power = -20
				}
				ingame_update_setup = yes
			}
			# - Civilian Factories Employent
			# This action reduces employment in this building type
			civilian_factory_employment_button_click = {
				if = {
					limit = {
						check_variable = { civilian_factory_employment_var = 0 }
					}
				}
				else = {
					add_to_variable = { civilian_factory_employment_var = -0.05 }
					add_political_power = -20
				}
				ingame_update_setup = yes
			}
			# This action increases employment in this building type
			civilian_factory_employment_button_right_click = {
				if = {
					limit = {
						check_variable = { civilian_factory_employment_var = 1 }
					}
				}
				else = {
					add_to_variable = { civilian_factory_employment_var = 0.05 }
					add_political_power = -20
				}
				ingame_update_setup = yes
			}
			# - Naval Factories Employent
			# This action reduces employment in this building type
			naval_factory_employment_button_click = {
				if = {
					limit = {
						check_variable = { naval_factory_employment_var = 0 }
					}
				}
				else = {
					add_to_variable = { naval_factory_employment_var = -0.05 }
					add_political_power = -20
				}
				ingame_update_setup = yes
			}
			# This action increases employment in this building type
			naval_factory_employment_button_right_click = {
				if = {
					limit = {
						check_variable = { naval_factory_employment_var = 1 }
					}
				}
				else = {
					add_to_variable = { naval_factory_employment_var = 0.05 }
					add_political_power = -20
				}
				ingame_update_setup = yes
			}
			# - Offices Employent
			# This action reduces employment in this building type
			office_employment_button_click = {
				if = {
					limit = {
						check_variable = { office_employment_var = 0 }
					}
				}
				else = {
					add_to_variable = { office_employment_var = -0.05 }
					add_political_power = -20
				}
				ingame_update_setup = yes
			}
			# This action increases employment in this building type
			office_employment_button_right_click = {
				if = {
					limit = {
						check_variable = { office_employment_var = 1 }
					}
				}
				else = {
					add_to_variable = { office_employment_var = 0.05 }
					add_political_power = -20
				}
				ingame_update_setup = yes
			}

			## BOTTOM BAR
			bottom_bar_debt_bg_click = {
				if = {
					limit = { check_variable = { interest_rate < 20 } }
					add_to_variable = { treasury = 1 }
					add_to_variable = { debt = 1.01 }
					ingame_update_setup = yes
					refresh_gui = yes
				}
				log = "[GetDateText]: [THIS.GetName]: 1b debt taken (Total Debt: Total Debt: [?debt]b, Interest Rate: [?interest_rate]% balance:[?treasury_rate]b, Total Treasury:[?treasury], Total Treasury Rate:[?treasury_rate])"
			}
			bottom_bar_debt_bg_control_click = {
				if = {
					limit = { check_variable = { interest_rate < 20 } }
					add_to_variable = { treasury = 10 }
					add_to_variable = { debt = 10.1 }
					ingame_update_setup = yes
					refresh_gui = yes
				}
				log = "[GetDateText]: [THIS.GetName]: 10b debt taken (Total Debt: [?debt]b, Interest Rate: [?interest_rate]% balance:[?treasury_rate]b, Total Treasury:[?treasury], Total Treasury Rate:[?treasury_rate])"
			}
			bottom_bar_debt_bg_shift_click = {
				if = {
					limit = { check_variable = { interest_rate < 20 } }
					add_to_variable = { treasury = 100 }
					add_to_variable = { debt = 101 }
					ingame_update_setup = yes
					refresh_gui = yes
				}
				log = "[GetDateText]: [THIS.GetName]: 100b debt taken (Total Debt: [?debt]b, Interest Rate: [?interest_rate]% balance:[?treasury_rate]b, Total Treasury:[?treasury], Total Treasury Rate:[?treasury_rate])"
			}

		  	#Repay debt
			bottom_bar_debt_bg_right_click = {
				if = {
					limit = { check_variable = { treasury > 1 } }
					subtract_from_variable = { treasury = 1 }
					subtract_from_variable = { debt = 1 }
					ingame_update_setup = yes
					refresh_gui = yes
					log = "[GetDateText]: [THIS.GetName]: 1b debt paid (Total Debt: [?debt]b, Interest Rate: [?interest_rate]% balance:[?treasury_rate]b, Total Treasury:[?treasury]), Total Treasury Rate:[?treasury_rate]"
				}
			}
			bottom_bar_debt_bg_control_right_click = {
				if = {
					limit = { check_variable = { treasury > 10 } }
					subtract_from_variable = { treasury = 10 }
					subtract_from_variable = { debt = 10 }
					ingame_update_setup = yes
					refresh_gui = yes
					log = "[GetDateText]: [THIS.GetName]: 10b debt paid (Total Debt: [?debt]b, Interest Rate: [?interest_rate]% balance:[?treasury_rate]b, Total Treasury:[?treasury], Total Treasury Rate:[?treasury_rate])"
				}
			}
			bottom_bar_debt_bg_shift_right_click = {
				if = {
					limit = { check_variable = { treasury > 100 } }
					subtract_from_variable = { treasury = 100 }
					subtract_from_variable = { debt = 100 }
					ingame_update_setup = yes
					refresh_gui = yes
					log = "[GetDateText]: [THIS.GetName]: 100b debt paid (Total Debt: [?debt]b, Interest Rate: [?interest_rate]% balance:[?treasury_rate]b, Total Treasury:[?treasury], Total Treasury Rate:[?treasury_rate])"
				}
			}
			#Pay off all debt
			bottom_bar_debt_bg_alt_right_click = {
				if = {
					limit = { check_variable = { treasury > debt } }
					subtract_from_variable = { treasury = debt }
					subtract_from_variable = { debt = debt }
					ingame_update_setup = yes
					refresh_gui = yes
				}
			}

			bottom_bar_int_investments_bg_right_click = {
				subtract_from_variable = { int_investments = 1 }
				add_to_variable = { treasury = 0.60 }
				ingame_update_setup = yes
			}
			bottom_bar_int_investments_bg_control_right_click = {
				subtract_from_variable = { int_investments = 10 }
				add_to_variable = { treasury = 6.0 }
				ingame_update_setup = yes
			}
			bottom_bar_int_investments_bg_shift_right_click = {
				subtract_from_variable = { int_investments = 100 }
				add_to_variable = { treasury = 60 }
				ingame_update_setup = yes
			}
			bottom_bar_int_investments_bg_shift_click = {
				if = { limit = { has_country_flag = int_reinvestment_flag }
					clr_country_flag = int_reinvestment_flag
				}
				else = {
					set_country_flag = int_reinvestment_flag
				}
				ingame_update_setup = yes
			}
		}

		# AI Section
		# Note: 3 days - 72 Hrs
		# Functional Notes:
		# ai_enabled - triggers that engage the AI for this GUI
		# ai_test_interval - timeframe between AI checks
		# ai_check - trigger the AI looks for to determine if it needs to look at a button
		# ai_weights - modifiers to determine AI habits
		# ai_max_weight_taken_per_test - Determines number of elements to check for the GUI

		# If you wish to see the values outputted from this, enable human_ai and debug in console, then view scripted_ai.log in the logs.

		# Summary: Every time this ai_check runs per the parameters section directly below, the AI calculates the total factor of each option (increase/lower pop and corp tax (4 options) and printing money), and chooses to do the highest option of all these. To prevent the AI from actually choosing one of the options every single time ai_check runs (to not waste PP), each option has relatively restrictive modifiers to factor which make it 0 in many situations. As a result, most time when ai_check runs it returns with 0 factor for all options, making the AI choose none of them.

		ai_enabled = { always = yes }
		ai_test_interval = 72 # 3 Days
		ai_max_weight_taken_per_test = 1
		ai_check = {
			has_political_power > 200
		}

		ai_weights = {
			# Population Tax Rate Clicks
			increase_population_tax_click = {
				ai_will_do = {
					factor = 25
					modifier = {
						factor = 0
						NOT = {
							tag = SOV
							tag = USA
						}
						date < 2006.6.1
						# Makes AI focus on reducing the corruption levels that take away 5% tax revenue each level rather than increasing taxes which wouldn't be as efficient.
						OR = {
							has_idea = systematic_corruption
							has_idea = unrestrained_corruption
							has_idea = rampant_corruption
							has_idea = crippling_corruption
							has_idea = paralyzing_corruption
						}
					}
					modifier = {
						factor = 0
						tag = SOV
						date < 2006.6.1
						check_variable = { population_tax_rate > 15 }
					}
					#help stupid USA
					modifier = {
						factor = 0
						tag = USA
						date < 2002.6.1
						check_variable = { population_tax_rate < 20 }
					}
					#nonono stupid AI. No click!
					modifier = {
						factor = 0
						has_stability < 0.26
						date < 2006.6.1
						check_variable = { population_tax_rate > 30 }
					}
					# General Economic Factors
					modifier = {
						set_temp_variable = { interest_rate_tmp = interest_rate }
						check_variable = { intrest_rate_tmp > -1 }
						add = interest_rate_tmp
					}
					modifier = {
						check_variable = { treasury_rate < 0 }
						factor = ai_change_population_taxes
					}
					modifier = {
						factor = 1.10
						OR = {
							has_idea = depression
							has_idea = recession
						}
					}
					modifier = {
						factor = 0.60
						OR = {
							has_idea = stagnation
							has_idea = stable_growth
							has_idea = fast_growth
						}
					}
					modifier = {
						factor = 0.40
						has_idea = economic_boom
					}
					# We are a poor country, we do not have industry. People are new gold!
					modifier = {
						factor = 1.10
						check_variable = { treasury_rate < 0 }
						has_stability > 0.45
						num_of_civilian_factories < 5
					}
					# Bosnia thing
					modifier = {
						factor = 0.01
						original_tag = BOS
						OR = {
							date < 2001.1.1
							has_stability < 0.40
						}
					}
					# Killswitch
					modifier = {
						factor = 0
						has_global_flag = GAME_RULE_enabled_hard_economic_ai
						NOT = {
							has_idea = economic_boom
						}
					}
					modifier = {
						factor = 0
						has_global_flag = GAME_RULE_enabled_hard_economic_ai
						NOT = {
							has_idea = negligible_corruption
						}
					}
					modifier = {
						factor = 0
						OR = {
							has_country_flag = temp_decrease_population_taxes
							has_country_flag = no_personal_tax_rate_change
							has_stability < 0.15 # minimal stability for all = 15%
							check_variable = { treasury_rate > 9.99 }
						}
					}
				}
			}
			decrease_population_tax_click = {
				ai_will_do = {
					factor = 25
					# Generic
					modifier = {
						set_temp_variable = { negative_interest_rate = interest_rate }
						multiply_temp_variable = { negative_interest_rate = -2 }
						check_variable = { negative_interest_rate < 1 }
						add = negative_interest_rate
					}
					modifier = {
						check_variable = { treasury_rate > 0 }
						factor = ai_change_population_taxes
					}
					modifier = {
						factor = 0.60
						OR = {
							has_idea = depression
							has_idea = recession
						}
					}
					modifier = {
						factor = 1.10
						OR = {
							has_idea = stagnation
							has_idea = stable_growth
							has_idea = fast_growth
						}
					}
					modifier = {
						factor = 1.15
						has_idea = economic_boom
					}


					# Killswitch
					modifier = {
						factor = 0
						has_global_flag = GAME_RULE_enabled_hard_economic_ai
						NOT = {
							has_idea = economic_boom
						}
					}
					modifier = {
						factor = 0
						has_global_flag = GAME_RULE_enabled_hard_economic_ai
						NOT = {
							has_idea = negligible_corruption
						}
					}
					modifier = {
						factor = 0
						OR = {
							has_country_flag = temp_increase_population_taxes
							has_country_flag = no_personal_tax_rate_change
							check_variable = { treasury_rate < 0 }
							check_variable = { population_tax_rate < 10 } #minimal population tax rate for all = 9
						}
					}
					modifier = {
						factor = 0.1
						OR = {
							has_idea = social_01
							has_idea = social_02
							has_idea = social_03
							has_idea = social_04
							has_idea = social_05
							has_idea = social_06
							has_idea = health_01
							has_idea = health_02
							has_idea = health_03
							has_idea = health_04
							has_idea = health_05
							has_idea = health_06
							has_idea = edu_01
							has_idea = edu_02
							has_idea = edu_03
							has_idea = edu_04
							has_idea = edu_05
						}
					}
				}
			}
			# Corporate Tax Rate Clicks
			increase_corporate_tax_click = {
				ai_will_do = {
					factor = 35
					modifier = {
						factor = 0
						date < 2006.6.1
						NOT = {
							tag = SOV
							tag = USA
						}
						check_variable = { corporate_tax_rate > 20 }
					}
					modifier = {
						factor = 0
						date < 2006.6.1
						# Makes AI focus on reducing the corruption levels that take away 5% tax revenue each level rather than increasing taxes which wouldn't be as efficient.
						OR = {
							has_idea = systematic_corruption
							has_idea = unrestrained_corruption
							has_idea = rampant_corruption
							has_idea = crippling_corruption
							has_idea = paralyzing_corruption
						}
						num_of_available_civilian_factories < 50
					}
					modifier = {
						factor = 0
						date < 2006.6.1
						tag = SOV
						check_variable = { corporate_tax_rate > 15 }
					}
					#help stupid uSA.
					modifier = {
						factor = 10
						tag = USA
						has_idea = draft_army
					}
					modifier = {
						factor = 0.25
						NOT = {
							has_idea = social_06
							has_idea = health_06
							has_idea = edu_05
						}
						ai_has_high_surplus = no
					}
					modifier = {
						factor = 0.25
						OR = {
							tag = USA
							tag = SOV
							tag = CHI
						}
						check_variable = { treasury_rate > 2.00 }
						check_variable = { treasury_rate < 10.00 }
						#ai_has_high_surplus = no
					}
					# Generic Economic
					modifier = {
						set_temp_variable = { interest_rate_tmp = interest_rate }
						check_variable = { intrest_rate_tmp > -1 }
						add = interest_rate_tmp
					}
					modifier = {
						check_variable = { treasury_rate < 0 }
						factor = ai_change_corporate_taxes
					}
					modifier = {
						factor = 1.50
						OR = {
							has_idea = depression
							has_idea = recession
							has_idea = stagnation
						}
					}
					modifier = {
						factor = 1.25
						OR = {
							has_idea = fast_growth
							has_idea = stable_growth
							has_idea = economic_boom
						}
					}
					# Killswitch
					modifier = {
						factor = 0
						has_global_flag = GAME_RULE_enabled_hard_economic_ai
						OR = {
							NOT = { has_idea = economic_boom }
							NOT = { has_idea = negligible_corruption }
						}
					}
					modifier = {
						factor = 0
						OR = {
							has_country_flag = temp_decrease_corporate_taxes
							has_country_flag = no_corporate_tax_rate_change
							check_variable = { treasury_rate > 9.99 }
							num_of_civilian_factories < 5
						}
					}
				}
			}
			decrease_corporate_tax_click = {
				ai_will_do = {
					factor = 25
					modifier = {
						factor = 0
						tag = CHI
						check_variable = { corporate_tax_rate < 14 }
					}
					modifier = {
						factor = 0
						date > 2002.1.1
						OR = {
							tag = USA
							tag = SOV
							tag = CHI
						}
						NOT = {
							has_idea = social_06
							has_idea = health_06
							has_idea = edu_05
						}
						ai_has_high_surplus = no
					}
					#Let's help the stupid United States regain the ability to build factories >8)
					modifier = {
						factor = 5.0
						tag = USA
						date < 2006.6.2
						check_variable = { corporate_tax_rate > 27 }
					}
					modifier = {
						factor = 200
						tag = USA
						date < 2000.6.2
						check_variable = { corporate_tax_rate > 31 }
					}
					modifier = {
						factor = 0
						tag = USA
						date > 2000.6.1
						date < 2002.6.1
						check_variable = { corporate_tax_rate < 31 }
					}
					modifier = {
						factor = 25
						tag = USA
						date > 2006.6.1
						check_variable = { corporate_tax_rate > 30 }
					}
					# Generic Economic
					modifier = {
						set_temp_variable = { negative_interest_rate = interest_rate }
						multiply_temp_variable = { negative_interest_rate = -2 }
						add = negative_interest_rate
						always = yes
					}
					modifier = {
						check_variable = { treasury_rate > 0 }
						factor = ai_change_corporate_taxes
					}
					modifier = {
						factor = 0.95
						OR = {
							has_idea = depression
							has_idea = recession
							has_idea = stagnation
						}
					}
					modifier = {
						factor = 0.90
						OR = {
							has_idea = fast_growth
							has_idea = stable_growth
							has_idea = economic_boom
						}
					}

					# Killswitch
					modifier = {
						factor = 0
						OR = {
							has_country_flag = temp_increase_corporate_taxes
							has_country_flag = no_corporate_tax_rate_change
							check_variable = { treasury_rate < 0 }
							check_variable = { corporate_tax_rate < 11 } #minimal tax rate for all = 11
						}
					}
				}
			}
			print_money_button_click = {
				ai_will_do = {
					factor = 1
					modifier = {
						add = interest_rate
					}
					modifier = {
						factor = 2
						check_variable = { interest_rate > 20 }
					}
					modifier = {
						factor = 0.3
						check_variable = { treasury_rate > 0 }
					}
					modifier = {
						factor = 0
						# Makes AI focus on reducing the corruption levels to get more efficient tax revenue before costing precious productivity for some quick cash that is based on revenue.
						OR = {
							has_idea = systematic_corruption
							has_idea = unrestrained_corruption
							has_idea = rampant_corruption
							has_idea = crippling_corruption
							has_idea = paralyzing_corruption
						}
					}
					modifier = {
						factor = 0
						OR = {
							check_variable = { interest_rate < 13 } # Let the AI try and save themselves from growing debt without sacrificing productivity.
							check_variable = { interest_rate > 35 } # No hope for the AI anymore after they have 35%+ interest rate, let them death spiral.
						}
					}
					modifier = {
						factor = 0
						set_temp_variable = { interest_expense_to_total_expense_ratio = debt_rate }
						divide_temp_variable = { interest_expense_to_total_expense_ratio = display_expense }
						check_variable = { interest_expense_to_total_expense_ratio < 0.25 } # Doesn't print money if interest expense (debt_rate) is less than 25% of their total expenses. Possible for countries to have high interest rates but make up a minority of expenses due to high spending on welfare or health and the AI should focus on lowering those first before using PP on printing money.
					}
					modifier = {
						factor = 0
						check_variable = { printing_money_var > 4 } # Penalty probably too harsh after 4 recent prints which icreases the productivity cost of printing by 80% already.
					}
					modifier = {
						factor = 0
						check_variable = { debt < 5 } # Actual interest on debt is rounded to 0.000 when debt is $5b ish or below, even if interest rate is 50%, so no need to print if that's true (only affects microstates/countries with no GDP basically).
					}
				}
			}
		}
	}
}